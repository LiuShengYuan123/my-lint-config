export default "{\"documentCount\":169,\"nextId\":169,\"documentIds\":{\"0\":\"0\",\"1\":\"0#设计目的\",\"2\":\"0#为什要学习前端工程化\",\"3\":\"0#配套工具\",\"4\":\"0#联系\",\"5\":\"1\",\"6\":\"1#背景\",\"7\":\"1#cli-使用\",\"8\":\"1#安装\",\"9\":\"1#使用\",\"10\":\"1#encode-fe-lint-init-一键接入\",\"11\":\"1#node-js-api-使用\",\"12\":\"1#安装-1\",\"13\":\"1#api\",\"14\":\"1#init-初始化\",\"15\":\"1#eslinttype\",\"16\":\"1#配置\",\"17\":\"2\",\"18\":\"2#_1-css\",\"19\":\"2#_1-1-编码风格\",\"20\":\"2#_1-2-选择器\",\"21\":\"2#_1-3-属性和属性值\",\"22\":\"2#_1-4-其他\",\"23\":\"2#_2-sass-和-less\",\"24\":\"2#参考资料\",\"25\":\"3\",\"26\":\"3#_1-文档\",\"27\":\"3#_1-1-文档类型\",\"28\":\"3#_1-2-语言\",\"29\":\"3#_1-3-元数据\",\"30\":\"3#_1-4-资源加载\",\"31\":\"3#_1-5-页面标题\",\"32\":\"3#_2-编码\",\"33\":\"3#_2-1-缩进\",\"34\":\"3#_2-2-注释\",\"35\":\"3#_2-3-标签\",\"36\":\"3#_2-4-属性\",\"37\":\"3#_2-5-语义化\",\"38\":\"3#_2-6-可访问性\",\"39\":\"3#_3-脚手架模板\",\"40\":\"3#参考资料\",\"41\":\"4\",\"42\":\"4#_1-编码风格\",\"43\":\"4#_1-1-缩进\",\"44\":\"4#_1-2-分号\",\"45\":\"4#_1-3-逗号\",\"46\":\"4#_1-4-块\",\"47\":\"4#_1-4-2-大括号换行风格\",\"48\":\"4#_1-5-空格\",\"49\":\"4#_1-6-空行\",\"50\":\"4#_1-7-最大字符数和最大行数\",\"51\":\"4#_2-语言特性\",\"52\":\"4#_2-1-变量声明\",\"53\":\"4#_2-2-原始类型\",\"54\":\"4#_2-2-5-字符串\",\"55\":\"4#_2-3-数组\",\"56\":\"4#_2-4-对象\",\"57\":\"4#_2-5-函数\",\"58\":\"4#_2-6-类\",\"59\":\"4#_2-7-模块\",\"60\":\"4#_2-8-操作符\",\"61\":\"4#_2-9-控制语句\",\"62\":\"4#_2-10-其他\",\"63\":\"4#_3-注释\",\"64\":\"4#_4-命名\",\"65\":\"4#参考资料\",\"66\":\"5\",\"67\":\"5#_1-编码风格\",\"68\":\"5#_2-安全规约\",\"69\":\"5#_3-最佳实践\",\"70\":\"5#参考资料\",\"71\":\"6\",\"72\":\"6#编码风格\",\"73\":\"7\",\"74\":\"7#前言\",\"75\":\"7#_1-文件\",\"76\":\"7#_2-格式\",\"77\":\"7#样本示例\",\"78\":\"7#参考资料\",\"79\":\"8\",\"80\":\"8#前言\",\"81\":\"8#_1-空格\",\"82\":\"8#_2-标点符号\",\"83\":\"8#_3-全角和半角\",\"84\":\"8#_4-名词\",\"85\":\"8#附录\",\"86\":\"8#参考资料\",\"87\":\"9\",\"88\":\"9#_1-git-提交日志格式规约\",\"89\":\"9#_1-1-前言\",\"90\":\"9#_1-2-基本的-message-格式\",\"91\":\"9#_1-2-1-字数限制\",\"92\":\"9#_1-2-2-语言选择\",\"93\":\"9#_1-3-message-header\",\"94\":\"9#_1-3-1-type\",\"95\":\"9#_1-3-2-scope\",\"96\":\"9#_1-3-3-subject\",\"97\":\"9#引用-issues\",\"98\":\"9#破坏性变动-breaking-changes\",\"99\":\"9#_2-git-分支命名规约\",\"100\":\"9#_2-1-分支模型选择的说明\",\"101\":\"9#_2-2-分支命名\",\"102\":\"9#_2-3-多版本分支命名\",\"103\":\"9#_3-git-tag-命名规约\",\"104\":\"9#参考资料\",\"105\":\"10\",\"106\":\"10#安装\",\"107\":\"10#使用\",\"108\":\"10#设置-git-hook\",\"109\":\"11\",\"110\":\"11#使用\",\"111\":\"11#引入插件\",\"112\":\"11#使用-presets\",\"113\":\"11#支持的规则\",\"114\":\"11#no-broad-semantic-versioning\",\"115\":\"11#规则内容\",\"116\":\"11#no-http-url\",\"117\":\"11#规则内容-1\",\"118\":\"11#何时不适用\",\"119\":\"11#no-js-in-ts-project\",\"120\":\"11#规则内容-2\",\"121\":\"11#规则选项\",\"122\":\"11#no-secret-info\",\"123\":\"11#规则内容-3\",\"124\":\"12\",\"125\":\"12#javascript-项目-encode-fe-eslint-config\",\"126\":\"12#依赖\",\"127\":\"12#安装\",\"128\":\"12#配置\",\"129\":\"12#javascript-react-项目-encode-fe-eslint-config-react\",\"130\":\"12#依赖-1\",\"131\":\"12#安装-1\",\"132\":\"12#配置-1\",\"133\":\"12#javascript-vue-项目-encode-fe-eslint-config-vue\",\"134\":\"12#依赖-2\",\"135\":\"12#安装-2\",\"136\":\"12#配置-2\",\"137\":\"12#javascript-node-js-项目-encode-fe-eslint-config-node\",\"138\":\"12#依赖-3\",\"139\":\"12#安装-3\",\"140\":\"12#配置-3\",\"141\":\"12#typescript-项目-encode-fe-eslint-config-typescript\",\"142\":\"12#依赖-4\",\"143\":\"12#安装-4\",\"144\":\"12#配置-4\",\"145\":\"12#typescript-react-项目-encode-fe-eslint-config-typescript-react\",\"146\":\"12#依赖-5\",\"147\":\"12#安装-5\",\"148\":\"12#配置-5\",\"149\":\"12#typescript-vue-项目-encode-fe-eslint-config-typescript-vue\",\"150\":\"12#依赖-6\",\"151\":\"12#安装-6\",\"152\":\"12#配置-6\",\"153\":\"12#typescript-node-js-项目-encode-fe-eslint-config-typescript-node\",\"154\":\"12#依赖-7\",\"155\":\"12#安装-7\",\"156\":\"12#配置-7\",\"157\":\"12#配合-prettier-使用\",\"158\":\"12#安装-8\",\"159\":\"12#配置-8\",\"160\":\"12#将风格问题降级\",\"161\":\"12#了解更多\",\"162\":\"13\",\"163\":\"13#安装\",\"164\":\"13#使用\",\"165\":\"14\",\"166\":\"14#安装\",\"167\":\"14#使用\",\"168\":\"15\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[2,27],\"2\":[2,42],\"3\":[2,45],\"4\":[2,12],\"5\":[3,11],\"6\":[1,49],\"7\":[2],\"8\":[1,12],\"9\":[1],\"10\":[2,95],\"11\":[4],\"12\":[1,7],\"13\":[1],\"14\":[2,42],\"15\":[1,19],\"16\":[1,46],\"17\":[2,10],\"18\":[2],\"19\":[2,131],\"20\":[3,74],\"21\":[3,237],\"22\":[3,29],\"23\":[2,157],\"24\":[1,15],\"25\":[2],\"26\":[2],\"27\":[2,35],\"28\":[3,31],\"29\":[3,48],\"30\":[3,116],\"31\":[3,19],\"32\":[2],\"33\":[3,36],\"34\":[2,33],\"35\":[3,48],\"36\":[3,62],\"37\":[3,42],\"38\":[3,44],\"39\":[2,51],\"40\":[1,8],\"41\":[2,12],\"42\":[2,2],\"43\":[2,21],\"44\":[3,59],\"45\":[3,58],\"46\":[3,37],\"47\":[4,79],\"48\":[3,83],\"49\":[3,48],\"50\":[3,60],\"51\":[2],\"52\":[3,181],\"53\":[2,127],\"54\":[3,45],\"55\":[3,125],\"56\":[3,141],\"57\":[3,309],\"58\":[3,89],\"59\":[3,116],\"60\":[3,117],\"61\":[3,132],\"62\":[3,86],\"63\":[2,139],\"64\":[2,139],\"65\":[1,7],\"66\":[2,13],\"67\":[2,130],\"68\":[2,69],\"69\":[2,78],\"70\":[1,7],\"71\":[2,11],\"72\":[1,448],\"73\":[2],\"74\":[1,37],\"75\":[2,29],\"76\":[2,127],\"77\":[1,50],\"78\":[1,7],\"79\":[1],\"80\":[1,14],\"81\":[2,71],\"82\":[2,42],\"83\":[2,55],\"84\":[2,27],\"85\":[1,91],\"86\":[1,6],\"87\":[2],\"88\":[3],\"89\":[2,12],\"90\":[4,15],\"91\":[3,24],\"92\":[3,16],\"93\":[4],\"94\":[3,39],\"95\":[4,29],\"96\":[3,88],\"97\":[1,40],\"98\":[2,27],\"99\":[3],\"100\":[3,21],\"101\":[2,44],\"102\":[3,18],\"103\":[4,25],\"104\":[1,18],\"105\":[4,13],\"106\":[1,12],\"107\":[1,12],\"108\":[3,21],\"109\":[4,13],\"110\":[1],\"111\":[1,16],\"112\":[2,12],\"113\":[1],\"114\":[1,9],\"115\":[1,14],\"116\":[1,6],\"117\":[1,12],\"118\":[1,4],\"119\":[1,6],\"120\":[1,15],\"121\":[1,10],\"122\":[1,6],\"123\":[1,21],\"124\":[4,12],\"125\":[6,19],\"126\":[1,13],\"127\":[1,13],\"128\":[1,6],\"129\":[9,13],\"130\":[1,23],\"131\":[1,15],\"132\":[1,14],\"133\":[9,14],\"134\":[1,14],\"135\":[1,14],\"136\":[1,7],\"137\":[9,16],\"138\":[1,16],\"139\":[1,14],\"140\":[1,7],\"141\":[7,17],\"142\":[1,13],\"143\":[1,13],\"144\":[1,21],\"145\":[10,16],\"146\":[1,23],\"147\":[1,15],\"148\":[1,15],\"149\":[10,16],\"150\":[1,15],\"151\":[1,14],\"152\":[1,8],\"153\":[10,21],\"154\":[1,16],\"155\":[1,14],\"156\":[1,8],\"157\":[3,14],\"158\":[1,9],\"159\":[1,24],\"160\":[1,31],\"161\":[1,71],\"162\":[4,8],\"163\":[1,10],\"164\":[1,9],\"165\":[4,8],\"166\":[1,12],\"167\":[1,9],\"168\":[1,3]},\"averageFieldLength\":[2.2662721893491096,43.15588536531992],\"storedFields\":{\"0\":{\"h\":\"\"},\"1\":{\"h\":\"⭐ 设计目的\",\"t\":[\"随着前端技术的发展，前端项目正在变得越来越复杂。JavaScript 作为一门弱类型解释性编程语言，其灵活多变的语法极大的提高了前端开发效率，但同时也存在一系列问题。在大型项目开发过程中，代码维护所占的时间比重往往大于新功能的开发。因此编写符合团队编码规范的代码是至关重要的。 一致性的代码规范可以增强团队开发协作效率、提高代码质量、减少遗留系统维护的负担。但是每个人的代码编写喜好不同，代码风格也会迥然不同，若要一个团队内所有的成员都能发挥最大程度的价值，一个具有普适性的标准是必不可少的。\",\"那么，如何制定前端团队的代码规范，如何在团队内进行最小成本的推广，就是一个合格的前端架构师面临的一大难题。很多团队的基础建设都只是简单地知晓其中一部分规范工具的使用，但却没有一套完整的工程化产出来助力研发同学实现规范落地。因此，如果我们能够产出一套完整化的前端编码规范工具，都会对不仅能够解决存量项目的编码异味，还能够保证后续所有项目的编码质量。\"]},\"2\":{\"h\":\"💡 为什要学习前端工程化\",\"t\":[\"通过本套课程，您可以学会：\",\"学习如何通过 monorepo 和 pnpm 的多包管理方式开发一套多 npm 包的管理方式，以及如何将发包流程植入 CI 实现自动化发布，以及CHANGLOG的自动化更新部署；\",\"学习现有前端前沿的研发流程下，我们可以通过哪些工具提升项目的编码规范，并提供配套工具的最佳实践，包括但不限于eslint、stylelint、commitlint、markdownlint、husky等，以及如何将单元测试植入配套工具的具体实现；\",\"学习如何通过脚手架的方式，以交互式形式一键接入，实现对JavaScript、Typescript、React、Vue等不同类型的前端项目下的标准的语法限制；\",\"学习如何对存量项目进行优化：对于存量代码不符合规范的问题，支持一键扫描和一键修复，一键式的修复存量问题，最小化存量代码的更新成本；\",\"学习如何对新项目添加规范：支持一键接入新增项目，通过结合gitpre-commit钩子，对提交文件进行编码规范的扫描；同时通过husky的commit-msg钩子，对本次代码提交message的格式进行扫描。\"]},\"3\":{\"h\":\"🛋️ 配套工具\",\"t\":[\"我们引入了多个业界流行的 Linter 作为规约文档的配套工具，并根据规约内容定制了对应的规则包，它们包括：\",\"规约\",\"Lint 工具\",\"NPM包\",\"JavaScript 编码规范 TypeScript 编码规范 Node 编码规范\",\"ESLint\",\"encode-fe-eslint-config\",\"CSS 编码规范\",\"stylelint\",\"encode-fe-stylelint-config\",\"Git 规范\",\"commitlint\",\"encode-fe-commitlint-config\",\"文档规范\",\"markdownlint\",\"encode-fe-markdownlint-config\",\"encode-fe-spec-cli 收敛屏蔽了上述依赖和配置细节，提供简单的 CLI 和 Node.js API，让项目能够一键接入、一键扫描、一键修复、一键升级，并为项目配置 git commit 卡口，降低项目接入规约的成本。\",\"您可以使用encode-fe-spec-cli 方便地为项目接入全部规范。\"]},\"4\":{\"h\":\"📧 联系\",\"t\":[\"印客学院官网: http://encodestudio.cn\",\"GitHub: https://github.com/encode-studio-fe/fe-spec\"]},\"5\":{\"h\":\"encode-fe-lint\",\"t\":[\"encode-fe-lint 是印客学院 前端编码规范工程化的配套 Lint 工具，可以为项目一键接入规约、一键扫描和修复规约问题，保障项目的编码规范和代码质量。\"]},\"6\":{\"h\":\"背景\",\"t\":[\"我们引入了多个业界流行的 Linter 作为《阿里巴巴前端规约》的配套，并根据规约内容定制了规则包，它们包括：\",\"规约\",\"Lint 工具\",\"npm 包\",\"JavaScript 编码规范 TypeScript 编码规范 Node 编码规范\",\"ESLint\",\"encode-fe-eslint-config\",\"CSS 编码规范\",\"stylelint\",\"encode-fe-stylelint-config\",\"Git 规范\",\"commitlint\",\"encode-fe-commitlint-config\",\"文档规范\",\"markdownlint\",\"encode-fe-markdownlint-config\",\"可以看到这些 Linter 和规则包众多且零散，全部安装它们会给项目增加十几个依赖，接入和升级成本都比较高。\",\"encode-fe-lint 收敛屏蔽了这些依赖和配置细节，提供简单的 CLI 和 Node.js API，让项目能够一键接入、一键扫描、一键修复、一键升级，并为项目配置 git commit 卡口，降低项目接入规约的成本。\"]},\"7\":{\"h\":\"CLI 使用\"},\"8\":{\"h\":\"安装\",\"t\":[\"在终端执行：\",\"npm install encode-fe-lint -g \",\"安装完成后，可执行 encode-fe-lint -h 以验证安装成功。\"]},\"9\":{\"h\":\"使用\"},\"10\":{\"h\":\"：一键接入\",\"t\":[\"在项目根目录执行 encode-fe-lint init，即可一键接入规约，为项目安装规约 Lint 所需的依赖和配置。\",\"具体会做以下事情：\",\"安装各种依赖：包括 Linter 依赖，如 ESLint、stylelint、commitlint、markdownlint 等；配置依赖，如 encode-fe-eslint-config、encode-fe-stylelint-config、encode-fe-commitlint-config、encode-fe-markdownlint-config 等\",\"写入各种配置文件，包括： \",\".eslintrc.js、.eslintignore：ESLint 配置（继承 encode-fe-eslint-config）及黑名单文件\",\".stylelintrc.js、.stylelintignore：stylelint 配置（继承 encode-fe-stylelint-config）及黑名单文件\",\"commitlint.config.js：commitlint 配置（继承 encode-fe-commitlint-config）\",\".markdownlint.json、.markdownlintignore：markdownlint 配置及黑名单文件\",\".prettierrc.js：符合规约的 Prettier 配置\",\".editorconfig：符合规约的 editorconfig\",\".vscode/extensions.json：写入规约相关的 VSCode 插件推荐，包括 ESLint、stylelint、markdownlint、prettier 等\",\".vscode/settings.json：写入规约相关的 VSCode 设置，设置 ESLint 和 stylelint 插件的 validate 及保存时自动运行 fix，如果选择使用 Prettier，会同时将 prettier-vscode 插件设置为各前端语言的 defaultFormatter，并配置保存时自动格式化\",\"encode-fe-lint.config.jsencode-fe-lint 包的一些配置，如启用的功能等\",\"配置 git commit 卡口：使用 husky 设置代码提交卡口，在 git commit 时会运行 encode-fe-lint commit-file-scan 和 encode-fe-lint commit-msg-scan 分别对提交文件和提交信息进行规约检查。encode-fe-lint commit-file-scan 默认仅对 error 问题卡口，如果你想对 warn 问题也卡口，可以增加 --strict 参数以开启严格模式\",\"注 1：如果项目已经配置过 ESLint、stylelint 等 Linter，执行 encode-fe-lint init 将会提示存在冲突的依赖和配置，并在得到确认后进行覆盖：\",\"注 2：如果项目的 .vscode/ 目录被 .gitignore 忽略，可以在拉取项目后单独执行 encode-fe-lint init --vscode 命令写入 .vscode/extensions.json 和 .vscode/settings.json 配置文件\"]},\"11\":{\"h\":\"Node.js API 使用\"},\"12\":{\"h\":\"安装\",\"t\":[\"npm install encode-fe-lint --save \"]},\"13\":{\"h\":\"API\"},\"14\":{\"h\":\"init：初始化\",\"t\":[\"encode-fe-lint.init(config)：将项目一键接入规约，效果等同于 encode-fe-lint init\",\"示例：\",\"(await encode) - fe - lint.init({ eslintType: 'react', enableESLint: true, enableStylelint: true, enableMarkdownlint: true, enablePrettier: true, disableNpmInstall: false, }); \",\"config 参数如下：\",\"参数\",\"类型\",\"默认值\",\"说明\",\"cwd\",\"string\",\"-\",\"项目绝对路径\",\"eslintType\",\"ESLintType\",\"-\",\"语言和框架类型，如果不配置，等同于 encode-fe-lint init，控制台会出现选择器，如果配置，控制台就不会出现选择器\",\"enableESLint\",\"boolean\",\"true\",\"是否启用 ESLint，如果不配置默认值为 true，即默认启用 ESLint\",\"enableStylelint\",\"boolean\",\"-\",\"是否启用 stylelint，如果不配置，等同于 encode-fe-lint init，控制台会出现选择器，如果配置，控制台就不会出现选择器\",\"enableMarkdownlint\",\"boolean\",\"-\",\"是否启用 markdownlint，如果不配置，等同于 encode-fe-lint init，控制台会出现选择器，如果配置，控制台就不会出现选择器\",\"enablePrettier\",\"boolean\",\"-\",\"是否启用 Prettier\",\"disableNpmInstall\",\"boolean\",\"false\",\"是否禁用自动在初始化完成后安装依赖\"]},\"15\":{\"h\":\"ESLintType\",\"t\":[\"default: JavaScript 项目（未使用 React 和 Vue 的 JS 项目）\",\"react: JavaScript + React 项目\",\"vue: JavaScript + Vue 项目\",\"typescript/default: TypeScript 项目（未使用 React 和 Vue 的 TS 项目）\",\"typescript/react: TypeScript + React 项目\",\"typescript/vue: TypeScript + Vue 项目\",\"es5: ES5 及之前版本的 JavaScript 老项目\"]},\"16\":{\"h\":\"配置\",\"t\":[\"encode-fe-lint 基于一份配置进行扫描（但你也可以零配置使用），支持的配置参数有：\",\"参数\",\"类型\",\"默认值\",\"说明\",\"enableESLint\",\"boolean\",\"true\",\"是否启用 ESLint\",\"enableStylelint\",\"boolean\",\"true\",\"是否启用 stylelint\",\"enableMarkdownlint\",\"boolean\",\"true\",\"是否启用 markdownlint\",\"enablePrettier\",\"boolean\",\"-\",\"是否启用 Prettier\",\"eslintOptions\",\"ESLint.Options\",\"-\",\"ESLint 配置项，若未设置将使用执行目录下或内置的默认 eslintrc 和 eslintignore 进行扫描\",\"stylelintOptions\",\"stylelint.LinterOptions\",\"-\",\"stylelint 配置项，若未设置将使用执行目录下或内置的默认 stylelintrc 和 stylelintignore 进行扫描\",\"markdownlintOptions\",\"markdownlint.Options\",\"-\",\"markdownlint 配置项，若未设置将使用执行目录下或内置的默认 markdownlint 配置文件进行扫描\",\"encode-fe-lint 会读取执行目录下的 encode-fe-lint.config.js 作为配置文件。encode-fe-lint init 会在执行目录下新增如下的 encode-fe-lint.config.js 文件：\",\"module.exports = { enableESLint: true, enableStylelint: true, enableMarkdownlint: true, enablePrettier: true, }; \"]},\"17\":{\"h\":\"CSS 编码规范\",\"t\":[\"本规约涉及 CSS 及其预编译语言（Sass、Less）的编码风格和最佳实践，部分规则可通过 stylelint 工具落地。\"]},\"18\":{\"h\":\"1. CSS\"},\"19\":{\"h\":\"1.1. 编码风格\",\"t\":[\"详细规则如下：\",\"1.1.1.【强制】所有声明都应该以分号结尾，不能省略。stylelint: declaration-block-trailing-semicolon\",\"虽然 CSS 语法中最后一条声明的分号是可选的，但是使用分号可以增加代码的一致性和易用性。\",\"/* bad */ .selector { margin-top: 10px padding-left: 15px } /* good */ .selector { margin-top: 10px; padding-left: 15px; } \",\"1.1.2.【推荐】使用 2 个空格缩进，不要使用 4 个空格或 tab 缩进。stylelint: indentation\",\"/* bad */ .selector { padding-left: 15px; } /* good */ .selector { padding-left: 15px; } \",\"1.1.3.【推荐】选择器和 { 之间保留一个空格。stylelint: block-opening-brace-space-before\",\"/* bad */ .selector{ padding-left: 15px; } /* good */ .selector { padding-left: 15px; } \",\"1.1.4.【推荐】属性名和 : 之前无空格，: 和属性值之间保留一个空格。stylelint: declaration-colon-space-afterdeclaration-colon-space-before\",\"/* bad */ .selector { margin-top : 10px; padding-left:15px; } /* good */ .selector { margin-top: 10px; padding-left: 15px; } \",\"1.1.5.【推荐】>、+、~ 、|| 等组合器前后各保留一个空格。stylelint: selector-combinator-space-beforeselector-combinator-space-after\",\"/* bad */ .selector>.children { padding-left: 15px; } .selector+.brother { padding-left: 15px; } /* good */ .selector > .children { padding-left: 15px; } .selector + .brother { padding-left: 15px; } \",\"1.1.6.【推荐】在使用 , 分隔的属性值中，, 之后保留一个空格。stylelint: value-list-comma-space-after\",\"/* bad */ .selector { background-color: rgba(0,0,0,0.5); box-shadow: 0px 1px 2px rgba(0,0,0,0.5),inset 0 1px 0 rgba(255,255,255,0.5); } /* good */ .selector { background-color: rgba(0, 0, 0, 0.5); box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.5), inset 0 1px 0 rgba(255, 255, 255, 0.5); } \",\"1.1.7.【推荐】注释内容和注释符之间留有一个空格。stylelint: comment-whitespace-inside\",\"/* bad */ .selector { /*comment*/ /* comment */ /** *comment */ padding-left: 15px; } /* good */ .selector { /* comment */ /** * comment */ padding-left: 15px; } \",\"1.1.8.【推荐】声明块的右大括号 } 应单独成行。\",\"/* bad */ .selector { padding-left: 15px;} /* good */ .selector { padding-left: 15px; } \",\"1.1.9.【推荐】属性声明应单独成行。stylelint: declaration-block-single-line-max-declarations\",\"/* bad */ .selector { padding-left: 15px; margin-left: 10px; } /* good */ .selector { padding-left: 15px; margin-left: 10px; } \",\"1.1.10.【推荐】单行代码最多不要超过 100 个字符。 stylelint: max-line-length 除了以下两种情况：\",\"使用 url() 函数时\",\"CSS 属性值本身无法换行时，即属性值内无空格或逗号时\",\"/* bad */ background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.04, rgb(88, 94, 124)), color-stop(0.52, rgb(115, 123, 162))); /* good */ background-image: -webkit-gradient( linear, left bottom, left top, color-stop(0.04, rgb(88, 94, 124)), color-stop(0.52, rgb(115, 123, 162)) ); \",\"1.1.11.【参考】使用多个选择器时，每个选择器应该单独成行。stylelint: selector-list-comma-newline-after\",\"/* bad */ .selector, .selector-secondary, .selector-third { padding: 15px; margin-bottom: 15px; } /* good */ .selector, .selector-secondary, .selector-third { padding: 15px; margin-bottom: 15px; } \",\"1.1.12.【参考】声明块内只有一条语句时，也应该写成多行。\",\"/* bad */ .selector { padding-left: 15px; } /* good */ .selector { padding-left: 15px; } \",\"1.1.13.【参考】注释行上方需留有一行空行，除非上一行是注释或块的顶部。stylelint: comment-empty-line-before\",\"/* bad */ .selector { /* comment */ padding-left: 15px; /* comment */ padding-right: 15px; } /* good */ .selector { /* comment */ padding-left: 15px; /* comment */ padding-right: 15px; } \"]},\"20\":{\"h\":\"1.2. 选择器\",\"t\":[\"1.2.1.【参考】不要使用 id 选择器。stylelint: selector-max-id\",\"id 会带来过高的选择器优先级，使得后续很难进行样式覆盖（继而引发使用 !important 覆盖样式的恶性循环）。\",\"/* bad */ .normal { padding: 10px; } #special { padding: 15px; } /* good */ .normal { padding: 10px; } .normal.special { padding: 15px; } \",\"1.2.2.【参考】属性选择器的值始终用双引号包裹。stylelint: selector-attribute-quotes\",\"属性选择器的值的引号只有在某些情况下可以省略。\",\"/* bad */ input[type=text] { height: 20px; } /* good */ input[type=\\\"text\\\"] { height: 20px; } \",\"1.2.3.【参考】使用 CSS 选择器时，应注意以下性能问题：\",\"使用 class 而不是原生元素标签\",\"减少在经常出现的组件中使用个别属性选择器（如 [class^=\\\"...\\\"]）\",\"控制选择器的长度，每个组合选择器内的条目尽量不超过 3 个\",\"只从效率的角度来看，CSS 选择器从高（高效率）到低（低效率）的顺序是：\",\"ID 选择器， 比如 #header\",\"类选择器，比如 .header\",\"标签（元素）选择器，比如 div\",\"相邻兄弟选择器，比如 h2 + p\",\"子选择器，比如 ul > li\",\"后代选择器，比如 ul a\",\"通配符选择器，比如 *\",\"属性选择器，比如 [class^=\\\"grid-\\\"]\",\"伪类（伪元素）选择器，比如 a:hover、a::before\"]},\"21\":{\"h\":\"1.3. 属性和属性值\",\"t\":[\"1.3.1.【推荐】使用尽可能短的十六进制值。stylelint: color-hex-length\",\"/* bad */ .selector { color: #ffffff; } /* good */ .selector { color: #fff; } \",\"1.3.2.【推荐】不要使用 !important 重写样式。\",\"1.3.3.【推荐】十六进制值统一使用小写字母（小写字母更容易分辨）。stylelint: color-hex-case\",\"/* bad */ .selector { color: #FEFEFE; } /* good */ .selector { color: #fefefe; } \",\"1.3.4.【推荐】长度值为 0 时，省略掉长度单位。stylelint: length-zero-no-unit\",\"在 CSS 中，长度值为 0 时，它的单位是可选的（长度单位包括：em, ex, ch, vw, vh, cm, mm, in, pt, pc, px, rem, vmin, and vmax）。省略长度单位可以使代码更简洁：\",\"/* bad */ .selector { margin-top: 0px; font-size: 0em; } /* good */ .selector { margin-top: 0; font-size: 0; } \",\"1.3.5.【参考】保留小数点前的 0。stylelint: number-leading-zero\",\"在 CSS 中，大于 -1 小于 1 的小数，小数点前的 0 可以省略：\",\"/* bad */ .selector { opacity: .5; left: -.5px; } /* good */ .selector { opacity: 0.5; left: -0.5px; } \",\"对于是否省略小数点前的 0，业界存在争议：\",\"省略 0 的好处是：代码更简洁，可以减少一个字符\",\"不省略的好处是：代码可读性更好、一致性更强\",\"你可选择自己倾向的风格，在代码中风格统一即可，要么都省略，要么都保留。\",\"我们推荐保留 0，因为当今很多 CSS 压缩工具会在压缩时帮我们去掉 0，不存在多占用一个字符的问题。保留 0 能增强代码的可读性和一致性。\",\"1.3.6.【参考】属性声明的顺序。\",\"相关联的属性声明最好写成一组，并按如下顺序排序：\",\"定位：如 position、left、right、top、bottom、z-index\",\"盒模型：如 display、float、width、height、margin、padding、border\",\"文字排版：如 font、color、line-height、text-align\",\"外观：如 background\",\"其他属性\",\"「定位」和「盒模型」放在最前面，是因为它们决定了元素的布局、位置和尺寸。「定位」排在「盒模型」之前，是由于「定位」属性可以让元素脱离正常文本流，从而使「盒模型」属性失效。\",\"除了「定位」和「盒模型」，其他属性都只在元素内部起作用，不会对前两类属性的结果产生影响，因此放在后面。\",\".declaration-order { /* 定位 */ position: absolute; top: 0; right: 0; bottom: 0; left: 0; z-index: 100; /* 盒模型 */ display: block; float: right; width: 100px; height: 100px; border: 1px solid #e5e5e5; /* 排版 */ font: normal 13px \\\"Helvetica Neue\\\", sans-serif; line-height: 1.5; color: #333; text-align: center; /* 外观 */ background-color: #f5f5f5; /* 其他 */ opacity: 1; } \",\"更多 CSS 属性顺序参考如下列表：\",\"第一组\",\"第二组\",\"第三组\",\"第四组\",\"第五组\",\"第六组\",\"第七组\",\"content\",\"box-sizing\",\"background*\",\"font*\",\"opacity\",\"unicode-bidi\",\"transition*\",\"position\",\"*width\",\"color\",\"src\",\"visibility\",\"direction\",\"transform*\",\"top\",\"*height\",\"box-decoration-break\",\"line-height\",\"filter\",\"columns\",\"animation*\",\"right\",\"margin*\",\"box-shadow\",\"letter-spacing\",\"resize\",\"column-*\",\"bottom\",\"padding*\",\"outline*\",\"quotes\",\"cursor\",\"break-*\",\"left\",\"border*\",\"table-layout\",\"counter-*\",\"pointer-events\",\"page-break-*\",\"z-index\",\"caption-side\",\"-ms-writing-mode\",\"user-select\",\"orphans\",\"display\",\"empty-cells\",\"text-*\",\"widows\",\"vertical-align\",\"list-style*\",\"white-space\",\"*zoom\",\"flex*\",\"word-*\",\"orientation\",\"grid*\",\"overflow-wrap\",\"fill\",\"*gap\",\"tab-size\",\"stroke\",\"align-*\",\"hyphens\",\"justify-*\",\"interpolation-mode\",\"order\",\"float\",\"clear\",\"object-fit\",\"overflow*\",\"clip\",\"1.3.7.【参考】适时使用简写属性。stylelint: declaration-block-no-shorthand-property-overridesdeclaration-block-no-redundant-longhand-properties\",\"常见的简写属性包括：\",\"font\",\"background\",\"padding\",\"margin\",\"border\",\"border-radius\",\"使用简写属性时，需要显式地设置所有值。我们应该在真正需要设置所有值或大多数值时才使用简写属性。\",\"如果只是想设置某一个属性，则不应该使用简写属性：\",\"/* bad */ .selector { margin: 0 0 10px; } /* good */ .selector { margin-bottom: 10px; } \"]},\"22\":{\"h\":\"1.4. 其他\",\"t\":[\"1.4.1.【推荐】不要使用 CSS 的 @import。\",\"与 <link> 相比，@import 会在关键渲染路径上增加更多的往返（即关键路径的深度变长），这样会导致浏览器处理 CSS 文件速度变慢，因此我们应该避免使用 @import。\",\"<!-- bad --> <style> @import url(\\\"more.css\\\"); </style> <!-- good --> <link rel=\\\"stylesheet\\\" href=\\\"more.css\\\"> \"]},\"23\":{\"h\":\"2. 和\",\"t\":[\"对于 CSS 而言，可以在新项目中尝试放弃使用 Sass、Less 这样的处理器语言，因为：\",\"这些处理器语言是在一定历史条件下的产物，虽然这些产物在一定程度上提高开发者的开发效率，但不同的处理器语言也同时增加了项目的维护成本（特别是多人协作，多团队协作的时候）。\",\"更建议使用 PostCSS 处理器，它类似于 CSS 中的 Babel，不但具备 Sass 和 Less 的功能，而且社区繁荣，同时还可以根据自己的需求扩展相关的插件。\",\"随着 CSS 的一些新特性出现，Sass 和 Less 以往的优势也会慢慢消失。\",\"2.1.【推荐】四则运算符两侧各保留一个空格：\",\"/* bad */ .selector { width: $default-width/2; } /* good */ .selector { width: $default-width / 2; } \",\"2.2.【推荐】Mixin 名称和括号 () 间无空格，在拥有多个参数的表达式中， , 之前无空格，, 之后保留一个空格：\",\"/* bad */ .selector { .size(30px,20px); .clearfix (); } /* good */ .selector { .size(30px, 20px); .clearfix(); } \",\"2.3.【推荐】按如下顺序组织 Sass / Less 代码：\",\"@import 语句\",\"全局变量声明\",\"样式声明\",\"@import 'common/theme.scss'; $color-red: #f0f0f0; .selector { color: $color-red; } \",\"2.4.【推荐】对于 Sass 和 Less，块内的属性声明按如下顺序排序：\",\"标准属性声明：除了 mixin 调用、extend 子级选择器的声明，其他属性声明的顺序与「属性声明的顺序」章节的规则一致\",\"mixin 调用：Sass 的 @include 声明、Less 的 mixin 调用\",\"嵌套的子级选择器：将嵌套的选择器放到块的末尾，并且在其上方保留一行空行\",\".btn { background: #ccc; font-weight: bold; @include transition(background 0.5s ease); .icon { margin-right: 10px; } } \",\"2.5.【推荐】嵌套选择器的深度不要超过 3 层，否则可能带来一些副作用：\",\"与 HTML 结构强耦合，难以复用\",\"过高的选择器优先级\",\".container { .header { .user-name { // STOP！不要再嵌套更深选择器 } } } \",\"2.6.【推荐】可以使用双斜杠注释。但需要注意的是，编译为 CSS 后，代码中的双斜杠注释会被删除，而 /* */ 会被保留。\",\"// 单行注释 .selector-a { padding-left: 15px; } /* * 多行注释 * 多行注释 */ .selector-b { margin-left: 15px; } \",\"编译为 CSS 后，双斜杠注释会被删除：\",\".selector-a { padding-left: 15px; } /* * 多行注释 * 多行注释 */ .selector-b { margin-left: 15px; } \",\"2.7.【推荐】使用 Mixin (@mixin 和 @include 指令) 来让代码遵循 DRY 原则（Don't Repeat Yourself）、增加抽象性和降低复杂度。\",\"应避免使用 @extend 指令，它不够直观且具有潜在风险，尤其是在嵌套选择器中。即使继承的是顶层选择器，如果选择器的顺序发生变化，也可能引起问题（比如，如果它们存在于其他文件，而加载顺序发生了变化）。\",\"Extend 相比 Mixin 的好处是，如果无参数的 mixin 被多处使用，编译后会输出多段重复的代码。这时如果使用 @extend，可以避免这个问题。但是 gzip 等压缩工具就可以解决重复代码的问题，因此大多数情况下，你只需要使用 mixin 来让代码符合 DRY 原则。\"]},\"24\":{\"h\":\"参考资料\",\"t\":[\"Code Guide by @mdo\",\"Airbnb CSS / Sass Styleguide\",\"Google HTML/CSS Style Guide\",\"spec css-style-guide\"]},\"25\":{\"h\":\"HTML 编码规范\"},\"26\":{\"h\":\"1. 文档\"},\"27\":{\"h\":\"1.1. 文档类型\",\"t\":[\"1.1.1.【强制】使用 HTML5 DOCTYPE。\",\"在 HTML 文档的开头使用 <!DOCTYPE html> 来声明文档的 HTML 版本。\",\"<!-- bad - 非 HTML 5 DOCTYPE --> <!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\"> <html></html> <!-- good --> <!DOCTYPE html> <html></html> \"]},\"28\":{\"h\":\"1.2. 语言\",\"t\":[\"1.2.1.【推荐】指定 html 标签上的 lang 属性。\",\"HTML5 规范中提到：\",\"推荐开发者在 html 元素上指定 lang 属性，以指出文档的语言。这有助于读屏、翻译等工具的工作。\",\"lang 属性的值由 language-subtags 组成，在 BCP47 中定义，了解更多。\",\"<html lang=\\\"zh-CN\\\"> <!-- ... --> </html> \"]},\"29\":{\"h\":\"1.3. 元数据\",\"t\":[\"1.3.1.【推荐】使用 UTF-8 字符编码。\",\"声明一个明确的字符编码，可以让浏览器更快速高效地确定适合网页内容的渲染方式。\",\"由于历史原因，不同浏览器采用了不同的字符编码。但对于新业务，如无特殊要求，统一使用 UTF-8 字符编码，以便统一。\",\"在 HTML 中使用 <meta charset=\\\"utf-8\\\" /> 声明文档的编码方式：\",\"<head> <meta charset=\\\"utf-8\\\" /> </head> \",\"1.3.2.【推荐】页面提供给移动设备使用时，需要设置 viewport。\",\"设置 viewport-fit 设置为“cover”来兼容 iPhone X 的刘海屏，了解更多 。\",\"<meta name=\\\"viewport\\\" content=\\\"width=device-width, minimum-scale=1.0, viewport-fit=cover\\\" /> \"]},\"30\":{\"h\":\"1.4. 资源加载\",\"t\":[\"1.4.1.【推荐】引入 CSS 和 JavaScript 时无需指定 type。 根据 HTML5 规范，引入 CSS 和 JavaScript 时通常不需要指明 type，因为 text/css 和 text/javascript 分别是他们的默认值。\",\"<!-- bad --> <link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"example.css\\\" /> <style type=\\\"text/css\\\"> /* ... */ </style> <script type=\\\"text/javascript\\\" src=\\\"example.js\\\"></script> <!-- good --> <link rel=\\\"stylesheet\\\" href=\\\"example.css\\\" /> <style> /* ... */ </style> <script src=\\\"example.js\\\"></script> \",\"1.4.2.【推荐】在 head 标签内引入 CSS，在 body 结束标签前引入 JS。\",\"在 <body></body> 中指定外部样式表和嵌入式样式块可能会导致页面的重排和重绘，对页面的渲染造成影响。因此，一般情况下，CSS 应在 <head></head> 标签里引入，了解更多。\",\"在 HTTP2（Chrome 浏览器 69 版本之后，Firefox 和 Edge）中可以在 body 中使用 link 标签引入样式文件，但不推荐在 body 中使用 <style> 标签的内联样式。**<link rel=\\\"stylesheet\\\">。\",\"除了基础库等必须要在 DOM 加载之前运行的 JavaScript 脚本，其他都在靠近 body 结束标签前引入，以防止出现页面渲染的阻塞，了解更多。\",\"<!-- bad --> <!DOCTYPE html> <html> <head> <script src=\\\"mod-a.js\\\"></script> <script src=\\\"jquery.js\\\"></script> </head> <body> <style> .mod-example { padding-left: 15px; } </style> </body> </html> <!-- good --> <!DOCTYPE html> <html> <head> <style> .mod-example { padding-left: 15px; } </style> </head> <body> ... <script src=\\\"path/to/my/script.js\\\"></script> </body> </html> \",\"1.4.3.【推荐】外部资源的引用地址跟随页面协议，省略协议部分。\",\"<link rel=\\\"stylesheet\\\" href=\\\"//g.cdn.com/lib/style/index-min.css\\\" /> \",\"1.4.4.【推荐】使用 preload 预加载关键资源，了解更多。\",\"<link rel=\\\"preload\\\" href=\\\"style.css\\\" as=\\\"style\\\" /> <link rel=\\\"preload\\\" href=\\\"main.js\\\" as=\\\"script\\\" /> \",\"1.4.5.【推荐】使用 dns-prefetch 和 preconnect 处理 DNS 解析延迟问题，提高网页加载性能，了解更多。\",\"<link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com/\\\" crossorigin /> <link rel=\\\"dns-prefetch\\\" href=\\\"https://fonts.googleapis.com/\\\" /> \"]},\"31\":{\"h\":\"1.5. 页面标题\",\"t\":[\"1.5.1.【强制】页面需要指定 title 标签，有且仅有 1 个。\",\"<head> <meta charset=\\\"utf-8\\\" /> <title>印客学院</title> </head> \"]},\"32\":{\"h\":\"2. 编码\"},\"33\":{\"h\":\"2.1. 缩进\",\"t\":[\"2.1.1.【推荐】统一使用 2 个空格缩进，不要使用 4 个空格或 tab 缩进。\",\"<!DOCTYPE html> <html> <head> <title>印客学院</title> </head> <body> <img src=\\\"images/company-logo.png\\\" alt=\\\"Company\\\" /> <h1 class=\\\"hello-world\\\">Hello, world!</h1> </body> </html> \"]},\"34\":{\"h\":\"2.2. 注释\",\"t\":[\"2.2.1.【强制】在 HTML 注释代码中，不允许出现任何敏感信息。\",\"常见的敏感信息包括：\",\"相关敏感信息，例如业务规则\",\"个人隐私信息，例如邮箱、手机、身份证号码\",\"AK（accessKey id, accesskey secret）\",\"证书、密码\",\"2.2.2.【推荐】单行注释，需在注释内容和注释符之间需留有一个空格，以增强可读性。\",\"<!-- 单行注释 --> \",\"2.2.3.【推荐】多行注释，注释符单独占一行，注释内容 2 个空格缩进。\",\"<!-- 多行注释 多行注释 --> \"]},\"35\":{\"h\":\"2.3. 标签\",\"t\":[\"2.3.1.【强制】标签名统一使用小写。\",\"<!-- bad --> <H1>Hello, world!</H1> <!-- good --> <h1>Hello, world!</h1> \",\"2.3.2.【推荐】不要省略自闭合标签结尾处的斜线，且斜线前需留有一个空格。\",\"虽然 HTML5 规范 中指出结尾的斜线是可选的，但保留它们可以明确表达该标签已闭合的语义，更易于维护和理解。\",\"同时，在 React 被广泛使用的今天，这与 JSX 的规范 相一致，JSX 中自闭合标签必须保留结尾的斜线。\",\"<!-- bad --> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <img src=\\\"images/foo.png\\\" alt=\\\"foo\\\"> <!-- good --> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <img src=\\\"images/foo.png\\\" alt=\\\"foo\\\" /> \"]},\"36\":{\"h\":\"2.4. 属性\",\"t\":[\"2.4.1.【强制】属性值使用双引号，不要使用单引号。\",\"<!-- bad --> <link rel='stylesheet' href='example.css' /> <!-- good --> <link rel=\\\"stylesheet\\\" href=\\\"example.css\\\" /> \",\"2.4.2.【推荐】不要为 Boolean 属性添加取值。\",\"XHTML 需要每个属性声明取值，但是 HTML5 并不需要。一个元素中 Boolean 属性存在即表示取值 true，不存在则表示取值 false，了解更多。\",\"<!-- bad --> <input type=\\\"text\\\" disabled=\\\"disabled\\\" /> <input type=\\\"checkbox\\\" value=\\\"1\\\" checked=\\\"checked\\\" /> <select> <option value=\\\"1\\\" selected=\\\"selected\\\">1</option> </select> <!-- good --> <input type=\\\"text\\\" disabled /> <input type=\\\"checkbox\\\" value=\\\"1\\\" checked /> <select> <option value=\\\"1\\\" selected>1</option> </select> \",\"2.4.3.【推荐】自定义属性的命名：以 data- 为前缀。\",\"建议自定义属性的命名都以 data- 为前缀，以便区分。\",\"<!-- bad --> <a modal=\\\"toggle\\\" href=\\\"#\\\">Example link</a> <!-- good --> <a data-modal=\\\"toggle\\\" href=\\\"#\\\">Example link</a> \"]},\"37\":{\"h\":\"2.5. 语义化\",\"t\":[\"2.5.1.【参考】尽量根据语义使用 HTML 标签。\",\"HTML 标签（更严谨的叫法是 HTML 元素）都有其语义，例如 p 标签即“paragraphs”用于章节，a 标签即“anchors”用于锚点链接，了解更多。\",\"我们应优先选取符合当下所需语义的标签，这既有助于可访问性（Accessibility），也可以在 CSS 加载失败时获得较好的展示效果。\",\"<!-- bad --> <div class=\\\"list\\\"> <div class=\\\"list-item\\\">1</div> <div class=\\\"list-item\\\">2</div> <div class=\\\"list-item\\\">3</div> </div> <!-- good --> <ul class=\\\"list\\\"> <li class=\\\"list-item\\\">1</li> <li class=\\\"list-item\\\">2</li> <li class=\\\"list-item\\\">3</li> </ul> \"]},\"38\":{\"h\":\"2.6. 可访问性\",\"t\":[\"2.6.1.【参考】注意 HTML 的可访问性（Accessibility）。\",\"网页可访问性使网页内容落实“无障碍”，让不同程度或需求的用户可以顺畅的获取网站上的信息。传统上我们认为这只与残疾人士有关，但提升网站的可访问性也可以让其他用户群体受益，比如使用移动设备的人群或低速网络的人群。\",\"例如，为 img 标签设置 alt 属性：\",\"<!-- bad - 缺少 alt 属性，无法被无障碍阅读器识别 --> <img src=\\\"hello.jpg\\\" /> <!-- good --> <img src=\\\"hello.jpg\\\" alt=\\\"Welcome to visit!\\\" /> <!-- good - 图片无需被无障碍阅读器识别时 --> <img src=\\\"logo.jpg\\\" alt=\\\"\\\" /> <!-- good - 图片无需被无障碍阅读器识别时 --> <img src=\\\"logo.jpg\\\" role=\\\"presentation\\\" /> \",\"了解更多 HTML 可访问性的知识，可以阅读这篇 MDN 的文章。\"]},\"39\":{\"h\":\"3. 脚手架模板\",\"t\":[\"根据以上规约，建议的 HTML 脚手架模板如下：\",\"<!DOCTYPE html> <html lang=\\\"zh-CN\\\"> <head> <meta charset=\\\"utf-8\\\" /> <meta name=\\\"description\\\" content=\\\"印客学院 - 一千个职业梦想的赞助商\\\" /> <meta name=\\\"keyword\\\" content=\\\"印客学院\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, minimum-scale=1.0, viewport-fit=cover\\\" /> <title>印客学院</title> <link rel=\\\"stylesheet\\\" href=\\\"example.css\\\" /> </head> <body> <div id=\\\"container\\\"></div> <script src=\\\"example.js\\\"></script> </body> </html> \"]},\"40\":{\"h\":\"参考资料\",\"t\":[\"Code Guide by @mdo\",\"Google HTML/CSS Style Guide\"]},\"41\":{\"h\":\"JavaScript 编码规范\",\"t\":[\"提示\",\"JavaScript 编码规约主要包含编码风格、语言特性、注释、命名、配套工具等几个部分。本规范面向的 ECMAScript 语言版本是 ES6+。\"]},\"42\":{\"h\":\"1. 编码风格\",\"t\":[\"详细规则如下：\"]},\"43\":{\"h\":\"1.1. 缩进\",\"t\":[\"1.1.1.【强制】使用 2 个空格缩进。eslint: indent\",\"统一使用 2 个空格缩进，不要使用 4 个空格或 tab 缩进：\",\"// bad function foo() { ∙∙∙∙let name; } // good function foo() { ∙∙let name; } \"]},\"44\":{\"h\":\"1.2. 分号\",\"t\":[\"1.2.1.【强制】使用分号。eslint: semi\",\"统一以分号结束语句，可以避免 JS 引擎自动分号插入机制的怪异行为，在语义上也更加明确。\",\"自动分号插入机制（即 Automatic Semicolon Insertion，简称 ASI） 是当 JS 遇到不带分号的语句时判断是否自动添加分号的机制，它在个别情况下的行为比较怪异，可能导致意想不到的效果。此外随着 JS 新特性的增加，异常的情况可能变得更加复杂。\",\"// bad - 导致 Uncaught ReferenceError 报错 const chenghuai = {} const huaicheng = {} [chenghuai, huaicheng].forEach((jedi) => { jedi.father = 'vader' }) // good const chenghuai = {}; const huaicheng = {}; [chenghuai, huaicheng].forEach((jedi) => { jedi.father = 'vader'; }); // bad - 导致 Uncaught ReferenceError 报错 const reaction = \\\"No! That's impossible!\\\" (async function meanwhileOnTheFalcon() { }()) // good const reaction = \\\"No! That's impossible!\\\"; (async function meanwhileOnTheFalcon() { }()); // bad - 函数将返回 `undefined` 而不是换行后的值 function foo() { return 'Result want to be returned' } // good function foo() { return 'Result want to be returned'; } \"]},\"45\":{\"h\":\"1.3. 逗号\",\"t\":[\"1.3.1.【强制】对于逗号分隔的多行结构，不使用行首逗号。eslint: comma-style\",\"// bad const story = [ once , upon , aTime ]; // good const story = [ once, upon, aTime, ]; // bad const hero = { firstName: 'Ada' , lastName: 'Lovelace' , superPower: 'computers' }; // good const hero = { firstName: 'Ada', lastName: 'Lovelace', superPower: 'computers', }; \",\"1.3.2.【强制】对于逗号分隔的多行结构，始终加上最后一个逗号。eslint: comma-dangle\",\"这样可以使增删行更加容易，也会使 git diffs 更清晰。Babel 等编译器会在编译后的代码里帮我们去掉最后额外的逗号，因此不必担心在旧浏览器中的问题。\",\"// bad - 没有结尾逗号时，新增一行的 git diff 示例 const hero = { firstName: 'Florence', - lastName: 'Nightingale' + lastName: 'Nightingale', + inventorOf: ['coxcomb chart', 'modern nursing'] }; // good - 有结尾逗号时，新增一行的 git diff 示例 const hero = { firstName: 'Florence', lastName: 'Nightingale', + inventorOf: ['coxcomb chart', 'modern nursing'], }; \",\"// bad const hero = { firstName: 'Dana', lastName: 'Scully' }; const heroes = [ 'Batman', 'Superman' ]; function createHero( firstName, lastName, inventorOf ) { // ... } createHero( firstName, lastName, inventorOf ); // good const hero = { firstName: 'Dana', lastName: 'Scully', }; const heroes = [ 'Batman', 'Superman', ]; function createHero( firstName, lastName, inventorOf, ) { // ... } createHero( firstName, lastName, inventorOf, ); // good - 需注意，使用扩展运算符的元素后面不能加逗号 function createHero( firstName, lastName, inventorOf, ...heroArgs ) { // ... } \"]},\"46\":{\"h\":\"1.4. 块\",\"t\":[\"术语解释：块（block） 可以理解为类、函数、控制语句等由大括号 {} 分隔的代码块状结构，由一对大括号界定，用于组合若干条语句 了解更多\",\"1.4.1【推荐】始终使用大括号包裹代码块。eslint: curlynonblock-statement-body-position\",\"多行代码块必须用大括号包裹：\",\"// bad if (foo) bar(); baz(); // 这一行并不在 if 语句里 // good if (foo) { bar(); baz(); } \",\"代码块只有一条语句时，可以省略大括号，并跟控制语句写在同一行。但出于一致性和可读性考虑，不推荐这样做：\",\"// bad if (foo) return false; // bad - 允许但不推荐 if (foo) return false; // good if (foo) { return false; } \"]},\"47\":{\"h\":\"1.4.2. 大括号换行风格\",\"t\":[\"1.4.2.1.【强制】对于非空代码块，采用 Egyptian Brackets 风格。eslint: brace-style\",\"对于非空的代码块，大括号的换行方式采用 Egyptian Brackets 风格，具体规则如下：\",\"左大括号 { 前面不换行，后面换行\",\"右大括号 } 前面换行\",\"右大括号 } 后面是否换行有两种情况： \",\"如果 } 终结了整个语句，如条件语句、函数或类的主体，则需要换行\",\"如果 } 后面存在 else、catch、while 等语句，或存在逗号、分号、右小括号（)），则不需要换行\",\"// bad - else 应与 if 的 } 放在同一行 if (foo) { thing1(); } else thing2(); } // good if (foo) { thing1(); } else { thing2(); } \",\"1.4.2.2.【参考】对于空代码块，可以将大括号直接闭合。\",\"对于空的代码块，且不在类似 if..else.. 或 try..catch..finally.. 的多块结构中时，可以立即将大括号闭合：\",\"// good function doNothing() {} \",\"但如果空代码块在多块结构中，仍建议按上一条非空块的 Egyptian Brackets 风格换行：\",\"// bad if (condition) { // … } else if (otherCondition) {} else { // … } // good if (condition) { // … } else if (otherCondition) { } else { // … } // bad try { // … } catch (e) {} // good try { // … } catch (e) { } \",\"1.4.3.【强制】不要使用空代码块。eslint: no-empty\",\"不要让代码中出现空代码块，这会使阅读者感到困惑。如果必须使用空块，需在块内写明注释。\",\"// bad if (condition) { thing1(); } else { } // good if (condition) { thing1(); } else { // TODO I haven’t determined what to do. } \"]},\"48\":{\"h\":\"1.5. 空格\",\"t\":[\"合理并一致地使用空格有助于提升代码的可读性和可维护性。具体来说，我们采用如下的空格风格：\",\"1.5.1.【强制】空格风格。eslint: space-before-blockskeyword-spacingspace-in-parensarray-bracket-spacingobject-curly-spacingspace-infix-opskey-spacing\",\"块的左大括号 { 前有一个空格：\",\"// bad function test(){ console.log('test'); } // good function test() { console.log('test'); } // bad dog.set('attr',{ age: '1 year', breed: 'Bernese Mountain Dog', }); // good dog.set('attr', { age: '1 year', breed: 'Bernese Mountain Dog', }); \",\"控制语句（if、while 等）的左小括号 ( 前有一个空格：\",\"// bad if(isJedi) { fight (); } // good if (isJedi) { fight(); } \",\"声明函数时，函数名和参数列表之间无空格：\",\"// bad function fight () { console.log ('Swooosh!'); } // good function fight() { console.log('Swooosh!'); } \",\"小括号内部两侧无空格：\",\"// bad function bar( foo ) { return foo; } // good function bar(foo) { return foo; } // bad if ( foo ) { console.log( foo ); } // good if (foo) { console.log(foo); } \",\"方括号内部两侧无空格：\",\"// bad const foo = [ 1, 2, 3 ]; console.log(foo[ 0 ]); // good const foo = [1, 2, 3]; console.log(foo[0]); \",\"大括号内部两侧有空格：\",\"// bad const foo = {clark: 'kent'}; // good const foo = { clark: 'kent' }; \",\"运算符两侧有空格，除了一元运算符：\",\"// bad const x=y+5; // good const x = y + 5; // bad const isRight = result === 0? false: true; // good const isRight = result === 0 ? false : true; // bad - 一元运算符与操作对象间不应有空格 const x = ! y; // good const x = !y; \",\"定义对象字面量时， key, value 之间有且只有一个空格，不允许所谓的「水平对齐」：\",\"// bad { a: 'short', looooongname: 'long', } // bad { a : 'short', looooongname: 'long', } // good { a: 'short', looooongname: 'long', } \"]},\"49\":{\"h\":\"1.6. 空行\",\"t\":[\"1.6.1.【推荐】在文件末尾保留一行空行。eslint: eol-last\",\"在非空文件中保留拖尾换行是一种常见的 UNIX 风格。它的好处同输出文件到终端一样，方便在串联和追加文件时不会打断 shell 的提示。\",\"我们统一在文件末尾保留一行空行，即用一个换行符结束文件：\",\"// bad - 文件末尾未保留换行符 import { foo } from './Foo'; // ... export default foo; // bad - 文件末尾保留了2个换行符 import { foo } from './Foo'; // ... export default foo;↵ ↵ // good import { foo } from './Foo'; // ... export default foo;↵ \",\"1.6.2.【强制】块的开始和结束不能是空行。eslint: padded-blocks\",\"// bad function bar() { console.log(foo); } // good function bar() { console.log(foo); } // bad if (baz) { console.log(qux); } else { console.log(foo); } // good if (baz) { console.log(qux); } else { console.log(foo); } \",\"1.6.3.【参考】在块末和新语句间插入一个空行。\",\"// bad if (foo) { return bar; } return baz; // good if (foo) { return bar; } return baz; // bad const obj = { foo() { }, bar() { }, }; return obj; // good const obj = { foo() { }, bar() { }, }; return obj; \"]},\"50\":{\"h\":\"1.7. 最大字符数和最大行数\",\"t\":[\"1.7.1.【推荐】单行最大字符数：100。eslint: max-len\",\"过长的单行代码不易阅读和维护，需要进行合理换行。\",\"我们推荐单行代码最多不要超过 100 个字符，除了以下两种情况：\",\"字符串和模板字符串\",\"正则表达式\",\"// bad const foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy; // good const foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy; // bad $.ajax({ method: 'POST', url: 'https://foo.com/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.')); // good $.ajax({ method: 'POST', url: 'https://foo.com/', data: { name: 'John' }, }) .done(() => console.log('Congratulations!')) .fail(() => console.log('You have failed this city.')); \",\"1.7.2.【参考】文件最大行数：1000。eslint: max-lines\",\"过长的文件不易阅读和维护，最好对其进行拆分。\",\"1.7.3.【参考】函数最大行数：80。eslint: max-lines-per-function\",\"过长的函数不易阅读和维护，最好对其进行拆分。\"]},\"51\":{\"h\":\"2. 语言特性\"},\"52\":{\"h\":\"2.1. 变量声明\",\"t\":[\"2.1.1.【强制】使用 const 或 let 声明变量。eslint: no-varno-undef\",\"从 ES6 开始，可以使用 let 和 const 关键字在块级作用域下声明变量。块级作用域在很多其他编程语言中都有使用，这样声明的变量不会污染全局命名空间。\",\"不要使用 var：\",\"// bad var foo = 'foo'; var bar; // good const foo = 'foo'; let bar; \",\"更不要什么都不用（这将产生全局变量，从而污染全局命名空间）：\",\"// bad foo = 'foo'; // good const foo = 'foo'; \",\"2.1.2.【强制】正确地使用 const 和 let。eslint: prefer-const\",\"声明变量时，应优先使用 const，只有当变量会被重新赋值时才使用 let：\",\"// bad - 声明后未发生重新赋值，应使用 const let flag = true; if (flag) { console.log(flag); } // good - 声明后发生重新赋值，let 使用正确 let flag = true; if (flag) { flag = false; } \",\"需注意，数组和对象是一个引用，对数组某项和对象某属性的修改并不是重新赋值，因此多数情况下应用 const 声明：\",\"// bad let arr = []; let obj = {}; arr[0] = 'foo'; obj.name = 'bar'; // good const arr = []; const obj = {}; arr.push('foo'); obj.name = 'bar'; \",\"2.1.3.【强制】一条声明语句声明一个变量。eslint: one-var\",\"这样做更易于追加新的声明语句（你不需要总去把最后的 ; 改成 , 了），也更易于进行单步调试。\",\"// bad const foo = 1, bar = 2; // good const foo = 1; const bar = 2; \",\"2.1.4.【强制】声明的变量必须被使用。eslint: no-unused-vars\",\"声明而未使用的变量、表达式可能带来潜在的问题，也会给维护者造成困扰，应将它们删除。\",\"// bad - 未使用变量 foo const foo = 1; // good const foo = 1; doSomethingWith(foo); // bad - 只修改变量不认为是被使用 let bar = 1; bar = 2; bar += 1; // good let bar = 1; bar = 2; bar += 1; doSomethingWith(bar); // bad - 未使用参数 y function getX(x, y) { return x; } // good function getXPlusY(x, y) { return x + y; } \",\"2.1.5.【强制】不要在声明前就使用变量。eslint: no-use-before-define\",\"在 ES5 中，由于 var 的声明提升作用，变量可以在声明前使用，但这样做可能给人带来疑惑和隐患，所以不要在声明前就使用变量：\",\"// bad console.log(foo); // => undefined var foo = 'foo'; // good var foo = 'foo'; console.log(foo); // => foo \",\"在 ES6 中，由于 const 和 let 没有声明提升作用，如果在声明前就使用变量，会直接报错：\",\"// bad console.log(foo); // => Uncaught ReferenceError: foo is not defined const foo = 'foo'; // good const foo = 'foo'; console.log(foo); // => foo \",\"2.1.6.【参考】哪里使用，哪里声明。\",\"在变量被使用前再进行声明，而不是统一在块开始处进行声明。\",\"ES6 提供的 let 和 const 是块级作用域，不存在类似 var 的声明提升的问题。因此我们可以把声明写在更合理的地方（一般是变量被使用前），而不是统一在块开始处进行声明。\",\"// bad - 如果权限校验（checkUserPermission）失败，fetchData 是不必要的 function getData(id) { const data = fetchData(id); if (!checkUserPermission()) { return false; } if (data.foo === 'bar') { // ... } return data; } // good function getData(id) { if (!checkUserPermission()) { return false; } const data = fetchData(id); if (data.foo === 'bar') { // ... } return data; } \",\"2.1.7.【强制】变量不要与外层作用域已存在的变量同名。eslint: no-shadow\",\"如果变量与外层已存在变量同名，会降低可读性，也会导致内层作用域无法读取外层作用域的同名变量。\",\"// bad const foo = 1; if (someCondition) { const foo = 2; console.log(foo); // => 2 } // good const foo = 1; if (someCondition) { const bar = 2; console.log(bar); // => 2 console.log(foo); // => 1 } \",\"2.1.8.【强制】不要重复声明变量和函数。eslint: no-redeclare\",\"在 ES5 中，尽管使用 var 重复声明不会报错，但这样做会令人疑惑，降低程序的可维护性。同理，函数的声明也不要与已存在的变量和函数重名：\",\"// bad var a = 'foo'; var a = 'bar'; function a() {} console.log(a); // => 'bar' // good var a = 'foo'; var b = 'bar'; function c() {} console.log(a); // => 'foo' // bad - arg 已作为函数参数声明 function myFunc(arg) { var arg = 'foo'; console.log(arg); } myFunc('bar'); // => 'foo' // good function myFunc(arg) { var otherName = 'foo'; console.log(arg); } myFunc('bar'); // => 'bar' \",\"在 ES6 中，使用 const 或 let 重复声明变量会直接报错：\",\"// bad const a = 'foo'; function a() {} // => Uncaught SyntaxError: Identifier 'a' has already been declared // good const a = 'foo'; function b() {} // bad - arg 已作为函数参数声明 function myFunc(arg) { const arg = 'foo'; console.log(arg); } myFunc('bar'); // => Uncaught SyntaxError: Identifier 'arg' has already been declared // good function myFunc(arg) { const otherName = 'foo'; console.log(arg); } myFunc('bar'); // => 'bar' \",\"2.1.9.【强制】禁止连续赋值。eslint: no-multi-assign\",\"变量的连续赋值让人难以阅读和理解，并且可能导致意想不到的结果（如产生全局变量）。\",\"// bad - 本例的结果是 let 仅对 a 起到了预想效果，b 和 c 都成了全局变量 (function test() { let a = b = c = 1; // 相当于 let a = (b = (c = 1)); })(); console.log(a); // throws ReferenceError console.log(b); // 1 console.log(c); // 1 // good (function test() { let a = 1; let b = a; let c = a; })(); console.log(a); // throws ReferenceError console.log(b); // throws ReferenceError console.log(c); // throws ReferenceError \",\"2.1.10.【参考】将 let 和 const 分别归类。\",\"将 let 和 const 归类写在一起，可以提高代码整洁性。此外，如果你想按变量的含义排序分组也是允许的。\",\"// bad let a; const b = 2; let c; const d = 4; let e; // good const b = 2; const d = 4; let a; let c; let e; \"]},\"53\":{\"h\":\"2.2. 原始类型\",\"t\":[\"JS的数据类型包括 7 种原始类型（primitive type），即 Boolean, Null, Undefined, Number, String, Symbol (ES6 新定义), BigInt（ES11新定义），以及 Object 类型，了解更多。这个章节主要介绍原始类型相关的规约。\",\"2.2.1.【强制】不要使用 new Number/String/Boolean。eslint: no-new-wrappers\",\"使用 · 声明不会有任何好处，还会导致变量成为 object 类型，可能引起 bug。\",\"// bad const num = new Number(0); const str = new String('foo'); const bool = new Boolean(false); console.log(typeof num, typeof str, typeof bool); // => object, object, object if (num) { // true（对象相当于 true） } if (bool) { // true（对象相当于 true） } // good const num = 0; const str = 'foo'; const bool = false; console.log(typeof num, typeof str, typeof bool); // => number, string, boolean if (num) { // false（0 相当于 false） } if (bool) { // false } \",\"2.2.2.【推荐】类型转换。\",\"【数字】使用 Number() 或 parseInt() ：\",\"const str = '1'; // bad const num = +str; const num = str >> 0; const num = new Number(str); // good const num = Number(str); // good const num = parseInt(str, 10); \",\"【字符串】使用 String()：\",\"const num = 1; // bad const str = new String(num); // typeof str is \\\"object\\\" not \\\"string\\\" const str = num + ''; // invokes num.valueOf() const str = num.toString(); // isn’t guaranteed to return a string // good const str = String(num); \",\"【布尔值】使用 !!：\",\"const age = 0; // bad const hasAge = new Boolean(age); const hasAge = Boolean(age); // good const hasAge = !!age; \",\"2.2.3.【推荐】使用 parseInt() 方法时总是带上基数。eslint: radix\",\"parseInt 方法的第一个参数是待转换的字符串，第二个参数是转换基数。当第二个参数省略时，parseInt 会根据第一个参数自动判断基数：\",\"如果以 0x 开头，则使用 16 作基数\",\"如果以 0 开头，则使用 8 作基数。正是这条规则经常导致错误，ES5 规范中直接将这条规则移除，即 ES5 及之后的执行环境以 0 开头也会使用 10 作为基数\",\"其他情况则使用 10 作基数\",\"虽然从 ES5 开始就移除了自动以 8 作基数的规则，但有时难以保证所有的浏览器和 JS 执行环境都支持了这一特性。了解更多\",\"因此，推荐始终给 parseInt() 方法加上基数，除非可以保证代码的执行环境不受上述特性的影响。\",\"// bad parseInt(\\\"071\\\"); // => ES5 前的执行环境中得到的是 57 // good parseInt(\\\"071\\\", 10); // => 71 \",\"2.2.4.【强制】避免不必要的布尔类型转换。eslint: no-extra-boolean-cast\",\"在 if 等条件语句中，将表达式的结果强制转换成布尔值是多余的：\",\"// bad if (!!foo) { // ... } while (!!foo) { // ... } const a = !!flag ? b : c; // good if (foo) { // ... } while (foo) { // ... } const a = flag ? b : c; \"]},\"54\":{\"h\":\"2.2.5. 字符串\",\"t\":[\"2.2.5.1.【强制】字符串优先使用单引号。eslint: quotes\",\"// bad const name = \\\"tod\\\"; const name = `tod`; // 模板字符串中应包含变量或换行，否则需用单引号 // good const name = 'tod'; \",\"2.2.5.2.【推荐】使用模板字符串替代字符串拼接。eslint: prefer-template\",\"模板字符串让代码更简洁，可读性更强\",\"// bad function getDisplayName({ nickName, realName }) { return nickName + ' (' + realName + ')'; } // good function getDisplayName({ nickName, realName }) { return `${nickName} (${realName})`; } \",\"2.2.5.3.【强制】禁止不必要的转义字符。no-useless-escape\",\"转义字符会大大降低代码的可读性，因此尽量不要滥用它们。\",\"// bad const foo = '\\\\'this\\\\' \\\\i\\\\s \\\\\\\"quoted\\\\\\\"'; // good const foo = '\\\\'this\\\\' is \\\"quoted\\\"'; const foo = `'this' is \\\"quoted\\\"`; \"]},\"55\":{\"h\":\"2.3. 数组\",\"t\":[\"2.3.1.【强制】使用字面量创建数组。eslint: no-array-constructor\",\"不要使用 new Array() 和 Array() 创建数组，除非为了构造某一长度的空数组。\",\"// bad const a = new Array(1, 2, 3); const b = Array(1, 2, 3); // good const a = [1, 2, 3]; const b = new Array(500); // 构造长度为 500 的空数组 \",\"2.3.2.【强制】某些数组方法的回调函数中必须包含 return 语句。eslint: array-callback-return\",\"以下数组方法：map, filter, from, every, find, findIndex, reduce, reduceRight, some, sort 的回调函数中必须包含 return 语句，否则可能会产生误用或错误。\",\"一个常见的误用是，本该用 forEach 的场景却用了 map：\",\"// 欲将 ['a', 'b', 'c'] 转换成 {a: 0, b: 1, c: 2} const myArray = ['a', 'b', 'c']; const myObj = {}; // bad - map 应用于构建一个新数组，单纯想遍历数组应使用 forEach myArray.map((item, index) => { myObj[item] = index; }); // good myArray.forEach((item, index) => { myObj[item] = index; }); \",\"某些方法漏掉 return 还可能引起错误：\",\"// 欲将 ['a', 'b', 'c'] 转换成 {a: 0, b: 1, c: 2} const myArray = ['a', 'b', 'c']; // bad => Uncaught TypeError: Cannot set property 'b' of undefined const myObj = myArray.reduce((memo, item, index) => { memo[item] = index; }, {}); // good const myObj = myArray.reduce((memo, item, index) => { memo[item] = index; return memo; }, {}); \",\"2.3.3.【推荐】使用扩展运算符 ... 处理数组。\",\"ES6 提供了扩展运算符 ...，可以简化一些数组操作。\",\"数组复制：\",\"// bad const array1 = []; for (let i = 0; i < array.length; i += 1) { array1[i] = array[i]; } // bad const array1 = array.map(item => item); // good const array1 = [...array]; \",\"将类数组结构（有 Iterator 接口的对象）转换为数组：\",\"// bad const foo = document.querySelectorAll('.foo'); // good const nodes = Array.from(foo); // good const nodes = [...foo]; const uniqueNodes = [...new Set(foo)]; // 可以利用 Set 和 ... 将数组去重 \",\"数组拼接：\",\"// bad const array1 = [1, 2].concat(array); // good const array1 = [1, 2, ...array] \",\"用 ... 替代 apply：\",\"// bad const args = [1, 2, 3, 4]; Math.max.apply(Math, args); // good const args = [1, 2, 3, 4]; Math.max(...args); \",\"特殊的，遍历可迭代对象时，使用 Array.from 而不是 ...，以免创建一个临时数组：\",\"// bad const baz = [...foo].map(bar); // good const baz = Array.from(foo, bar); \",\"2.3.4.【推荐】使用解构获取数组元素。\",\"使用 ES6 提供的解构方法获取数组元素：\",\"// bad const arr = [1, 2, 3, 4]; const first = arr[0]; const second = arr[1]; // good const arr = [1, 2, 3, 4]; const [first, second] = arr; \",\"函数有多个返回值时，应使用对象解构而不是数组解构，因为数组解构需要考虑返回值的位置：\",\"// bad function giveMeDivPosition(div) { return [left, right, top, bottom]; } const [left, _, top] = giveMeDivPosition(div); // good function giveMeDivPosition(div) { return { left, right, top, bottom }; } const { left, top } = giveMeDivPosition(div); \"]},\"56\":{\"h\":\"2.4. 对象\",\"t\":[\"2.4.1.【强制】使用字面量创建对象。eslint: no-new-object\",\"// bad const obj = new Object(); // good const obj = {}; \",\"2.4.2【强制】使用对象属性和方法的简写语法。eslint: object-shorthand\",\"ES6 提供了对象属性和方法的简写语法，可以使代码更加简洁：\",\"const value = 'foo'; // bad const atom = { value: value, addValue: function (value) { return value + ' added'; }, }; // good const atom = { value, addValue(value) { return value + ' added'; }, }; \",\"2.4.3.【参考】将对象的简写属性写在一起。\",\"将简写的属性写在一起，置于对象的起始或末尾，可以提高代码整洁性。当然，如果你出于属性的含义或其他考虑进行排序也是允许的。\",\"const anakinSkywalker = 'Anakin Skywalker'; const lukeSkywalker = 'Luke Skywalker'; // bad const obj = { episodeOne: 1, twoJediWalkIntoACantina: 2, lukeSkywalker, episodeThree: 3, mayTheFourth: 4, anakinSkywalker, }; // good const obj = { lukeSkywalker, anakinSkywalker, episodeOne: 1, twoJediWalkIntoACantina: 2, episodeThree: 3, mayTheFourth: 4, }; \",\"2.4.4.【强制】对象的属性名不要用引号包裹，除非包含特殊字符。eslint: quote-props\",\"这样更加简洁，也有助于语法高亮和一些 JS 引擎的优化。\",\"// bad const bad = { 'foo': 3, 'bar': 4, 'data-blah': 5, 'one two': 12, }; // good const good = { foo: 3, bar: 4, 'data-blah': 5, 'one two': 12, }; \",\"2.4.5.【强制】优先使用 . 访问对象的属性。eslint: dot-notation\",\"这样可以提高代码可读性。[] 仅应在访问动态属性名或包含特殊字符的属性名时被使用。\",\"const obj = { active: true, [getDynamicKey()]: 'foo', 'data-bar': 'bar', }; // bad const isActive = obj['active']; // good const isActive = obj.active; const foo = obj[getDynamicKey()]; const bar = obj['data-bar']; \",\"2.4.6.【推荐】使用扩展运算符 ... 处理对象。\",\"替代 Object.assign 方法，来进行对象的浅拷贝：\",\"// very bad - original 会被影响 const original = { a: 1, b: 2 }; const copy = Object.assign(original, { c: 3 }); // copy => { a: 1, b: 2, c: 3 } original => { a: 1, b: 2, c: 3 } delete copy.a; // copy => { b: 2, c: 3 } original => { b: 2, c: 3 } // bad const original = { a: 1, b: 2 }; const copy = Object.assign({}, original, { c: 3 }); // copy => { a: 1, b: 2, c: 3 } // good const original = { a: 1, b: 2 }; const copy = { ...original, c: 3 }; // copy => { a: 1, b: 2, c: 3 } \",\"获取排除某些属性的新对象：\",\"// good const copy = { a: 1, b: 2, c: 3 }; const { a, ...noA } = copy; // noA => { b: 2, c: 3 } \",\"2.4.7.【推荐】使用解构获取对象属性。eslint: prefer-destructuring\",\"获取对象的同名属性、多个属性时，使用解构让代码更简洁，也可以减少为了使用属性而创建的临时引用。\",\"// bad function getFullName(user) { const firstName = user.firstName; const lastName = user.lastName; return `${firstName} ${lastName}`; } // good function getFullName(user) { const { firstName, lastName } = user; return `${firstName} ${lastName}`; } // best function getFullName({ firstName, lastName }) { return `${firstName} ${lastName}`; } \",\"2.4.8.【参考】对象的动态属性名应直接写在字面量定义中。\",\"ES6 允许在新建对象字面量时使用表达式作为属性名，这样可以将所有属性定义在一个地方。\",\"function getKey(k) { return `a key named ${k}`; } // bad const obj = { id: 1, name: 'tod', }; obj[getKey('foo')] = 'foo'; // good const obj = { id: 1, name: 'tod', [getKey('foo')]: 'foo', }; \",\"2.4.9.【强制】不要直接在对象上调用 Object.prototypes 上的方法。eslint: no-prototype-builtins\",\"不要直接在对象上调用 Object.prototypes 上的方法，例如 hasOwnProperty、propertyIsEnumerable、isPrototypeOf。\",\"这些方法可能会被对象上的属性覆盖，导致错误：\",\"const obj = { foo: 'foo', hasOwnProperty: false, }; const objNull = Object.create(null); // bad => Uncaught TypeError: obj.hasOwnProperty is not a function console.log(obj.hasOwnProperty('foo')); console.log(objNull.hasOwnProperty('foo')); // good console.log(Object.prototype.hasOwnProperty.call(obj, 'foo')); console.log(Object.prototype.hasOwnProperty.call(objNull, 'foo')); \"]},\"57\":{\"h\":\"2.5. 函数\",\"t\":[\"2.5.1.【强制】不要用 Function 构造函数创建函数。eslint: no-new-func\",\"使用 new Function 创建函数会像 eval() 方法一样执行字符串，带来安全隐患\",\"// bad const sum = new Function('a', 'b', 'return a + b'); // good const sum = (a, b) => (a + b); \",\"2.5.2.【强制】不要在块中使用函数声明。eslint: no-inner-declarations\",\"在非函数块（如 if、while 等）中，不要使用函数声明：\",\"// bad - 函数声明不是块作用域而是函数作用域，因此在块外也能使用函数，容易引起误解 if (true) { function test() { console.log('test'); } } test(); // => test // good - 函数表达式可以清晰地说明函数能否在块外使用 // 不能在块外使用 if (true) { const test = function () { console.log('test'); }; } test(); // => Uncaught ReferenceError: test is not defined // 能在块外使用 let test; if (true) { test = function () { console.log('test'); }; } test(); // => test \",\"2.5.3.【参考】使用函数表达式替代函数声明。\",\"这样可以保证函数不能在定义前被调用。\",\"函数声明会被提升到当前作用域的顶部，因此函数可以在声明语句前就被调用，这会影响代码的可读性与可维护性。\",\"// bad function foo() { // ... } // good const foo = () => { // ... }; const foo = function () { // ... }; // 有些规范提出，应该给函数表达式起一个不同于被赋值变量名的名字，以达到易于调试、查看错误堆栈等目的 // 事实上，代码在目前浏览器中或者经过 Babel 转码后，匿名函数表达式也能够方便地查看堆栈。所以除非你出于某些目的想给函数起一个不同于被赋值变量的名字，否则直接使用匿名函数表达式 const foo = function foo_more_descriptive_name() { // ... }; \",\"2.5.4.【强制】使用箭头函数代替匿名函数。eslint: prefer-arrow-callback\",\"ES6 提供的箭头函数可以解决 this 指向的问题，而且语法更简洁。\",\"// bad [1, 2, 3].map(function (x) { const y = x + 1; return x * y; }); // good [1, 2, 3].map((x) => { const y = x + 1; return x * y; }); \",\"2.5.5.【推荐】箭头函数编码风格。eslint: arrow-parensarrow-body-style\",\"箭头函数参数的小括号、函数体的大括号在某些时候可以省略，这可能导致风格的不统一，因此需要规范其编码风格：\",\"函数体风格\",\"当函数体只包含一条 return 语句时，可以省略函数体大括号和 return，以使代码更简洁。\",\"我们推荐使用这个 ES6 提供的语法糖，它可以让书写和阅读更简洁。但你也可以选择始终加上大括号和 return，以方便后续在函数体内增加语句。\",\"// good - 函数体包含多条语句时，始终加上大括号 [1, 2, 3].map((number) => { const nextNumber = number + 1; return `A string containing the ${nextNumber}.`; }); // good - 函数体只包含一条 `return` 语句时，可以也建议省略大括号和 `return` [1, 2, 3].map(number => `A string containing the ${number + 1}.`); // good - 也可以选择始终不省略大括号，不使用简写语法糖，以方便后续在函数体内增加语句 [1, 2, 3].map((number) => { return `A string containing the ${number + 1}.`; }); \",\"当 return 的内容为对象或者有多行时，需要用小括号包裹：\",\"// bad - Uncaught SyntaxError: Unexpected token [1, 2, 3].map((item) => { foo: item, bar: item + 1, }); // good [1, 2, 3].map((item) => ({ foo: item, bar: item + 1, })); // bad ['get', 'post', 'put'].map(httpMethod => Object.prototype.hasOwnProperty.call( httpMagicObjectWithAVeryLongName, httpMethod, ) ); // good ['get', 'post', 'put'].map(httpMethod => ( Object.prototype.hasOwnProperty.call( httpMagicObjectWithAVeryLongName, httpMethod, ) )); \",\"函数参数风格\",\"当函数只有一个参数，且函数体为 return 简写语法时，可以省略包裹参数的小括号以使代码更简洁。\",\"我们建议仅在这种情况下省略包裹参数的小括号，其余情况都不要省略小括号。但你也可以选择始终加上小括号，以方便后续可能要增加参数。\",\"// good - 未使用 return 简写语法时，参数始终加上小括号 [1, 2, 3].map((number) => { const nextNumber = number + 1; return `A string containing the ${nextNumber}.`; }); // good - 使用 return 简写语法、且只有一个参数时，可以也建议省略参数的小括号 [1, 2, 3].map(x => x * x); // good - 也可以选择始终不省略参数的小括号，以方便后续可能要增加参数 [1, 2, 3].map((x) => x * x); \",\"2.5.6.【强制】不要将函数参数命名为 arguments。\",\"这会覆盖掉函数作用域中的 arguments 对象。\",\"// bad function foo(name, options, arguments) { // ... } // good function foo(name, options, args) { // ... } \",\"2.5.7.【强制】不要使用 arguments 对象。eslint: prefer-rest-params\",\"不要使用 arguments 对象，使用剩余参数操作符 ... 代替。\",\"ES6 提供了 rest 操作符 ...，与 arguments 相比可以更清晰地聚合函数的剩余参数。此外， ... 得到的是一个真正的数组，而 arguments 得到的则是类数组结构。\",\"// bad function foo(a, b) { const args = Array.prototype.slice.call(arguments, foo.length); console.log(args); } foo(1, 2, 3, 4); // => [3, 4] // good function foo(a, b, ...args) { console.log(args); } foo(1, 2, 3, 4); // => [3, 4] \",\"2.5.8.【推荐】使用默认参数语法。\",\"ES6 中引入了默认参数语法，相比之前为参数赋默认值的方法更加简洁、可读性更好。重新对参数赋值是不推荐的行为，且当参数的布尔类型转换结果是 false 时可能会错误地被赋予默认值。\",\"因此，当函数参数需要默认值时，使用默认参数语法，而不是去修改参数：\",\"// bad const multiple = (a, b) => { a = a || 0; b = b || 0; return a * b; } // good const multiple = (a = 0, b = 0) => { return a * b; } \",\"2.5.9.【推荐】有默认值的函数参数需要放到参数列表的最后。\",\"否则你将无法享受到默认参数的便利，只能通过传 undefined 触发参数使用默认值。\",\"// bad function multiply(a = 1, b) { return a * b; } const x = multiply(42); // => NaN const y = multiply(undefined, 42); // => 42 // good function multiply(a, b = 1) { return a * b; } const x = multiply(42); // => 42 \",\"2.5.10.【推荐】不要修改函数参数。eslint: no-param-reassign\",\"不要修改引用类型的参数，这可能导致作为入参的原变量发生变化：\",\"// bad const f1 = function f1(obj) { obj.key = 1; } const originalObj = { key: 0 }; f1(originalObj); console.log(originalObj); // => { key: 1 } // good const f2 = function f2(obj) { const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1; } \",\"更不要给参数重新赋值，这可能导致意外的行为和内核优化问题：\",\"// bad function foo(bar, baz) { if (!baz) { bar = 1; } } // good function foo(bar, baz) { let qux = bar; if (!baz) { qux = 1; } } \",\"2.5.11.【强制】将立即执行函数表达式（IIFE）用小括号包裹。eslint: wrap-iife\",\"IIFE 是一个独立的执行单元，将它用小括号包裹可以更清晰的体现这点。需要提醒的是，由于 ES6 模块语法的引入，你可能不再需要使用 IIFE 了。\",\"(function () { console.log('Welcome to the Internet. Please follow me.'); }()); \",\"2.5.12.【参考】函数的复杂度不应过高。eslint: complexity\",\"过高的复杂度意味着代码难以维护和测试。我们推荐函数的复杂度不要超过以下阈值：\",\"圈复杂度不超过 10\",\"认知复杂度不超过 15\",\"2.5.13.【参考】函数的参数不应过多。eslint: max-params 如果函数的参数过多，将不利于函数的维护和调用。这时你需要考虑是否函数做了太多的事情，是否有必要对其进行拆分。\",\"如果必须使用过多的参数，可以考虑用对象代替参数列表：\",\"// bad function doSomething(param1, param2, param3, param4, param5, param6, param7, param8) { // ... } doSomething(1, 2, 3, 4, 5, 6, 7, 8); // good function doSomething({ param1, param2, param3, param4, param5, param6, param7, param8 }) { // ... } doSomething({ param1: 1, param2: 2, param3: 3, param4: 4, param5: 5, param6: 6, param7: 7, param8: 8 }); \",\"2.5.14.【强制】generator 函数内必须有 yield 语句。eslint: require-yield\",\"如果一个 generator 中没有 yield 语句，那么这个 generator 就不是必须的。\",\"// bad function* foo() { return 10; } // good function* foo() { yield 5; return 10; } \",\"2.5.15.【参考】优先使用 JS 提供的高阶函数进行迭代运算。\",\"需要迭代运算时，应优先使用 JS 提供的高阶函数，减少直接使用 for 循环（包括 for-in 和 for-of）。\",\"如使用 map() / every() / filter() / find() / findIndex() / reduce() / some() / ... 来迭代数组，使用 Object.keys() / Object.values() / Object.entries() 方法来迭代对象\",\"const numbers = [1, 2, 3, 4, 5]; // bad let sum = 0; for (let num of numbers) { sum += num; } console.log(sum); // => 15; // good let sum = 0; numbers.forEach((num) => { sum += num; }); console.log(sum); // => 15; // best const sum = numbers.reduce((total, num) => total + num, 0); console.log(sum); // => 15; // bad const increasedByOne = []; for (let i = 0; i < numbers.length; i++) { increasedByOne.push(numbers[i] + 1); } // good const increasedByOne = []; numbers.forEach((num) => { increasedByOne.push(num + 1); }); // best const increasedByOne = numbers.map(num => num + 1); \"]},\"58\":{\"h\":\"2.6. 类\",\"t\":[\"2.6.1.【推荐】使用 class 语句声明类，而不是使用 prototype。\",\"class 语句是 ES6 中引入的用于声明类的语法糖，更加简洁易维护。\",\"// bad function Person() { this.age = 1; } Person.prototype.growOld = function () { this.age += 1; } // good class Person { constructor() { this.age = 1; } growOld() { this.age += 1; } } \",\"2.6.2.【推荐】使用 extends 语句进行类的继承。\",\"extends 是用于原型继承的内建方法，不会破坏 instanceof。\",\"// bad const inherits = require('inherits'); function PeekableQueue(contents) { Queue.apply(this, contents); } inherits(PeekableQueue, Queue); PeekableQueue.prototype.peek = function () { return this.queue[0]; }; // good class PeekableQueue extends Queue { peek() { return this.queue[0]; } } \",\"2.6.3.【强制】避免不必要的 constructor。\",\"ES6 class 会提供一个默认的 constructor，空 constructor 或者只调用父类的 constructor 是不必要的。eslint: no-useless-constructor\",\"// bad - 以下两种 constructor 可以省略 class Parent { constructor() { } method() { // ... } } class Child extends Parent { constructor (value) { super(value); } method() { // ... } } // good class Parent { method() { // ... } } class Child extends Parent { method() { // ... } } \",\"2.6.4.【强制】正确地使用 super 方法。eslint: constructor-superno-this-before-super\",\"子类的 constructor 中必须使用 super()，且必须在 this 和 super 关键词前调用\",\"非子类的 constructor 中不能使用 super()\",\"// bad - 非子类不能使用 super class Parent { constructor() { super(); this.name = 'parent'; } } // good class Parent { constructor() { this.name = 'parent'; } } // bad - 子类必须使用 super class Child extends Parent { constructor() { this.name = 'child'; } } // bad - this 必须在调用 super 后使用 class Child extends Parent { constructor() { this.name = 'foo'; super(); } } // good class Child extends Parent { constructor (value) { super(value); this.name = 'foo'; } } \",\"2.6.5.【强制】避免重复的类成员命名。eslint: no-dupe-class-members\",\"重复的类成员声明最终生效的将是最后一个：\",\"// bad class Foo { bar() { console.log('bar'); } bar() { console.log('baz'); } } const foo = new Foo(); foo.bar(); // => baz // good class Foo { bar() { console.log('bar'); } } \"]},\"59\":{\"h\":\"2.7. 模块\",\"t\":[\"2.7.1.【推荐】使用 ES6 modules 而非其他非标准的模块系统。eslint: import/module-systems\",\"使用 ES6 modules (import/export)，而不是其他非标准的模块系统，如 CommonJS、AMD、CMD。\",\"ES6 modules 作为标准代表着未来，让我们拥抱未来吧。\",\"// bad const React = require('react'); module.exports = React.Component; // good import React, { Component } from 'react'; export default Component; \",\"2.7.2.【强制】不要用多个 import 引入同一模块。eslint: import/no-duplicates\",\"多条 import 语句引入了同一模块会降低可维护性，你需要将它们合成一条语句。\",\"// bad import React from 'react'; import { Component } from 'react'; // good import React, { Component } from 'react'; \",\"2.7.3.【强制】import 语句需要放到模块的最上方。eslint: import/first\",\"由于 import 语句会被声明提升，将它们放到模块的最上方以防止异常行为。\",\"// bad import foo from 'foo'; foo.init(); import bar from 'bar'; bar.init(); // good import foo from 'foo'; import bar from 'bar'; foo.init(); bar.init(); \",\"2.7.4.【强制】禁止 default import 的名字跟文件内的其他 export 命名相同。eslint: import/no-named-as-default\",\"// foo.js export default 'foo'; export const bar = 'bar'; // bad import bar from './foo.js'; // good import foo from './foo.js'; \",\"2.7.5.【强制】禁止引用自身。eslint: import/no-self-import\",\"2.7.6.【强制】禁止循环引用。eslint: import/no-cycle\",\"2.7.7.【推荐】不要在 default export 上使用一个已导出的名称作为属性。eslint: import/no-named-as-default-member\",\"// foo.js export default 'foo'; export const bar = 'bar'; // bad import foo from './foo.js'; const bar = foo.bar; // or const { bar } = foo; // good import foo, { bar } from './foo.js'; \",\"2.7.8.【推荐】在模块导入之后保留一个空行。eslint: import/newline-after-import\",\"// bad import foo from './foo.js'; const FOO = 'FOO' // good import foo from './foo.js'; const FOO = 'FOO' \",\"2.7.9.【参考】import 语句的排序。eslint: import/order\",\"import 语句建议按以下规则排序：\",\"先 import 第三方模块，再 import 自己工程里的模块\",\"先 import 绝对路径，再 import 相对路径\",\"// bad import foo from 'components/foo'; import './index.scss'; import React from 'react'; // good import React from 'react'; import foo from 'components/foo'; import './index.scss'; \",\"2.7.10.【参考】当模块内只有一个 export 时，使用 default export。eslint: import/prefer-default-export\",\"我们也建议文件内只包含一个 export，这有利于代码的可维护性。\",\"// bad export function foo() {} // good export default function foo() {} \",\"2.7.11.【参考】不要在 import 时直接 export。\",\"虽然一行代码更简洁，但这不利于代码的可读性和一致性。\",\"// bad export { Com as Component } from 'react'; // good import { Component } from 'react'; export default Component; \",\"2.7.12.【参考】模块开发者选择EMS和CJS时，需要判断运行时环境：如果你的模块是只面向浏览器的则选择ESM；如果你的模块是只面向Node.js的则选择CJS，并且确定遵循CJS命名空间规则；如果你的模块是2者都要兼容的，则ESM和CJS都要支持。\",\"Node.js的模块，历史上Node.js遵循的是CommonJS，因此ES6 Module会有比较严重的兼容性问题。暂时没有特别好的解法，只能在Node.js中跟进运行时环境，判断使用模块标准。讨论issue\"]},\"60\":{\"h\":\"2.8. 操作符\",\"t\":[\"2.8.1.【推荐】使用严格相等运算符。eslint: eqeqeq\",\"非严格相等运算符（== 和 !=）会在比较前将被比较值转换为相同类型，对于不熟悉 JS 语言特性的人来说，这可能造成不小的隐患。了解更多\",\"因此，一般情况下我们应该使用严格比较运算符（ === 和 !==）进行比较。如果要比较的两个值类型不同，应该显性地将其转换成相同类型再进行严格比较，而不是依赖于 == 和 != 的隐式类型转换。\",\"const id = '83949'; // bad - 为了兼容 id 可能是字符串的情况，而有意使用 == 与数字比较 if (id == 83949) { // do something } // good - 如果 id 可能是字符串，应该先将其进行类型转换，再使用 === 进行比较 if (Number(id) === 83949) { // do something } \",\"2.8.2.【强制】不要使用一元自增自减运算符。eslint: no-plusplus\",\"不要使用一元自增自减运算符（++ 和 --），除非在 for 循环条件中。\",\"++ 和 -- 会带来值是否会提前变化带来的理解成本，也可能因为自动添加分号机制导致一些错误，因此我们推荐使用 num += 1 来代替 num++。但出于习惯，在 for 循环的条件中依然可以使用自增自减运算符。\",\"let num = 1; // bad num++; --num; // good num += 1; num -= 1; \",\"2.8.3.【强制】不要使用 void 运算符。eslint: no-void\",\"在很老版本的 JS 中，undefined 值是可变的，因此使用 void 语句一般是用来得到一个 undefined 值。而在新版本的 JS 中，上面的问题已不复存在。因此出于程序可读性的考虑，禁止使用 void 运算符。\",\"// bad const foo = void 0; // good const foo = undefined; \",\"2.8.4.【强制】避免嵌套的三元表达式。eslint: no-nested-ternary\",\"嵌套的三元表达式会降低代码可读性。\",\"// bad const foo = bar ? baz : qux === quxx ? bing : bam; // good const qu = qux === quxx ? bing : bam; const foo = bar ? baz : qu; \",\"2.8.5.【强制】避免不必要的三元表达式。eslint: no-unneeded-ternary\",\"// bad const foo = a ? a : b; const bar = c ? true : false; const baz = c ? false : true; // good const foo = a || b; const bar = !!c; const baz = !c; \",\"2.8.6.【强制】混合使用多种操作符时，用小括号包裹分组。eslint: no-mixed-operators\",\"这可以更清晰地表达代码意图，提高可读性。四则运算符（+, -, *, /）可以不包裹，因为\\b大多数人熟知它们的优先级。\",\"// bad const foo = a && b < 0 || c > 0 || d + 1 === 0; // good const foo = (a && b < 0) || c > 0 || (d + 1 === 0); // bad const bar = a ** b - 5 % d; // good const bar = (a ** b) - (5 % d); // bad - 有人可能会误以为执行顺序是 (a || b) && c if (a || b && c) { return d; } // good if (a || (b && c)) { return d; } // good - 四则运算可以不用小括号包裹 const bar = a + b / c * d; \"]},\"61\":{\"h\":\"2.9. 控制语句\",\"t\":[\"2.9.1.【强制】switch 语句中的 case 需要以 break 结尾。eslint: no-fallthrough\",\"// bad switch(foo) { case 1: doSomething(); case 2: doSomethingElse(); default: doSomething(); } // good switch(foo) { case 1: doSomething(); break; case 2: doSomethingElse(); break; default: doSomething(); } \",\"2.9.2.【推荐】switch 语句需要始终包含 default 分支。eslint: default-case\",\"在使用 switch 语句时，有时会出现因开发者忘记设置 default 而导致错误，因此建议总是给出 default。如果有意省略 default，请在 switch 语句末尾用 // no default 注释指明：\",\"// bad let foo; switch (bar) { case 1: foo = 2; break; } // good let foo; switch (bar) { case 1: foo = 2; break; default: foo = 0; } // good - 如果有意省略 default，请在 switch 语句末尾用 `// no default` 注释指明 let foo = 0; switch (bar) { case 1: foo = 2; break; // no default } \",\"2.9.3.【参考】switch 语句应包含至少 3 个条件分支。\",\"switch 语句在有许多条件分支的情况下可以使代码结构更清晰。但对于只有一个或两个条件分支的情况，更适合使用 if 语句，if 语句更易于书写和阅读。\",\"// bad let foo; switch (bar) { case 1: foo = 2; break; default: foo = 0; } // good let foo; if (bar === 1) { foo = 2; } else { foo = 0; } \",\"2.9.4.【参考】控制语句的嵌套层级不要过深。eslint: max-depth\",\"控制语句的嵌套层级不要超过 4 级，否则将难以阅读和维护：\",\"// bad if (condition1) { // depth = 1 if (condition2) { // depth = 2 for (let i = 0; i < 10; i++) { // depth = 3 if (condition4) { // depth = 4 if (condition5) { // bad - depth = 5 } return; } } } } \",\"2.9.5.【强制】for 循环中的计数器应朝着正确方向移动。eslint: for-direction\",\"当 for 循环中更新子句的计数器朝着错误的方向移动时，循环的终止条件将永远无法达到，这会导致死循环的出现。这时要么是程序出现了错误，要么应将 for 循环改为 while 循环。\",\"// bad for (let i = 0; i < length; i--) { // do something } // good for (let i = 0; i < length; i++) { // do something } \",\"2.9.6.【推荐】for-in 循环中需要对 key 进行验证。eslint: guard-for-in\",\"使用 for-in 循环时需要避免对象从原型链上继承来的属性也被遍历出来，因此保险的做法是对 key 是否是对象自身的属性进行验证：\",\"// bad for (const key in foo) { doSomething(key); } // good for (const key in foo) { if (Object.prototype.hasOwnProperty.call(foo, key)) { doSomething(key); } } \",\"2.9.7.【参考】如果一个 if 语句的结果总是返回一个 return 语句，那么最后的 else 是不必要的。eslint: no-else-return\",\"// bad function foo() { if (x) { return x; } else { return y; } } // good function foo() { if (x) { return x; } return y; } \",\"2.9.8.【参考】条件表达式的计算结果。\",\"条件表达式（例如 if 语句的条件）的值为通过抽象方法 ToBoolean 进行强制转换所得，计算结果遵守下面的规则：\",\"对象、数组 被计算为 true\",\"Undefined 被计算为 false\",\"Null 被计算为 false\",\"布尔值 被计算为 布尔的值\",\"数字 如果是 +0、-0 或 NaN 被计算为 false，否则为 true\",\"字符串 如果是空字符串 '' 被计算为 false，否则为 true\",\"if ({}) { // => true } if ([]) { // => true } if (0) { // => false } if ('0') { // => true } if ('') { // => false } \"]},\"62\":{\"h\":\"2.10. 其他\",\"t\":[\"2.10.1.【强制】禁止使用 eval。eslint: no-eval\",\"eval 语句存在安全风险，可能导致注入攻击。\",\"// bad const obj = { x: 'foo' }; const key = 'x'; const value = eval('obj.' + key); // good const obj = { x: 'foo' }; const key = 'x'; const value = obj[key]; \",\"2.10.2.【强制】禁止使用 debugger。eslint: no-debugger\",\"debugger 语句会让程序暂停，并在当前位置开启调试器。它通常在程序调试阶段使用，不应发布到线上。\",\"// bad function isTruthy(x) { debugger; return Boolean(x); } \",\"2.10.3.【推荐】禁止使用 alert。eslint: no-alert\",\"alert 语句会使浏览器弹出原生警告框，这可能让人感觉你的程序出错了。如果需要对用户弹出警告信息，好的做法是使用第三方的弹窗组件或自己定义警告框样式。同理，confirm 和 prompt 语句也不应被使用。\",\"// bad alert('Oops!'); // good - 使用自定义的 Alert 组件 Alert('Oops!'); \",\"2.10.4.【推荐】生产环境禁止使用 console。eslint: no-console\",\"console 语句通常在调试阶段使用，发布上线前，应该去掉代码里所有的 console 语句。\",\"// bad console.log('Some debug messages..'); // good - 如果你非要使用 console 语句，可以考虑自己进行封装以确保不要在生产环境暴露调试信息 const utils = { log: (msg) => { if (window.env !== 'product') { console.log(msg); } }, }; utils.log('Some debug messages..'); \",\"2.10.5.【强制】禁止对原生对象或只读的全局对象进行赋值。eslint: no-global-assign\",\"JS 执行环境中会包含一些全局变量和原生对象，如浏览器环境中的 window，node 环境中的 global 、process，Object，undefined 等。除了像 window 这样的众所周知的对象，JS 还提供了数百个内置全局对象，你可能在定义全局变量时无意对它们进行了重新赋值，因此最好的做法是不要定义全局变量。\",\"// bad window = {}; Object = null; undefined = 1; \"]},\"63\":{\"h\":\"3. 注释\",\"t\":[\"注释的目的：提高代码的可读性，从而提高代码的可维护性 注释的原则：如无必要，勿增注释；如有必要，尽量详尽\",\"3.1.【推荐】单行注释使用 //。\",\"注释应单独一行写在被注释对象的上方，不要追加在某条语句的后面：\",\"// bad const active = true; // is current tab // good // is current tab const active = true; \",\"注释行上方需要有一个空行（除非注释行上方是一个块的顶部），以增加可读性：\",\"// bad - 注释行上方需要一个空行 function getType() { console.log('fetching type...'); // set the default type to 'no type' const type = this.type || 'no type'; return type; } // good function getType() { console.log('fetching type...'); // set the default type to 'no type' const type = this.type || 'no type'; return type; } // bad - 注释行上面是一个块的顶部时不需要空行 function getType() { // set the default type to 'no type' const type = this.type || 'no type'; return type; } // good function getType() { // set the default type to 'no type' const type = this.type || 'no type'; return type; } \",\"3.2.【推荐】多行注释使用 /** ... */，而不是多行的 //。\",\"// bad // make() returns a new element // based on the passed in tag name function make(tag) { // ... return element; } // good /** * make() returns a new element * based on the passed-in tag name */ function make(tag) { // ... return element; } \",\"3.3.【强制】注释内容和注释符之间需要有一个空格。eslint: spaced-comment\",\"注释内容和注释符之间需要有一个空格，以增加可读性：\",\"// bad //is current tab const active = true; // good // is current tab const active = true; // bad /** *make() returns a new element *based on the passed-in tag name */ function make(tag) { // ... return element; } // good /** * make() returns a new element * based on the passed-in tag name */ function make(tag) { // ... return element; } \",\"3.4.【参考】合理使用特殊注释标记。eslint: no-warning-comments\",\"有时我们发现某个可能的 bug，但因为一些原因还没法修复；或者某个地方还有一些待完成的功能，这时我们需要使用相应的特殊标记注释来告知未来的自己或合作者。最常用的特殊标记有两种：\",\"// FIXME: 说明问题是什么\",\"// TODO: 说明还要做什么或者问题的解决方案\",\"一个我们不愿看到却很普遍的情况是，我们给代码标记 FIXME 或 TODO 后却一直没找到时间处理。所以当你做了特殊标记，你应该为它负责，在某个时间把它解决。\",\"class Calculator extends Abacus { constructor() { super(); // FIXME: shouldn’t use a global here total = 0; // TODO: total should be configurable by an options param this.total = 0; } } \",\"3.5.【参考】文档类注释使用 jsdoc 规范。\",\"文档类注释，如函数、类、文件、事件等，推荐使用 jsdoc 规范或类 jsdoc 的规范。\",\"例如：\",\"/** * Book类，代表一个书本. * @constructor * @param {string} title - 书本的标题. * @param {string} author - 书本的作者. */ function Book(title, author) { this.title = title; this.author = author; } Book.prototype = { /** * 获取书本的标题 * @returns {string|*} */ getTitle() { return this.title; }, /** * 设置书本的页数 * @param pageNum {number} 页数 */ setPageNum(pageNum) { this.pageNum = pageNum; }, }; \",\"3.6.【参考】无用的代码注释应被即时删除。\",\"无用的注释代码会使程序变得臃肿并降低可读性，应被即时删除。你可以通过版本控制系统找回被删除的代码。\"]},\"64\":{\"h\":\"4. 命名\",\"t\":[\"4.1.【参考】文件名：使用小写字母命名。考虑到部分操作系统（如 Windows, ·）下文件系统大小写不敏感，推荐使用 - 连接。例如：hello-world.js。\",\"4.2.【参考】使用小驼峰（camelCase）命名原始类型、对象、函数、实例。camelcase\",\"// bad const this_is_my_string = 'foo'; const this_is_my_object = {}; function this_is_my_function() {} // good const thisIsMyString = 'foo'; const thisIsMyObject = {}; function thisIsMyFunction() {} \",\"4.3.【强制】使用大驼峰（PascalCase）命名类和构造函数。eslint: new-cap\",\"// bad function user(options) { this.name = options.name; } const bad = new user({ name: 'nope', }); // good class User { constructor(options) { this.name = options.name; } } const good = new User({ name: 'yup', }); \",\"4.4.【参考】全部大写字母&单词间用下划线分割的命名模式（UPPERCASE_VARIABLES）。\",\"全大写字母、单词间使用下划线分割的命名模式（UPPERCASE_VARIABLES），仅用于命名常量，且该常量需同时满足如下条件：\",\"使用 const 关键字声明\",\"用于 export，而不是本文件内\",\"ES6 后 const 关键字用于声明常量，被广泛使用，如果所有用 const 声明的值都用 UPPERCASE_VARIABLES 模式命名会使可读性变差，是没有必要的。因此我们约定 UPPERCASE_VARIABLES 命名模式只用于 export 给其他文件用的常量，如果只在同文件内使用，依然使用正常的命名风格。\",\"// bad - 在本文件中使用的常量，不需使用 UPPERCASE_VARIABLES 风格 const PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file'; // bad export let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables'; // good export const THIS_IS_CONSTANT = '一个常量'; \",\"此外，如果 export 一个对象，只有对象本身需要使用 UPPERCASE_VARIABLES ，对象属性的 key 仍然使用正常命名风格：\",\"// bad - unnecessarily uppercases key while adding no semantic value export const AN_OBJECT = { KEY: 'value', }; // good export const AN_OBJECT = { key: 'value', }; \",\"4.5.【参考】模块相关的命名规范。\",\"使用小驼峰（camelCase）命名 export 的函数：\",\"function makeStyleGuide() { // ... } export default makeStyleGuide; \",\"使用大驼峰（PascalCase）命名 export 的 class、函数库、字面量对象：\",\"const AnObject = { foo: { // ... }, }; export default AnObject; \",\"4.6.【参考】命名不要以下划线开头或结尾。eslint: no-underscore-dangle\",\"JS 没有私有属性或私有方法的概念，这样的命名可能会让人误解。\",\"// bad this.__firstName__ = 'Panda'; this.firstName_ = 'Panda'; this._firstName = 'Panda'; // good this.firstName = 'Panda'; \"]},\"65\":{\"h\":\"参考资料\",\"t\":[\"Airbnb JavaScript Style Guide\",\"Google JavaScript Style Guide\",\"ESLint rules\"]},\"66\":{\"h\":\"Node 编码规范\",\"t\":[\"提示\",\"Node.js 规约主要包含编码风格、安全规约、最佳实践等几个部分，目的是给业务同学提供研发过程中的实质性规范和指导。其中编码风格 follow eslint-config-egg。\"]},\"67\":{\"h\":\"1. 编码风格\",\"t\":[\"1.1.【推荐】使用 Node.js 内置的全局变量。eslint: node/prefer-global\",\"// bad const { Buffer } = require('buffer'); const b = Buffer.alloc(16); // good const b = Buffer.alloc(16); // bad const { URL } = require('url'); const u = new URL(s); // good const u = new URL(s); // bad const { URLSearchParams } = require('url'); const u = new URLSearchParams(s); // good const u = new URLSearchParams(s); // bad const { TextEncoder } = require('util'); const u = new TextEncoder(s); // good const u = new TextEncoder(s); // bad const { TextDecoder } = require('util'); const u = new TextDecoder(s); // good const u = new TextDecoder(s); // bad const process = require('process'); process.exit(0); // good process.exit(0); // bad const console = require('console'); console.log('hello'); // good console.log('hello'); \",\"1.2.【推荐】使用模块内支持的 promises API。eslint: node/prefer-promises\",\"Node.js 从 v11.14.0 开始支持 require('dns').promises 和 require('fs').promises API。\",\"// bad const dns = require('dns'); const fs = require('fs'); function lookup(hostname) { dns.lookup(hostname, (error, address, family) => { // ... }); } function readData(filePath) { fs.readFile(filePath, 'utf8', (error, content) => { // ... }); } // good const { promises: dns } = require('dns'); const { promises: fs } = require('fs'); async function lookup(hostname) { const { address, family } = await dns.lookup(hostname); // ... } async function readData(filePath) { const content = await fs.readFile(filePath, 'utf8'); // ... } \",\"1.3.【推荐】如无特殊需求，模块引用声明放在文件顶端，注意引用顺序。eslint: import/order\",\"如无特殊需求（如动态 require），模块引用声明需要放在文件顶端。引用顺序如无特殊需求，按以下顺序来引入依赖：node 内置模块、npm 包、本地文件或其他，几类文件代码块之间各空一行，每类文件代码块中的引用顺序按照字典排序，如有解构引用情况，字典序以解构的第一个为准，解构内部按照字典排序。\",\"// bad const Car = require('./models/car'); const moment = require('moment'); const mongoose = require('mongoose'); const fs = require('fs'); const http = require('http'); const { Foo, Bar } = require('tool'); const note = require('note'); // good const fs = require('fs'); const http = require('http'); const { Bar, Foo } = require('tool'); const moment = require('moment'); const mongoose = require('mongoose'); const note = require('note'); const Car = require('./models/car'); // bad import Car from './models/car'; import moment from 'moment'; import mongoose from 'mongoose'; import fs from 'fs'; import http from 'http'; import { Foo, Bar } from 'tool'; import note from 'note'; // good import fs from 'fs'; import http from 'http'; import { Bar, Foo } from 'tool'; import moment from 'moment'; import mongoose from 'mongoose'; import note from 'note'; import Car from './models/car'; \",\"1.4.【推荐】抛出异常时，使用原生 Error 对象。eslint: no-throw-literal\",\"// bad throw 'error'; throw 0; throw undefined; throw null; const err = new Error(); throw 'an ' + err; const err = new Error(); throw `${err}` // good throw new Error(); throw new Error('error'); const err = new Error('error'); throw err; try { throw new Error('error'); } catch (err) { throw err; } \",\"1.5.【推荐】线上环境尽量不要使用 fs/child_process 模块的 sync 方法，如 fs.readFileSync()、cp.execSync() 等。\",\"这样会阻塞 Node.js 应用的进程，导致不能继续处理新的请求，或当前正在处理的请求超时。推荐使用 require('fs').promises 方式或使用 mz。\",\"// bad const fs = require('fs'); function test() { fs.readFileSync('./somefile', 'utf-8'); } // good const { promises: fs } = require('fs'); async function test() { await fs.readFile('./somefile', 'utf-8'); } // good const fs = require('mz/fs'); async function test() { await fs.readFile('./somefile', 'utf-8'); } \"]},\"68\":{\"h\":\"2. 安全规约\",\"t\":[\"2.1.【强制】在客户端隐藏错误详情。\",\"错误提示有可能会暴露出敏感的系统信息，容易被利用去做进一步的攻击。\",\"2.2.【强制】隐藏或伪造技术栈和框架标识。\",\"隐藏或伪造 X-Powered-By 响应头，应用广泛的框架多有公开的漏洞，防止标识露出被恶意利用。\",\"2.3.【强制】JSONP 跨域接口必须严格校验访问来源。\",\"配置域名白名单，防止通过 JSONP 接口获取到敏感信息的风险。\",\"2.4.【强制】禁止使用从参数或明文 cookie 中获取的用户标识进行敏感信息查询输出。\",\"防止未授权访问/越权访问。\",\"2.5.【强制】防止 SQL 注入。\",\"含有用户输入内容的 SQL 语句必须使用预编译模式。若用户输入无法使用预编译模式(输入为表名/字段名等内容)，需要对用户输入进行转义/过滤之后再拼接到 SQL 中。\",\"2.6.【推荐】定期检查过期依赖和依赖漏洞升级。\",\"检测依赖，对于有漏洞或者过期的依赖要及时升级或替换。\",\"2.7.【推荐】用户上传文件不允许至服务器本地，需要上传到 OSS 等服务。\",\"任意文件上传漏洞，防止用户上传恶意文件，入侵服务器。\",\"2.8.【推荐】服务端 URL 重定向需要设置白名单。\",\"若需要对用户输入内容作为目标 URL 进行重定向，需要对其进行域名白名单校验，不允许跳转至白名单外的域名。\",\"2.9.【推荐】对接口入参严格校验。\",\"使用 jsonschema 或 joi 校验入参，减少意外输入造成的程序报错或崩溃，同时也能减少脏数据形成。\"]},\"69\":{\"h\":\"3. 最佳实践\",\"t\":[\"3.1.【推荐】应用不应该有状态。\",\"使用外部数据存储。保证即使结束某个应用实例也不会影响数据和服务。\",\"3.2.【推荐】尽量不要用 Node.js 应用去托管前端静态文件。\",\"应该把前端静态文件放到 CDN，当静态文件的访问量很大的时候，可能会阻塞其他服务的执行。\",\"3.3.【推荐】把 CPU 密集型任务委托给反向代理。\",\"Node.js 应用不合适做 CPU 密集型任务（例如 gzip，SSL），请尽量把这类任务代理给 nginx 或其他服务。\",\"3.4.【推荐】使用 async/await，尽量避免使用回调函数。\",\"async/await 可以让你的代码看起来更简洁，可以规避掉回调地狱的问题，并且使异常处理也变得清晰简单。\",\"3.5.【推荐】使用 util.promisify 处理回调函数，使其返回 Promise。\",\"const util = require('util'); const fs = require('fs'); const stat = util.promisify(fs.stat); async function callStat() { const stats = await stat('.'); console.log(`This directory is owned by ${stats.uid}`); } \",\"3.6.【推荐】使用 Node.js 原生 Promise，而不是三方库如 bluebird。\",\"3.7.【推荐】在类方法中返回 this 方便链式调用。\",\"class Jedi { jump() { this.jumping = true; return this; } setHeight(height) { this.height = height; return this; } } const luke = new Jedi(); luke.jump() .setHeight(20); \"]},\"70\":{\"h\":\"参考资料\",\"t\":[\"eslint-plugin-security\",\"eslint-plugin-node\",\"airbnb javascript style\"]},\"71\":{\"h\":\"TypeScript 编码规范\",\"t\":[\"提示\",\"TypeScript 是微软开发的一款开源编程语言，它是 JavaScript 的超集，因此其编码规约和配套 Lint 工具也与JavaScript 编码规范一脉相承。\"]},\"72\":{\"h\":\"编码风格\",\"t\":[\"【强制】重载的函数必须写在一起 @typescript-eslint/adjacent-overload-signatures\",\"自然相关的项组合在一起将提高代码可读性和组织性。\",\"// bad declare namespace Foo { export function foo(s: string): void; export function foo(n: number): void; export function bar(): void; export function foo(sn: string | number): void; } // good declare namespace Foo { export function foo(s: string): void; export function foo(n: number): void; export function foo(sn: string | number): void; export function bar(): void; } \",\"// bad type Foo = { foo(s: string): void; foo(n: number): void; bar(): void; foo(sn: string | number): void; }; interface Foo { foo(s: string): void; foo(n: number): void; bar(): void; foo(sn: string | number): void; } class Foo { foo(s: string): void; foo(n: number): void; bar(): void {} foo(sn: string | number): void {} } // good type Foo = { foo(s: string): void; foo(n: number): void; foo(sn: string | number): void; bar(): void; }; interface Foo { foo(s: string): void; foo(n: number): void; foo(sn: string | number): void; bar(): void; } class Foo { foo(s: string): void; foo(n: number): void; foo(sn: string | number): void {} bar(): void {} } \",\"// bad export function foo(s: string): void; export function foo(n: number): void; export function bar(): void; export function foo(sn: string | number): void; // good export function bar(): void; export function foo(s: string): void; export function foo(n: number): void; export function foo(sn: string | number): void; \",\"【推荐】简单数组类型的定义使用 T[]，复杂类型使用 Array<T>@typescript-eslint/array-type\",\"对数组类型的定义使用相同的规范将帮助开发者更快地理解和阅读类型。\",\"简单类型（数字、字符串、布尔等）请使用 T[] 或 readonly T[] ，其他复杂类型（联合、交叉、对象、函数等）请使用 Array<T> 或 ReadonlyArray<T>\",\"// bad const a: (string | number)[] = ['a', 1]; const b: { prop: string }[] = [{ prop: 'a' }]; const c: (() => void)[] = [() => {}]; const d: Array<MyType> = ['a', 'b']; const e: Array<string> = ['a', 'b']; const f: ReadonlyArray<string> = ['a', 'b']; // good const a: Array<string | number> = ['a', 1]; const b: Array<{ prop: string }> = [{ prop: 'a' }]; const c: Array<() => void> = [() => {}]; const d: MyType[] = ['a', 'b']; const e: string[] = ['a', 'b']; const f: readonly string[] = ['a', 'b']; \",\"【推荐】使用 TypeScript 注释指令时需跟随描述说明 @typescript-eslint/ban-ts-comment\",\"TS 提供了一些指令注释，可用于忽略 TypeScript 编译器在编译阶段的错误，如下：\",\"// @ts-expect-error // @ts-ignore // @ts-nocheck // @ts-check \",\"我们允许在代码中使用指令注释，但需要跟随一定长度的描述说明。\",\"// bad // @ts-expect-error console.log('my code'); // @ts-ignore console.log('my code'); // good // @ts-expect-error: Unreachable code here console.log('my code'); // @ts-ignore: It's ok to ignore this compile error console.log('my code'); \",\"【强制】禁止使用 // tslint:<rule-flag> 等 tslint 注释 @typescript-eslint/ban-tslint-comment\",\"tslint 已经被废弃，对应的指令注释也不应再出现。\",\"// bad /* tslint:disable */ /* tslint:enable */ /* tslint:disable:rule1 rule2 rule3... */ /* tslint:enable:rule1 rule2 rule3... */ // tslint:disable-next-line someCode(); // tslint:disable-line // tslint:disable-next-line:rule1 rule2 rule3... \",\"【推荐】如果类的属性是一个字面量，则推荐使用只读属性 readonly 而不是 getter@typescript-eslint/class-literal-property-style\",\"类上所有返回「字面量」的 getter 方法，都推荐使用 readonly 修饰符来代替，字面量包含字符串、模板字符串、数字、bigint、正则和 null。\",\"说明：在一些特殊场景，编写代码的最终用户是 JavaScript 开发者时，可以使用 getter 来保证字段无法被重新定义和覆盖，因为 readonly 修饰符只作用于 TypeScript 编译阶段。\",\"// bad class Mx { public static get myField1() { return 1; } private get ['myField2']() { return 'hello world'; } } // good class Mx { public readonly myField1 = 1; public readonly myField2 = [1, 2, 3]; // 非字面量 private readonly ['myField3'] = 'hello world'; public get myField4() { return `hello from ${window.location.href}`; } } \",\"【强制】类型断言必须使用 as Type@typescript-eslint/consistent-type-assertions\",\"类型断言（type assertiions）也可称作类型转换（type casting），本质上是对 TypeScript 类型系统的人为干预：\",\"强制对类型的断言统一使用 as Type 风格而非 <Type> ，后者容易与 JSX 产生混淆。\",\"对象字面量禁止类型断言，断言成 any 除外，对象字面量应该直接声明。\",\"TypeScript 3.4 中引入的 const 断言在本规则中不受约束，let x = 'hello' as const; 和 let x = <const>'hello'; 都是允许的。\",\"// bad const foo = <string>'bar'; // good const foo = 'bar' as string; \",\"// bad const x = { ... } as T; const y = { ... } as object; // good const x: T = { ... }; const y = { ... } as any; const z = { ... } as unknown; \",\"【推荐】优先使用 interface 定义类型 @typescript-eslint/consistent-type-definitions\",\"interface 支持 extend/implement/union 等等类型能力，同时也可以用于描述普通对象。\",\"// bad type T = { x: number }; // good type T = string; type Foo = string | {}; interface T { x: number; } \",\"【推荐】设置类成员的可访问性 @typescript-eslint/explicit-member-accessibility\",\"将非公开成员的可访问性设置为「私有」，可以增强代码可理解性，同时也能避免一些非法调用，公开的成员可省略 public 修饰符。\",\"// bad class Foo { static foo = 'foo'; static getFoo() { return Foo.foo; } constructor() {} bar = 'bar'; getBar() {} get baz() { return 'baz'; } set baz(value) { console.log(value); } } // good class Foo { private static foo = 'foo'; public static getFoo() { return Foo.foo; } public constructor() {} protected bar = 'bar'; public getBar() {} public get baz() { return 'baz'; } public set baz(value) { console.log(value); } } \",\"【强制】interface/type 类型中使用一致的成员分隔符 ;@typescript-eslint/member-delimiter-style\",\"// bad: comma style(JSON style) interface Foo { name: string, greet(): void, } type Bar = { name: string, greet(): void, }; // bad: line break style interface Foo { name: string greet(): void } type Bar = { name: string greet(): void }; // good interface Foo { name: string; greet(): void; } type Bar = { name: string; greet(): void; }; \",\"【推荐】类的成员应按照固定的先后顺序排列 @typescript-eslint/member-ordering\",\"类的静态方法 / 属性（static）优先于实例的方法 / 属性（instance）\",\"属性（field）优先于构造函数（constructor），优先于方法（method）\",\"公开的成员（public）优先于受保护的成员（protected），优先于私有的成员（private）\",\"// good class Foo { public static foo1 = 'foo1'; protected static foo2 = 'foo2'; private static foo3 = 'foo3'; public static getFoo1() {} protected static getFoo2() {} private static getFoo3() { return Foo.foo3; } public bar1 = 'bar1'; protected bar2 = 'bar2'; private bar3 = 'bar3'; public constructor() { console.log(Foo.getFoo3()); console.log(this.getBar3()); } public getBar1() {} protected getBar2() {} private getBar3() { return this.bar3; } } \",\"【推荐】接口中的方法使用属性的方式定义 @typescript-eslint/method-signature-style\",\"使用属性去定义接口中的方法，可以获得更严格的检查。\",\"// bad interface T1 { func(arg: string): number; } type T2 = { func(arg: boolean): void; }; interface T3 { func(arg: number): void; func(arg: string): void; func(arg: boolean): void; } // good interface T1 { func: (arg: string) => number; } type T2 = { func: (arg: boolean) => void; }; // 属性方法实现重载 interface T3 { func: ((arg: number) => void) & ((arg: string) => void) & ((arg: boolean) => void); } \",\"【推荐】禁止使用容易混淆的非空断言 @typescript-eslint/no-confusing-non-null-assertion\",\"在相等比较运算符（== 或 ===）前使用非空断言（!）很容易和不等运算符（!= 或 !==）混淆，不建议使用。\",\"interface Foo { bar?: string; num?: number; } // bad const foo: Foo = getFoo(); const isEqualsBar = foo.bar! == 'hello'; const isEqualsNum = 1 + foo.num! == 2; // good const foo: Foo = getFoo(); const isEqualsBar = foo.bar == 'hello'; const isEqualsNum = (1 + foo.num!) == 2; \",\"【推荐】避免定义空的接口类型 @typescript-eslint/no-empty-interface\",\"空的接口类型等效于空对象，若它只继承另一个接口类型，那么该类型与被继承的类型等效。在代码中应减少定义无意义的接口类型。\",\"// bad // an empty interface interface Foo {} // an interface with only one supertype (Bar === Foo) interface Bar extends Foo {} // an interface with an empty list of supertypes interface Baz {} // good // an interface with any number of members interface Foo { name: string; } // same as above interface Bar { age: number; } // an interface with more than one supertype // in this case the interface can be used as a replacement of a union type. interface Baz extends Foo, Bar {} \",\"【推荐】初始化为 number/string/boolean 的变量或参数应避免显式的类型声明 @typescript-eslint/no-inferrable-types\",\"对于容易类型推倒出的变量、参数，再次的显式声明类型会带来代码冗余。\",\"// bad const foo: number = 1; const bar: string = ''; class Foo { prop: number = 5; } function fn(a: number = 5, b: boolean = true) {} // good const foo = 1; const bar = ''; class Foo { prop = 5; } function fn(a = 5, b = true) {} \",\"【强制】禁止无意义的 void 类型 @typescript-eslint/no-invalid-void-type\",\"禁止在返回类型或泛型类型参数之外使用 void 类型，而且在返回类型中不应再与其他类型做联合或交叉。\",\"void 类型代表「无」或函数「不返回任何值」，隐式未定义类型代表函数返回「未定义的值 undefined」，所以 void 类型无法与除了 never 外的其他类型做联合、交叉。\",\"// bad type PossibleValues = string | number | void; type MorePossibleValues = string | ((number & any) | (string | void)); function logSomething(thing: void) {} function printArg<T = void>(arg: T) {} logAndReturn<void>(undefined); interface Interface { lambda: () => void; prop: void; } class MyClass { private readonly propName: void; } // good type NoOp = () => void; function noop(): void {} let trulyUndefined = void 0; async function promiseMeSomething(): Promise<void> {} type stillVoid = void | never; \",\"【强制】禁止使用 namespace 来定义命名空间 @typescript-eslint/no-namespace\",\"自定义 TypeScript 模块（module）和命名空间（namespace）已经不再推荐使用，首选 ES2015 的模块语法来导入导出。此规则仍然允许定义外部的模块或命名空间。\",\"// bad module foo {} namespace foo {} // good declare module 'foo' {} declare module foo {} declare namespace foo {} declare global { namespace foo {} } declare module foo { namespace foo {} } \",\"【强制】禁止在 optional chaining 之后使用 non-null 断言 @typescript-eslint/no-non-null-asserted-optional-chain\",\"optional chaining 被设计为返回 undefined，在之后使用非空断言是错误的，会引入严重的类型安全问题。\",\"// bad foo?.bar!; foo?.bar!.baz; foo?.bar()!; foo?.bar!(); foo?.bar!().baz; // good foo?.bar; (foo?.bar).baz; foo?.bar(); foo?.bar(); foo?.bar().baz; // 如果您使用的是 TS3.9 或更高版本，则以下代码也是正确的 foo?.bar!.baz; foo?.bar!(); foo?.bar!().baz; \",\"【推荐】使用 ES2015 import 语法引入模块 @typescript-eslint/no-require-imports\",\"// bad const fs = require('fs'); // good import * as fs from 'fs'; \",\"【推荐】不建议将 this 赋值给其他变量 @typescript-eslint/no-this-alias\",\"通过变量赋值为 this 的方式来管理函数作用域不是我们推荐的最佳实践，应使用箭头函数保留函数作用域。此规则中允许对 this 的解构赋值。\",\"// bad function foo() { const self = this; setTimeout(function () { self.doWork(); }); } // good function foo() { setTimeout(() => { this.doWork(); }); } \",\"【推荐】当变量的值与类型声明相等时，优先使用 as const@typescript-eslint/prefer-as-const\",\"// bad let bar: 2 = 2; let foo = <'bar'>'bar'; let foo = { bar: 'baz' as 'baz' }; // good let foo = 'bar'; let foo = 'bar' as const; let foo: 'bar' = 'bar' as const; let bar = 'bar' as string; let foo = <string>'bar'; let foo = { bar: 'baz' }; \",\"【强制】禁止使用 module 来定义命名空间 @typescript-eslint/prefer-namespace-keyword\",\"module 已经成为 JS 语言的关键字，应避免 TypeScript 模块与 ES2015 模块混淆。declare module 不做限制。\",\"// bad module Foo {} // good declare module Foo {} declare namespace Foo {} \",\"【强制】字符串字面量使用单引号包裹 @typescript-eslint/quotes\",\"// bad const foo = \\\"bar\\\"; // good const foo = 'bar'; \",\"【推荐】 加号 + 连接的两侧同为数字或同为字符串 @typescript-eslint/restrict-plus-operands\",\"数字与字符串的连接往往会导致一些预期外的问题。\",\"// bad var foo = '5.5' + 5; var foo = 1n + 1; // good var foo = parseInt('5.5', 10) + 10; var foo = 1n + 1n; \",\"【强制】禁止使用三斜杠语法 /// 导入文件 @typescript-eslint/triple-slash-reference\",\"三斜杠语法已经被废弃，声明文件（d.ts）以外禁止使用。\",\"// bad /// <reference path=\\\"./my-module\\\" /> // good import myModule from './my-module'; \",\"【强制】类型声明时应正确添加空格间距 @typescript-eslint/type-annotation-spacing\",\"TypeScript 类型声明周围添加合适的间距可以有效的提升代码可读性，我们约定：\",\"冒号前无空格，冒号后保留一个空格\",\"箭头前后都保留一个空格\",\"// bad let foo:string = 'bar'; let foo :string = 'bar'; let foo : string = 'bar'; function foo():string {} function foo() :string {} function foo() : string {} class Foo { name:string; } class Foo { name :string; } class Foo { name : string; } type Foo = ()=> {}; // good let foo: string = 'bar'; function foo(): string {} class Foo { name: string; } type Foo = () => {}; \",\"【强制】interface 和 type 定义时必须声明成员的类型 @typescript-eslint/typedef\",\"// bad type Members = { member; otherMember; }; // good type Members = { member: boolean; otherMember: string; }; \",\"【推荐】定义函数时，优先使用参数的联合类型而不是函数的类型重载 @typescript-eslint/unified-signatures\",\"// bad function f(x: number): void; function f(x: string): void; f(): void; f(...x: number[]): void; // good function f(x: number | string): void; function f(x?: ...number[]): void; \"]},\"73\":{\"h\":\"CHANGELOG 规范\"},\"74\":{\"h\":\"前言\",\"t\":[\"作为一个开发者，我必须为我的项目维护一个更新日志（以下简称 Changelog）吗？\",\"如果你在维护一个开源项目，或者公司内部的底层技术产品，那么提供一个 Changelog是必需的。开发者用户很可能需要从一个低版本升级到最新版，Changelog 可以帮助他们了解新版本有哪些变化。\",\"如果你在开发一个业务应用，那么 Changelog 不是必需的。然而提供一个 Changelog 会更好，因为其他协作者或是交接方能更直观地看到业务逻辑的演变。\",\"Git 规范 已经对 Git 提交日志的格式进行了约束，为何还要再约束 Changelog 的格式呢？\",\"即便是约束了 Git log 的格式，也无法直接将 Git log 导出一个良好的 Changelog。因为 Changelog 中描述的内容需要更加精炼和归纳，对信息降噪处理等等，因此手写 Changelog 仍然是更好的选择。\",\"不管是手写还是自动生成，Changelog 的格式都不能直接照搬 Git log 的格式。这两者的区别与联系同在。\"]},\"75\":{\"h\":\"1. 文件\",\"t\":[\"1.1.【强制】Changelog 文件必须取名为 CHANGELOG.md\",\"使用大写来表明本文件的重要性，相当于是项目仓库元信息的一部分。\",\"<!-- bad --> changelog.md Changelog.md ChangeLog.md CHANGELOG.MD <!-- good --> CHANGELOG.md \",\"1.2.【强制】Changelog 文件必须是使用标准 Markdown 语法的文本文件，并以 .md 作为后缀\",\"<!-- bad --> CHANGELOG.txt CHANGELOG.docx <!-- good --> CHANGELOG.md \",\"1.3.【强制】Changelog 文件必须存放在项目根目录下，和 README.md、CONTRIBUTING.md 等并列\"]},\"76\":{\"h\":\"2. 格式\",\"t\":[\"规约推荐的标准 Changelog 格式如下：\",\"# 更新日志 ## [<version>](<version-diff-url>) (<date>) ### <type> * <desc> * <desc> ### <type> * <desc> * <desc> \",\"详细规则如下：\",\"2.1.【强制】文章标题使用「更新日志」作为固定文案。国际化场景使用英文「Change Log」作为固定文案\",\"<!-- bad --> # 修改日志 # ChangeLog <!-- good --> # 更新日志 # Change Log \",\"2.2【强制】Changelog 内容按版本号降序排列，最新版本放在最前面\",\"<!-- bad --> ## 1.0.0 ## 2.0.0 <!-- good --> ## 2.0.0 ## 1.0.0 \",\"2.3.【强制】版本号 version 需遵循 SemVer 规范\",\"<!-- bad --> ## 2.0 ## 1.0.a ## 0.a.1 ## 0.0.0.1 <!-- good --> ## 2.0.0 ## 1.0.0 ## 1.0.0-rc.1 ## 1.0.0-beta.2 ## 1.0.0-beta.1 ## 1.0.0-beta ## 1.0.0-alpha.beta ## 1.0.0-alpha.1 ## 1.0.0-alpha \",\"2.4.【推荐】版本号增加一个超链接，指向当前版本和上一个版本之间的 `diff\",\"<!-- bad --> ## 2.0.0 <!-- good --> ## [2.0.0](https://version-diff-url) \",\"2.5.【强制】更新日期 date 采用 yyyy-MM-dd 格式\",\"<!-- bad --> ## [2.0.0](https://version-diff-url) (20200905) ## [2.0.0](https://version-diff-url) (2020-9-5) <!-- good --> ## [2.0.0](https://version-diff-url) (2020-09-05) \",\"2.6.【推荐】更新类型 type 与 Git message header 中的 type 相关联，可以不一一对应\",\"type 用以说明更新的类型，推荐值如下：\",\"新增（Features）：新增功能。\",\"修复（Bug Fixes）：修复 bug。\",\"文档（Documentation）：文档新增或者修改。\",\"变更（Changed）：对于某些已存在功能所发生的逻辑变化。\",\"优化（Refactored）：性能或结构上的优化，并未带来功能的逻辑变化。\",\"即将删除（Deprecation Warnings）：即将废弃功能。\",\"删除（Removed）：已删除的功能。\",\"重大变更（Breaking Changes）：破坏性变动。\",\"2.7.【推荐】更新描述 desc 内容需要注意以下几点：\",\"使用完整的句子。即在标点方面遵循一般的文档格式规约；如果使用英语，则句首大写。\",\"时态方面使用一般现在时，不要用过去时态。虽然查看 Changelog 时，Changelog 内容本身都发生在过去，然而使用现在时的时态更简洁明确，并且更易达成一致性。\",\"句式使用祈使句式。即一般情况不要增加主语。因为在绝大情况下，主语都是作者「我」。\",\"注明修复的问题。如有提过 Issue，则在句尾增加 Issue 的 ID 和链接。\"]},\"77\":{\"h\":\"样本示例\",\"t\":[\"# 更新日志 ## [4.6.0](https://github.com/ant-design/ant-design/compare/4.5.4...4.6.0) (2020-08-23) ### 新增 - 新增图片组件 Image。 - Table 新增 `sticky` 属性以支持固定表头和滚动条。[#25939](https://github.com/ant-design/ant-design/pull/25939) ### 修复 - 修复 Pagination 字体相关样式问题。[#26230](https://github.com/ant-design/ant-design/pull/26230) - 修复 Space `children` 有时会重新渲染的问题。[#26219](https://github.com/ant-design/ant-design/pull/26219) ### 优化 - 用 hooks 重构 Upload。 ## [4.5.4](https://github.com/ant-design/ant-design/compare/4.5.3...4.5.4)(2020-08-12) ### 新增 - 新增 `@badge-color` Less 变量。 ### 修复 - 修复 Form.Item 在 `hidden` 时引用 Less 样式时失效的问题。[#26152](https://github.com/ant-design/ant-design/pull/26152) \"]},\"78\":{\"h\":\"参考资料\",\"t\":[\"Keep a Changelog\",\"Conventional Changelog\",\"Angular Changelog\",\"Ant Design Changelog\"]},\"79\":{\"h\":\"文档规范\"},\"80\":{\"h\":\"前言\",\"t\":[\"在撰写文档的时候如果能遵循一点良好的规约，将能提升所有人的阅读体验。\",\"在此，文档的含义非常广泛，可以指代任何供人类阅读的文本材料。包括但不限于：Readme、Changelog、代码注释、上手指南、Issue 说明和PPT 分享等。\"]},\"81\":{\"h\":\"1. 空格\",\"t\":[\"1.1.【强制】中英文之间需要增加空格\",\"<!-- bad --> HTML定义网页的结构与内容，CSS定义其格式与样式，而JavaScript则为网页增加可交互性，创作功能丰富的Web应用。 <!-- good --> HTML 定义网页的结构与内容，CSS 定义其格式与样式，而 JavaScript 则为网页增加可交互性，创作功能丰富的 Web 应用。 \",\"1.2.【强制】中英文与数字之间需要增加空格\",\"<!-- bad --> 截至2012年，所有的现代浏览器都完整的支持 ECMAScript5.1，旧版本的浏览器至少支持 ECMAScript3 标准。 <!-- good --> 截至 2012 年，所有的现代浏览器都完整的支持 ECMAScript 5.1，旧版本的浏览器至少支持 ECMAScript 3 标准。 \",\"1.3.【强制】全角标点与其他字符之间不加空格\",\"<!-- bad --> 不像 UDP， HTTP 是一个不会静默丢失消息的协议。 <!-- good --> 不像 UDP，HTTP 是一个不会静默丢失消息的协议。 \",\"1.4.【强制】半角标点与其他字符之间需要增加空格\",\"<!-- bad --> Cookie 主要用于以下三个方面： 1.会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息） 2.个性化设置（如用户自定义设置、主题等） 3.浏览器行为跟踪（如跟踪分析用户行为等） <!-- good --> Cookie 主要用于以下三个方面： 1. 会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息） 2. 个性化设置（如用户自定义设置、主题等） 3. 浏览器行为跟踪（如跟踪分析用户行为等） <!-- bad --> 我+你=世界。 <!-- good --> 我 + 你 = 世界。 \",\"1.5.【推荐】链接文字前后不需要增加空格\",\"<!-- bad --> [了解更多](https://developer.mozilla.org/zh-CN/docs/Web) 开发技术相关知识。 <!-- good --> [了解更多](https://developer.mozilla.org/zh-CN/docs/Web)开发技术相关知识。 \"]},\"82\":{\"h\":\"2. 标点符号\",\"t\":[\"2.1.【推荐】正确使用引号\",\"中文句子内夹用英文句子时，该英文句子用中文双引号标示，保留英文句子内部的英文标点符号，句末使用中文标点。\",\"<!-- bad - 英文句子不建议使用英文引号标示 --> 他写的是 \\\"Hello, world!\\\"。 <!-- bad - 英文句子不建议使用中文单引号标示 --> 他写的是‘Hello, world!’。 <!-- bad - 英文句子内部的标点符号建议保留英文标点符号 --> 他写的是“Hello，world！”。 <!-- good --> 他写的是“Hello, world!”。 \",\"2.2.【推荐】正确使用省略号\",\"中文省略号的形式为“……”（中文输入法下 SHIFT + 6），6 个居中小圆点；英文省略号的形式为“...”，3 个齐线小圆点。\",\"夹用英文的中文句子里，英文内部的省略使用英文省略号；中文内部的省略使用中文省略号。\",\"<!-- bad --> 省略号是 3 个小圆点... 省略号是 6 个齐线小圆点...... 省略号是 6 个句号。。。。。。 <!-- good --> 省略号是 6 个居中小圆点，占两个全角空格…… \",\"2.3.【推荐】正确使用破折号\",\"中文破折号的形式为“——”，长度相当于两个汉字的长度。\",\"<!-- bad - 破折号不推荐使用两个中横线 --> 第三方框架和库--用来快速构建网站和应用。 <!-- good --> 第三方框架和库——用来快速构建网站和应用。 \"]},\"83\":{\"h\":\"3. 全角和半角\",\"t\":[\"3.1.【强制】中文标点符号使用全角\",\"<!-- bad - 中文句子冒号未使用全角 --> 前端框架: React、Vue、Angular。 <!-- bad - 中文句子内夹用并列的英文单词时使未使用顿号分隔 --> 前端框架：React, Vue, Angular。 <!-- good --> 前端框架：React、Vue、Angular。 <!-- bad - 中文句子括号未使用全角 --> 至少熟悉一门非前端的语言(如 Java、PHP、C、C++、Python、Ruby)，并有实践经验！ <!-- good --> 至少熟悉一门非前端的语言（如 Java、PHP、C、C++、Python、Ruby），并有实践经验！ \",\"3.2.【强制】英文和数字使用半角\",\"<!-- bad - 英文和数字不应该使用全角 --> 该版本正式名称为 ＥＣＭＡＳｃｒｉｐｔ ２０１５，但通常被称为 ＥＣＭＡＳｃｒｉｐｔ ６ 或者 ＥＳ６。 <!-- good --> 该版本正式名称为 ECMAScript 2015，但通常被称为 ECMAScript 6 或者 ES6。 \",\"3.3.【强制】完整的英文整句和特殊名词使用半角标点\",\"<!-- bad --> 乔布斯那句话是怎么说的？「Stay hungry，stay foolish。」 推荐你阅读《Hackers＆Painters：Big Ideas from the Computer Age》，非常的有趣。 <!-- good --> 乔布斯那句话是怎么说的？「Stay hungry, stay foolish.」 推荐你阅读《Hackers & Painters: Big Ideas from the Computer Age》，非常的有趣。 \"]},\"84\":{\"h\":\"4. 名词\",\"t\":[\"4.1.【强制】正确地拼写英文专有词汇\",\"<!-- bad --> 我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。 <!-- good --> 我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。 \"]},\"85\":{\"h\":\"附录\",\"t\":[\"前端常用专有名词：\",\"HTML, CSS, JavaScript/JS, AJAX, JSON, DOM, BOM, Less, HTTP, HTTPS, WebSocket, ECMAScript, ECMAScript 2015, ECMAScript 6, ES6, ES2015 jQuery, jQuery UI, jQuery Mobile, YUI, Zepto, Dojo React, React Native, Bootstrap, RequireJS, Sea.js, AngularJS, Backbone.js Gulp, Grunt, webpack, Yeoman, npm, spm, Babel Mocha, Jasmine, Should.js PHP, Java, Node.js MySQL, MongoDB, Redis Apache, Nginx GitHub, GitLab, GitCafe Chrome, Firefox, Safari, Internet Explore/IE, IE 7, Opera, UC Android, iOS, Windows, OS X, Ubuntu, Linux, Debian PC, Mobile, H5 MacBook, MacBook Pro, MacBook Air, iMac, Mac Pro, Mac mini iPad Air, iPad Air 2, iPad mini, iPhone, iPhone 6s, iPhone 6s Plus, Apple Watch FPS, UI, URL, URI, URLs, URIs \"]},\"86\":{\"h\":\"参考资料\",\"t\":[\"《中文文案排版指北》\",\"《标点符号用法》\",\"夹用英文的中文文本的标点符号用法（草案）\",\"《中文排版需求》\"]},\"87\":{\"h\":\"Git 规范\"},\"88\":{\"h\":\"1. Git 提交日志格式规约\"},\"89\":{\"h\":\"1.1. 前言\",\"t\":[\"为什么要对 Git 提交日志（message）的格式进行规约约束？\",\"更方便、快捷地浏览和了解项目的历史信息。\",\"有利于保证提交内容的独立性，避免把所有改动都放在一个提交里面。\",\"便于通过脚本自动化生成 CHANGELOG。\"]},\"90\":{\"h\":\"1.2. 基本的 格式\",\"t\":[\"<type>[optional scope]: <subject> [optional body] [optional footer(s)] \",\"其中 message header（即首行）必选，scope、body 和 footer 可选。\"]},\"91\":{\"h\":\"1.2.1. 字数限制\",\"t\":[\"header（首行）：只有一行，不超过 50 个字符\",\"body：每行不超过 72 个字符\",\"footer：每行不超过 72 个字符\",\"为什么要有字数限制？\",\"header： 像 Linux、Git 这样的开源项目，是以邮件列表作为代码评审的平台，header 要作为邮件的标题，而邮件标题本身就有长度的限制，并且标题太长也不利于浏览和信息获取。\",\"body 和 footer：源于大部分编程语言的编码规范，最初源于打字机宽度等物理设备的限制，后来慢慢成为默认遵守的规范。\"]},\"92\":{\"h\":\"1.2.2. 语言选择\",\"t\":[\"在开源项目中：推荐使用英文，因为项目的开发者和参与者可能来自世界各地，使用英文可以更广泛的传递信息。\",\"在内部项目（并且短时间内也不涉及开源）中：应该选择内部人员普遍能够熟练表达的语言。\",\"例如在国内的团队中，可以使用中文。\",\"关于使用中文可能会出现乱码的问题：处理字符集和字符编码的问题应该是每个程序员的必修课。\",\"关于使用英文天然正确性的问题：因地制宜，适合的才是最好的。\"]},\"93\":{\"h\":\"1.3. message header\"},\"94\":{\"h\":\"1.3.1. type\",\"t\":[\"type 用来描述本次提交的改动类型，可选值及对应含义如下：\",\"feat: 新增功能\",\"fix: 修复 bug\",\"docs: 文档相关的改动\",\"style: 对代码的格式化改动，代码逻辑并未产生任何变化(例如代码缩进，分号的移除和添加)\",\"test: 新增或修改测试用例\",\"refactor: 重构代码或其他优化举措\",\"chore: 项目工程方面的改动，代码逻辑并未产生任何变化\",\"revert: 恢复之前的提交\",\"注意：\",\"commit message 的 type 和 changelog 的 type 存在紧密联系，然而它们两者之间并非一一对应，比如在 changelog 中一般不会指出文档 docs 或测试用例 test 等方面发生的变化\",\"css 样式文件的修改一般属于 feat 或者 fix，并不是 style\"]},\"95\":{\"h\":\"1.3.2. scope\",\"t\":[\"scope 用来描述本次提交所涉及到的改动范围（例如模块、功能或其他任何限定的范围）。\",\"scope 的具体取值视项目而定。以淘宝详情页为例，取值可以是：header, footer, favorite, sku, etc...\",\"如果是 monorepo 的项目，scope 取值可以是 subpackage 的名称。例如 babel 项目中对某个 package 的修改：\",\"chore(babel-helper-plugin-utils): add npmignore \"]},\"96\":{\"h\":\"1.3.3. subject\",\"t\":[\"subject 用来概括和描述本次提交的改动内容，需注意以下几点：\",\"时态方面使用一般现在时，不要使用过去时。虽然查看 message 时，message 内容本身都发生在过去，然而对于主题来说，使用现在时的时态更简洁明确，并且更易达成一致性：\",\"// good docs: delete redundant docs // bad docs: deleted redundant docs \",\"句式使用祈使句。即一般情况不要增加主语。因为在绝大情况下，主语都是作者『我』：\",\"// good docs: delete redundant docs // bad docs: i delete redundant docs \",\"句首无需大写，句尾无需结束标点。因为主题（或标题）本身不用形成完整的句子：\",\" // good docs: delete redundant docs // bad docs: Delete redundant docs. ``` ### 1.4. message body 日志的内容主体 body 用来描述详细的提交内容，可写可不写，需注意以下几点： 1. 时态方面使用一般现在时，不要用过去时态。 2. 句式视情况而定，一般使用祈使句式。 3. 标点方面遵循一般的文档格式规约。 ### 1.5. message footer footer 通常用于代码评审过程记录、作者签名等。例如： ```markdown Reported-by: User1 <user1@example.com> Helped-by: User2 <user2@example.com> Reviewed-by: User3 <user3@example.com> Signed-off-by: Author <author@example.com> \",\"为什么要有签名区？\",\"因为一个提交的元信息中只有作者（author）、提交者（committer）两个字段，而一段代码的诞生，参与的人往往不止于此，还可能有问题报告者（Reported-by）、代码评审者（Reviewed-by）、上游 Committer 的签名（Signed-off-by）。为此一些开源项目（如 Git、Linux）的一个约定俗成的习惯，是在提交的最后加上签名，每个贡献者一行，从上到下可以看到这段代码诞生的过程。\",\"还可以添加其他元信息，例如：\"]},\"97\":{\"h\":\"引用\",\"t\":[\"可以在 commit 信息里使用关键字 + Issue ID（Gitlab / Github 或其他平台的），来表明该提交解决了某个 Issue。推荐使用的关键字有：\",\"close closes closed fix fixes fixed resolve resolves resolved \",\"关键字的选用可以根据当前语义、关联的 Issue 是否在当前仓库下，甚至是 commit 消息的长度限制来决定。\",\"close: 关闭当前仓库的 Issue\",\"fix: 关闭当前或其他仓库的 Issue, 一般指 Bug 修复\",\"resolve: 关闭当前或其他仓库的 Issue\",\"关闭多个 Issues 使用如下格式:\",\"Close #1, #2, #3 Close #1, close #2, close #3 Fix #1, #2, #3 Fix #1, close #2, close #3 Resolve #1, #2, #3 Resolve #1, close #2, close #3 \"]},\"98\":{\"h\":\"破坏性变动（ ）\",\"t\":[\"如果本次提交的改动是破坏性的，需要在这里声明：\",\"BREAKING CHANGE: 为了组件 API 规范的统一，本次升级将 size 属性的 value 值从 `s|m|l` 替换为 `small|medium|large`。 请按照如下方式升级： <Button size=\\\"s\\\">提交</Button> --> <Button size=\\\"small\\\">提交</Button> 继续使用 size=\\\"m\\\" 可能会导致样式错误。 \"]},\"99\":{\"h\":\"2. Git 分支命名规约\"},\"100\":{\"h\":\"2.1. 分支模型选择的说明\",\"t\":[\"目前互联网和社区中流传最广泛的一个分支模型 Git Flow 出自 a-successful-git-branching-model 这篇十年前的文章，文章作者 Vincent Driessen 在 2020 年三月份的时候已经公开表示，该分支模型已经不适用于现如今持续交付的软件工程方式，推荐在持续交付的软件工程中使用更简单的 Github Flow 模型。\"]},\"101\":{\"h\":\"2.2. 分支命名\",\"t\":[\"新建分支的命名格式为：{type}-{issue id}-the-thing-you-do\",\"type：和上文 1.3.1 章节中的 type 保持一致\",\"issue id：与分支内容相关的 issue id，如果无关，则可以忽略\",\"比如以下格式都满足规范：\",\"feat-ssr-prefetch：新增 ssr prefetch 功能\",\"fix-1379-component-insert-order：修复 issue 1379 中提到的组件插入顺序 bug\",\"revert-14218-memory-leak-on-unmount：回退版本解决 issue 14218 提到的组件卸载时内存泄露的问题\",\"注：该命名规约只针对新建的临时分支，不包括如 master、develop 等常驻分支\"]},\"102\":{\"h\":\"2.3. 多版本分支命名\",\"t\":[\"在需要同时维护多个版本的项目中，只使用 master 作为主干分支显然是无法满足需求的，但是又不想使用 Git Flow 这种复杂、繁琐的分支结构，那么就可以每发布一个新的版本就单独拉一个新的分支，例如：\",\"1.0.0-stable\",\"2.0.0-stable\",\"其他开发过程中的分支命名参考上节 2.2 的分支命名规约。\"]},\"103\":{\"h\":\"3. Git tag 命名规约\",\"t\":[\"Git tag 就是通过语义化的名称来给仓库标注一个个具体的节点。与此同时还可以根据标签名称来大致了解当前项目的兼容性和迭代情况。\",\"命名格式为 v{semver}，semver 是遵循 semantic version 的版本号，例如 v1.2.3。\",\"相比于使用例如 git tag v1.2.3 这种「轻量标签」，更推荐使用如下命令生成「附注标签」：\",\"git tag -a v1.2.3 -m \\\"发布经销商管理模块\\\"\"]},\"104\":{\"h\":\"参考资料\",\"t\":[\"AngularJS 代码贡献指南\",\"AngularJS Git Commit Message Conventions\",\"Karma 的 Git 日志规约\",\"StackOverflow - 在 Git 日志中我该用过去时态还是现在时态？\",\"一个成功的 Git 分支模型\",\"Git 基础打标签\",\"每行字符数\",\"Conventional Commits\"]},\"105\":{\"h\":\"encode-fe-commitlint-config\",\"t\":[\"提示\",\"印客学院 Git 规范\",\"支持配套的 commitlint 配置，用于对 git commit message 进行校验。\"]},\"106\":{\"h\":\"安装\",\"t\":[\"使用时，需要安装 @commitlint/cli：\",\"npm install encode-fe-commitlint-config @commitlint/cli --save-dev \"]},\"107\":{\"h\":\"使用\",\"t\":[\"在 commitlint.config.js 中集成本包:\",\"module.exports = { extends: ['encode-fe-commitlint-config'], }; \"]},\"108\":{\"h\":\"设置 git hook\",\"t\":[\"可通过 husky 设置在 git commit 时触发 commitlint。\",\"首先安装 husky：\",\"npm install husky --save-dev \",\"然后执行添加commit-msg:\",\"npx husky add .husky/commit-msg 'npx commitlint --edit $1' \",\"更多信息可参考 commitlint 文档。\"]},\"109\":{\"h\":\"encode-fe-eslint-plugin\",\"t\":[\"除了本包，你需要同时安装 ESlint\",\"$ npm install encode-fe-eslint-plugin eslint --save-dev \"]},\"110\":{\"h\":\"使用\"},\"111\":{\"h\":\"引入插件\",\"t\":[\"// .eslintrc.js module.exports = { plugin: ['encode-fe-eslint-config'], rules: { 'encode-fe-eslint-plugin/no-secret-info': 'error', }, }; \"]},\"112\":{\"h\":\"使用 presets\",\"t\":[\"// .eslintrc.js module.exports = { extends: 'plugin:encode-fe-eslint-plugin/recommended', }; \"]},\"113\":{\"h\":\"支持的规则\"},\"114\":{\"h\":\"\",\"t\":[\"不要在 package.json 中使用太过宽泛的版本指定方式，包括 *、x 和 > x 。\"]},\"115\":{\"h\":\"规则内容\",\"t\":[\"参照 https://docs.npmjs.com/about-semantic-versioning。\",\"使用 *、 x 和 > x 指定版本会被警告。\"]},\"116\":{\"h\":\"\",\"t\":[\"推荐将 HTTP 链接换为 HTTPS 链接。\"]},\"117\":{\"h\":\"规则内容\",\"t\":[\"错误代码示例:\",\"var test = 'http://chenghuai.com'; var jsx = <img src=\\\"http://chenghuai.com\\\">; \"]},\"118\":{\"h\":\"何时不适用\",\"t\":[\"如果你的网站只支持 HTTP 时。\"]},\"119\":{\"h\":\"\",\"t\":[\"不推荐在项目中同时存在 JS 和 TS 文件。\"]},\"120\":{\"h\":\"规则内容\",\"t\":[\"错误示例，TS 项目中包含 JS 文件:\",\". ├── index.ts ├── home.js └── tsconfig.json \",\"正确示例:\",\". ├── index.ts ├── home.ts └── tsconfig.json \"]},\"121\":{\"h\":\"规则选项\",\"t\":[\"默认当存在 commitlint.config.js, eslintrc.js, prettierrc.js, stylelintrc.js 文件时不会报错，支持自定义设置文件白名单。\"]},\"122\":{\"h\":\"\",\"t\":[\"不在代码中直接通过纯文本值设置 passwordtoken 和 secret 信息。\"]},\"123\":{\"h\":\"规则内容\",\"t\":[\"在包含 passwordtoken and secret 名称的 key 中禁止使用纯文本值。\",\"错误代码示例:\",\"var accessKeySecret = 'xxxx'; var client = { accessKeyToken: 'xxxx', }; \",\"正确代码示例:\",\"var accessKeySecret = process.env.ACCESS_KEY_SECRET; var client = { accessKeyToken: process.env.ACCESS_KEY_SECRET, }; \"]},\"124\":{\"h\":\"encode-fe-eslint-config\",\"t\":[\"提示\",\"印客学院 JavaScript TypeScript Node 规范\",\"提供了多套配置文件以支持 JavaScript、TypeScript、React、Vue、Node.js 等多种项目类型。\"]},\"125\":{\"h\":\"JavaScript 项目 - encode-fe-eslint-config\",\"t\":[\"针对未使用 React 或 Vue 的原生 JavaScript 项目，使用 ESLint 原生规则和 eslint-plugin-import 规则，使用 @babel/eslint-parser 作为 parser，是本包的默认配置。\"]},\"126\":{\"h\":\"依赖\",\"t\":[\"@babel/core@^7.16.0\",\"@babel/eslint-parser@^7.16.3\",\"eslint-plugin-import@^2.25.3\"]},\"127\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @babel/core @babel/eslint-parser eslint-plugin-import \"]},\"128\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config\\\"] } \"]},\"129\":{\"h\":\"JavaScript + React 项目 - encode-fe-eslint-config/react\",\"t\":[\"针对 JS React 项目，继承了默认配置，并启用了 eslint-plugin-react 和 eslint-plugin-react-hooks 的规则。\"]},\"130\":{\"h\":\"依赖\",\"t\":[\"@babel/core@^7.16.0\",\"@babel/eslint-parser@^7.16.3\",\"eslint-plugin-import@^2.25.3\",\"eslint-plugin-react@^7.17.0\",\"eslint-plugin-react-hooks@^4.2.0\",\"eslint-plugin-jsx-a11y@^6.3.1（可选）\"]},\"131\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @babel/core @babel/eslint-parser eslint-plugin-import eslint-plugin-react eslint-plugin-react-hooks \"]},\"132\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/react\\\"] } \",\"如果需要无障碍能力：\",\"npm i -D eslint-plugin-jsx-a11y \",\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/react\\\", \\\"encode-fe-eslint-config/jsx-a11y\\\"] } \"]},\"133\":{\"h\":\"JavaScript + Vue 项目 - encode-fe-eslint-config/vue\",\"t\":[\"针对 JS Vue 的项目，继承了默认配置，并启用了 eslint-plugin-vue 插件的规则，使用 vue-eslint-parser 作为 parser。\"]},\"134\":{\"h\":\"依赖\",\"t\":[\"@babel/core@^7.16.0\",\"@babel/eslint-parser@^7.16.3\",\"eslint-plugin-import@^2.25.3\",\"vue-eslint-parser@^7.0.0\",\"eslint-plugin-vue@^7.3.0\"]},\"135\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @babel/core @babel/eslint-parser eslint-plugin-import vue-eslint-parser eslint-plugin-vue \"]},\"136\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/vue\\\"] } \"]},\"137\":{\"h\":\"JavaScript (Node.js) 项目 - encode-fe-eslint-config/node\",\"t\":[\"针对 Node.js 项目，继承了默认配置和 eslint-config-egg 的规则，规则由 ESLint 原生规则和 eslint-plugin-node 提供。\"]},\"138\":{\"h\":\"依赖\",\"t\":[\"@babel/core@^7.16.0\",\"@babel/eslint-parser@^7.16.3\",\"eslint-plugin-import@^2.25.3\",\"eslint-config-egg@^10.0.0\"]},\"139\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @babel/core @babel/eslint-parser eslint-plugin-import eslint-config-egg \"]},\"140\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/node\\\"] } \"]},\"141\":{\"h\":\"TypeScript 项目 - encode-fe-eslint-config/typescript\",\"t\":[\"针对未使用 React 或 Vue 的 TypeScript 项目，继承了默认配置，并启用了 @typescript-eslint/eslint-plugin 插件的规则，使用 @typescript-eslint/parser 作为 parser。\"]},\"142\":{\"h\":\"依赖\",\"t\":[\"@typescript-eslint/parser@^5.0.0\",\"@typescript-eslint/eslint-plugin@^5.0.0\",\"eslint-plugin-import@^2.25.3\",\"eslint-import-resolver-typescript@2\"]},\"143\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-import eslint-import-resolver-typescript \"]},\"144\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/typescript\\\"] } \",\"需保证项目已安装 typescript 依赖，另外如果项目的 TS 配置文件不是 ./tsconfig.json，则需要设置 .eslintrc 中的 parserOptions.project 字段 ，例如：\",\"{ \\\"extends\\\": \\\"encode-fe-eslint-config/typescript\\\", \\\"parserOptions\\\": { \\\"project\\\": \\\"./tsconfig.eslint.json\\\" } } \"]},\"145\":{\"h\":\"TypeScript + React 项目 - encode-fe-eslint-config/typescript/react\",\"t\":[\"针对 TS React 项目，继承了 JS React 的配置，并启用了 @typescript-eslint/eslint-plugin 插件的规则，使用 @typescript-eslint/parser 作为 parser。\"]},\"146\":{\"h\":\"依赖\",\"t\":[\"@typescript-eslint/parser@^5.0.0\",\"@typescript-eslint/eslint-plugin@^5.0.0\",\"eslint-plugin-import@^2.25.3\",\"eslint-import-resolver-typescript@2\",\"eslint-plugin-react@^7.17.0\",\"eslint-plugin-react-hooks@^4.2.0\",\"eslint-plugin-jsx-a11y@^6.3.1（可选）\"]},\"147\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-import eslint-import-resolver-typescript eslint-plugin-react eslint-plugin-react-hooks \"]},\"148\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/typescript/react\\\"] } \",\"如果需要无障碍能力：\",\"npm i -D eslint-plugin-jsx-a11y \",\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/typescript/react\\\", \\\"encode-fe-eslint-config/jsx-a11y\\\"] } \"]},\"149\":{\"h\":\"TypeScript + Vue 项目 - encode-fe-eslint-config/typescript/vue\",\"t\":[\"针对 TS Vue 项目，继承了 JS Vue 的配置，并启用了 @typescript-eslint/eslint-plugin 插件的规则，使用 @typescript-eslint/parser 作为 parser。\"]},\"150\":{\"h\":\"依赖\",\"t\":[\"@typescript-eslint/parser@^5.0.0\",\"@typescript-eslint/eslint-plugin@^5.0.0\",\"eslint-plugin-import@^2.25.3\",\"eslint-import-resolver-typescript@2\",\"vue-eslint-parser@^7.0.0\",\"eslint-plugin-vue@^7.3.0\"]},\"151\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-import eslint-import-resolver-typescript vue-eslint-parser eslint-plugin-vue \"]},\"152\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/typescript/vue\\\"] } \"]},\"153\":{\"h\":\"TypeScript (Node.js) 项目 - encode-fe-eslint-config/typescript/node\",\"t\":[\"针对未使用 React 和 Vue 的 TypeScript(Node) 项目，继承了 JS Node.js 配置，并启用了 @typescript-eslint/eslint-plugin 插件的规则，使用 @typescript-eslint/parser 作为 parser。\"]},\"154\":{\"h\":\"依赖\",\"t\":[\"@typescript-eslint/parser@^5.0.0\",\"@typescript-eslint/eslint-plugin@^5.0.0\",\"eslint-plugin-import@^2.25.3\",\"eslint-import-resolver-typescript@2\",\"eslint-config-egg@^10.0.0\"]},\"155\":{\"h\":\"安装\",\"t\":[\"npm i -D encode-fe-eslint-config @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-import eslint-import-resolver-typescript eslint-config-egg \"]},\"156\":{\"h\":\"配置\",\"t\":[\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/typescript/node\\\"] } \"]},\"157\":{\"h\":\"配合 Prettier 使用\",\"t\":[\"如果你的项目使用 Prettier 进行代码格式化，本包的一些规则可能会跟 Prettier 格式化结果有冲突，例如这条规则。为了避免冲突，你需要手动安装 eslint-config-prettier 和 eslint-plugin-prettier：\"]},\"158\":{\"h\":\"安装\",\"t\":[\"npm install --save-dev eslint-config-prettier eslint-plugin-prettier \"]},\"159\":{\"h\":\"配置\",\"t\":[\"并修改 .eslintrc 的 extends 配置，增加 prettier，如下（以 TS React 项目为例）：\",\"{ \\\"extends\\\": [\\\"encode-fe-eslint-config/typescript/react\\\", \\\"prettier\\\"] } \",\"了解更多请阅读 Prettier - Integrating with Linters。\"]},\"160\":{\"h\":\"将风格问题降级\",\"t\":[\"为了保证一致的编码风格，本包中大量风格相关的规则被设为了 error 级别，以引起开发者的足够重视。如果你觉得风格问题不足以是 error 级别（有些用户根据 ESLint error 进行流程卡点），本包还提供了一套名为 'essential' 的配置文件，这套配置将所有风格问题降级为 warn 级别，仅将必要问题报告为 error，引用方式为在相应配置的 encode-fe-eslint-config 后面加上 /essential，如对 JS React 项目为 encode-fe-eslint-config/essential/react、对 TS Vue 项目为 encode-fe-eslint-config/essential/typescript/vue\"]},\"161\":{\"h\":\"了解更多\",\"t\":[\"如果你对 ESLint 还不熟悉，可以阅读官网的 Getting Started 快速入门。\",\"了解如何为 IDE 配置 ESLint，可以参考官网的 Integrations。\",\"了解如何在继承本包的基础上对项目 ESLint 进行个性化配置，可参考官网的 Configuring ESLint。下面简介下 ESLint 配置中的几个常用字段： \",\"extends: 继承一组规则集。\\\"extends\\\": \\\"encode-fe-eslint-config\\\", 表示继承本包定义的规则配置。\",\"rules: 配置规则，这里定义的规则会覆盖 extends 的规则。如果觉得本包开启的某条规则过于严格，你可以暂时在这里将其关闭。\",\"parser: 设置 ESLint 的解析器。ESLint 使用 espree 作为默认的解析器，可以通过这个参数指定其他的解析器。比如指定为 @babel/eslint-parser，以解析 Babel 支持但 ESLint 默认解析器不支持的语法（本包不同配置文件使用的解析器可在简介表格中的「依赖 parser」一列查看）。\",\"globals: 指定代码中可能用到的全局变量，以免全局变量被 no-undef 规则报错。\",\"env: 指定代码的运行环境，每个环境预定义了一组对应的全局变量，本包已开启的环境有 browser、node、jquery、es6 及几个测试框架的环境。\",\"了解常用的 ESLint 命令，如 --fix、--ext，可参考官网的 Command Line Interface。\"]},\"162\":{\"h\":\"encode-fe-markdownlint-config\",\"t\":[\"提示\",\"印客学院 文档 规范\",\"支持配套的 markdownlint 可共享配置。\"]},\"163\":{\"h\":\"安装\",\"t\":[\"需要先行安装 markdownlint：\",\"npm install encode-fe-markdownlint-config markdownlint --save-dev \"]},\"164\":{\"h\":\"使用\",\"t\":[\"在 .markdownlint.json 中继承本包:\",\"{ \\\"extends\\\": \\\"encode-fe-markdownlint-config\\\" } \"]},\"165\":{\"h\":\"encode-fe-stylelint-config\",\"t\":[\"提示\",\"印客学院 CSS 规范\",\"支持配套的 stylelint 可共享配置。\"]},\"166\":{\"h\":\"安装\",\"t\":[\"需要先行安装 stylelint 和 stylelint-scss：\",\"npm install encode-fe-stylelint-config stylelint stylelint-scss --save-dev \"]},\"167\":{\"h\":\"使用\",\"t\":[\"在 .stylelintrc 中继承本包:\",\"{ \\\"extends\\\": \\\"encode-fe-stylelint-config\\\" } \"]},\"168\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"表示继承本包定义的规则配置\",{\"1\":{\"161\":1}}],[\"表达式可能带来潜在的问题\",{\"1\":{\"52\":1}}],[\"下面简介下\",{\"1\":{\"161\":1}}],[\"下文件系统大小写不敏感\",{\"1\":{\"64\":1}}],[\"快速入门\",{\"1\":{\"161\":1}}],[\"快捷地浏览和了解项目的历史信息\",{\"1\":{\"89\":1}}],[\"增加\",{\"1\":{\"159\":1}}],[\"增加抽象性和降低复杂度\",{\"1\":{\"23\":1}}],[\"另外如果项目的\",{\"1\":{\"144\":1}}],[\"针对\",{\"1\":{\"129\":1,\"133\":1,\"137\":1,\"145\":1,\"149\":1}}],[\"针对未使用\",{\"1\":{\"125\":1,\"141\":1,\"153\":1}}],[\"^5\",{\"1\":{\"142\":2,\"146\":2,\"150\":2,\"154\":2}}],[\"^10\",{\"1\":{\"138\":1,\"154\":1}}],[\"^6\",{\"1\":{\"130\":1,\"146\":1}}],[\"^4\",{\"1\":{\"130\":1,\"146\":1}}],[\"^2\",{\"1\":{\"126\":1,\"130\":1,\"134\":1,\"138\":1,\"142\":1,\"146\":1,\"150\":1,\"154\":1}}],[\"^7\",{\"1\":{\"126\":2,\"130\":3,\"134\":4,\"138\":2,\"146\":1,\"150\":2}}],[\"信息\",{\"1\":{\"122\":1}}],[\"信息里使用关键字\",{\"1\":{\"97\":1}}],[\"└──\",{\"1\":{\"120\":2}}],[\"├──\",{\"1\":{\"120\":4}}],[\"何时不适用\",{\"0\":{\"118\":1}}],[\"错误示例\",{\"1\":{\"120\":1}}],[\"错误代码示例\",{\"1\":{\"117\":1,\"123\":1}}],[\"错误提示有可能会暴露出敏感的系统信息\",{\"1\":{\"68\":1}}],[\"链接\",{\"1\":{\"116\":1}}],[\"链接换为\",{\"1\":{\"116\":1}}],[\"链接文字前后不需要增加空格\",{\"1\":{\"81\":1}}],[\"然后执行添加commit\",{\"1\":{\"108\":1}}],[\"然而对于主题来说\",{\"1\":{\"96\":1}}],[\"然而它们两者之间并非一一对应\",{\"1\":{\"94\":1}}],[\"然而使用现在时的时态更简洁明确\",{\"1\":{\"76\":1}}],[\"然而提供一个\",{\"1\":{\"74\":1}}],[\"日志中我该用过去时态还是现在时态\",{\"1\":{\"104\":1}}],[\"日志规约\",{\"1\":{\"104\":1}}],[\"日志的内容主体\",{\"1\":{\"96\":1}}],[\"发布经销商管理模块\",{\"1\":{\"103\":1}}],[\"发布上线前\",{\"1\":{\"62\":1}}],[\"附注标签\",{\"1\":{\"103\":1}}],[\"附录\",{\"0\":{\"85\":1}}],[\"轻量标签\",{\"1\":{\"103\":1}}],[\"繁琐的分支结构\",{\"1\":{\"102\":1}}],[\"回退版本解决\",{\"1\":{\"101\":1}}],[\"功能\",{\"1\":{\"101\":1}}],[\"功能或其他任何限定的范围\",{\"1\":{\"95\":1}}],[\"章节中的\",{\"1\":{\"101\":1}}],[\"章节的规则一致\",{\"1\":{\"23\":1}}],[\"出自\",{\"1\":{\"100\":1}}],[\"替换为\",{\"1\":{\"98\":1}}],[\"替代\",{\"1\":{\"55\":1,\"56\":1}}],[\"消息的长度限制来决定\",{\"1\":{\"97\":1}}],[\"甚至是\",{\"1\":{\"97\":1}}],[\"两个字段\",{\"1\":{\"96\":1}}],[\"取值可以是\",{\"1\":{\"95\":2}}],[\"存在紧密联系\",{\"1\":{\"94\":1}}],[\"恢复之前的提交\",{\"1\":{\"94\":1}}],[\"适合的才是最好的\",{\"1\":{\"92\":1}}],[\"适时使用简写属性\",{\"1\":{\"21\":1}}],[\"关闭多个\",{\"1\":{\"97\":1}}],[\"关闭当前或其他仓库的\",{\"1\":{\"97\":2}}],[\"关闭当前仓库的\",{\"1\":{\"97\":1}}],[\"关联的\",{\"1\":{\"97\":1}}],[\"关于使用英文天然正确性的问题\",{\"1\":{\"92\":1}}],[\"关于使用中文可能会出现乱码的问题\",{\"1\":{\"92\":1}}],[\"关键字的选用可以根据当前语义\",{\"1\":{\"97\":1}}],[\"关键字用于声明常量\",{\"1\":{\"64\":1}}],[\"关键字声明\",{\"1\":{\"64\":1}}],[\"关键字在块级作用域下声明变量\",{\"1\":{\"52\":1}}],[\"关键词前调用\",{\"1\":{\"58\":1}}],[\"源于大部分编程语言的编码规范\",{\"1\":{\"91\":1}}],[\"要作为邮件的标题\",{\"1\":{\"91\":1}}],[\"要么应将\",{\"1\":{\"61\":1}}],[\"要么都保留\",{\"1\":{\"21\":1}}],[\"要么都省略\",{\"1\":{\"21\":1}}],[\"像\",{\"1\":{\"91\":1}}],[\"首先安装\",{\"1\":{\"108\":1}}],[\"首行\",{\"1\":{\"91\":1}}],[\"首选\",{\"1\":{\"72\":1}}],[\"必选\",{\"1\":{\"90\":1}}],[\"必须在调用\",{\"1\":{\"58\":1}}],[\"基础打标签\",{\"1\":{\"104\":1}}],[\"基本的\",{\"0\":{\"90\":1}}],[\"基于一份配置进行扫描\",{\"1\":{\"16\":1}}],[\"便于通过脚本自动化生成\",{\"1\":{\"89\":1}}],[\"草案\",{\"1\":{\"86\":1}}],[\"夹用英文的中文文本的标点符号用法\",{\"1\":{\"86\":1}}],[\"夹用英文的中文句子里\",{\"1\":{\"82\":1}}],[\"至少理解一种框架\",{\"1\":{\"84\":2}}],[\"至少熟悉一门非前端的语言\",{\"1\":{\"83\":2}}],[\"名称的\",{\"1\":{\"123\":1}}],[\"名称和括号\",{\"1\":{\"23\":1}}],[\"名词\",{\"0\":{\"84\":1}}],[\"乔布斯那句话是怎么说的\",{\"1\":{\"83\":2}}],[\"完整的英文整句和特殊名词使用半角标点\",{\"1\":{\"83\":1}}],[\"ｅｓ６\",{\"1\":{\"83\":1}}],[\"ｅｃｍａｓｃｒｉｐｔ\",{\"1\":{\"83\":2}}],[\"６\",{\"1\":{\"83\":1}}],[\"２０１５\",{\"1\":{\"83\":1}}],[\"该命名规约只针对新建的临时分支\",{\"1\":{\"101\":1}}],[\"该分支模型已经不适用于现如今持续交付的软件工程方式\",{\"1\":{\"100\":1}}],[\"该版本正式名称为\",{\"1\":{\"83\":2}}],[\"该英文句子用中文双引号标示\",{\"1\":{\"82\":1}}],[\"破折号不推荐使用两个中横线\",{\"1\":{\"82\":1}}],[\"破坏性变动\",{\"0\":{\"98\":1},\"1\":{\"76\":1}}],[\"占两个全角空格\",{\"1\":{\"82\":1}}],[\"英文和数字不应该使用全角\",{\"1\":{\"83\":1}}],[\"英文和数字使用半角\",{\"1\":{\"83\":1}}],[\"英文内部的省略使用英文省略号\",{\"1\":{\"82\":1}}],[\"英文省略号的形式为\",{\"1\":{\"82\":1}}],[\"英文句子内部的标点符号建议保留英文标点符号\",{\"1\":{\"82\":1}}],[\"英文句子不建议使用中文单引号标示\",{\"1\":{\"82\":1}}],[\"英文句子不建议使用英文引号标示\",{\"1\":{\"82\":1}}],[\"他写的是\",{\"1\":{\"82\":4}}],[\"句式视情况而定\",{\"1\":{\"96\":1}}],[\"句式使用祈使句\",{\"1\":{\"96\":1}}],[\"句式使用祈使句式\",{\"1\":{\"76\":1}}],[\"句尾无需结束标点\",{\"1\":{\"96\":1}}],[\"句首无需大写\",{\"1\":{\"96\":1}}],[\"句末使用中文标点\",{\"1\":{\"82\":1}}],[\"世界\",{\"1\":{\"81\":1}}],[\"游戏分数或其它需要记录的信息\",{\"1\":{\"81\":2}}],[\"购物车\",{\"1\":{\"81\":2}}],[\"主题等\",{\"1\":{\"81\":2}}],[\"主要用于以下三个方面\",{\"1\":{\"81\":2}}],[\"主语都是作者\",{\"1\":{\"76\":1,\"96\":1}}],[\"半角标点与其他字符之间需要增加空格\",{\"1\":{\"81\":1}}],[\"年三月份的时候已经公开表示\",{\"1\":{\"100\":1}}],[\"年\",{\"1\":{\"81\":1}}],[\"截至\",{\"1\":{\"81\":1}}],[\"截至2012年\",{\"1\":{\"81\":1}}],[\"旧版本的浏览器至少支持\",{\"1\":{\"81\":2}}],[\"创作功能丰富的\",{\"1\":{\"81\":1}}],[\"创作功能丰富的web应用\",{\"1\":{\"81\":1}}],[\"创建函数会像\",{\"1\":{\"57\":1}}],[\"创建数组\",{\"1\":{\"55\":1}}],[\"样式文件的修改一般属于\",{\"1\":{\"94\":1}}],[\"样式时失效的问题\",{\"1\":{\"77\":1}}],[\"样式声明\",{\"1\":{\"23\":1}}],[\"样本示例\",{\"0\":{\"77\":1}}],[\"删除\",{\"1\":{\"76\":1}}],[\"性能或结构上的优化\",{\"1\":{\"76\":1}}],[\"优化\",{\"1\":{\"76\":1,\"77\":1}}],[\"优先于私有的成员\",{\"1\":{\"72\":1}}],[\"优先于受保护的成员\",{\"1\":{\"72\":1}}],[\"优先于方法\",{\"1\":{\"72\":1}}],[\"优先于构造函数\",{\"1\":{\"72\":1}}],[\"优先于实例的方法\",{\"1\":{\"72\":1}}],[\"优先使用参数的联合类型而不是函数的类型重载\",{\"1\":{\"72\":1}}],[\"优先使用\",{\"1\":{\"56\":1,\"57\":1,\"72\":2}}],[\"变更\",{\"1\":{\"76\":1}}],[\"变量\",{\"1\":{\"77\":1}}],[\"变量的连续赋值让人难以阅读和理解\",{\"1\":{\"52\":1}}],[\"变量不要与外层作用域已存在的变量同名\",{\"1\":{\"52\":1}}],[\"变量可以在声明前使用\",{\"1\":{\"52\":1}}],[\"变量声明\",{\"0\":{\"52\":1}}],[\"内容本身都发生在过去\",{\"1\":{\"76\":1,\"96\":1}}],[\"内容需要注意以下几点\",{\"1\":{\"76\":1}}],[\"内容按版本号降序排列\",{\"1\":{\"76\":1}}],[\"内置模块\",{\"1\":{\"67\":1}}],[\"内置的全局变量\",{\"1\":{\"67\":1}}],[\"修复\",{\"1\":{\"76\":2,\"77\":5,\"94\":1,\"97\":1,\"101\":1}}],[\"修改日志\",{\"1\":{\"76\":1}}],[\"修饰符\",{\"1\":{\"72\":1}}],[\"修饰符只作用于\",{\"1\":{\"72\":1}}],[\"修饰符来代替\",{\"1\":{\"72\":1}}],[\"国际化场景使用英文\",{\"1\":{\"76\":1}}],[\"格式化结果有冲突\",{\"1\":{\"157\":1}}],[\"格式如下\",{\"1\":{\"76\":1}}],[\"格式\",{\"0\":{\"76\":1,\"90\":1},\"1\":{\"76\":1}}],[\"吗\",{\"1\":{\"74\":1}}],[\"我+你=世界\",{\"1\":{\"81\":1}}],[\"我\",{\"1\":{\"76\":1,\"81\":1,\"96\":1}}],[\"我必须为我的项目维护一个更新日志\",{\"1\":{\"74\":1}}],[\"我们需要一位熟悉\",{\"1\":{\"84\":2}}],[\"我们约定\",{\"1\":{\"72\":1}}],[\"我们允许在代码中使用指令注释\",{\"1\":{\"72\":1}}],[\"我们给代码标记\",{\"1\":{\"63\":1}}],[\"我们也建议文件内只包含一个\",{\"1\":{\"59\":1}}],[\"我们建议仅在这种情况下省略包裹参数的小括号\",{\"1\":{\"57\":1}}],[\"我们推荐函数的复杂度不要超过以下阈值\",{\"1\":{\"57\":1}}],[\"我们推荐使用这个\",{\"1\":{\"57\":1}}],[\"我们推荐单行代码最多不要超过\",{\"1\":{\"50\":1}}],[\"我们推荐保留\",{\"1\":{\"21\":1}}],[\"我们统一在文件末尾保留一行空行\",{\"1\":{\"49\":1}}],[\"我们采用如下的空格风格\",{\"1\":{\"48\":1}}],[\"我们应优先选取符合当下所需语义的标签\",{\"1\":{\"37\":1}}],[\"我们应该在真正需要设置所有值或大多数值时才使用简写属性\",{\"1\":{\"21\":1}}],[\"我们引入了多个业界流行的\",{\"1\":{\"3\":1,\"6\":1}}],[\"我们可以通过哪些工具提升项目的编码规范\",{\"1\":{\"2\":1}}],[\"箭头前后都保留一个空格\",{\"1\":{\"72\":1}}],[\"箭头函数参数的小括号\",{\"1\":{\"57\":1}}],[\"箭头函数编码风格\",{\"1\":{\"57\":1}}],[\"冒号后保留一个空格\",{\"1\":{\"72\":1}}],[\"冒号前无空格\",{\"1\":{\"72\":1}}],[\"三斜杠语法已经被废弃\",{\"1\":{\"72\":1}}],[\"导出一个良好的\",{\"1\":{\"74\":1}}],[\"导入文件\",{\"1\":{\"72\":1}}],[\"导致不能继续处理新的请求\",{\"1\":{\"67\":1}}],[\"导致错误\",{\"1\":{\"56\":1}}],[\"导致\",{\"1\":{\"44\":2}}],[\"加号\",{\"1\":{\"72\":1}}],[\"加载失败时获得较好的展示效果\",{\"1\":{\"37\":1}}],[\"加载之前运行的\",{\"1\":{\"30\":1}}],[\"赋值给其他变量\",{\"1\":{\"72\":1}}],[\"此规则中允许对\",{\"1\":{\"72\":1}}],[\"此规则仍然允许定义外部的模块或命名空间\",{\"1\":{\"72\":1}}],[\"此外\",{\"1\":{\"52\":1,\"57\":1,\"64\":1}}],[\"此外随着\",{\"1\":{\"44\":1}}],[\"未定义的值\",{\"1\":{\"72\":1}}],[\"未使用参数\",{\"1\":{\"52\":1}}],[\"未使用变量\",{\"1\":{\"52\":1}}],[\"未使用\",{\"1\":{\"15\":2,\"57\":1}}],[\"隐式未定义类型代表函数返回\",{\"1\":{\"72\":1}}],[\"隐藏或伪造\",{\"1\":{\"68\":1}}],[\"隐藏或伪造技术栈和框架标识\",{\"1\":{\"68\":1}}],[\"混淆\",{\"1\":{\"72\":1}}],[\"混合使用多种操作符时\",{\"1\":{\"60\":1}}],[\"很容易和不等运算符\",{\"1\":{\"72\":1}}],[\"很多团队的基础建设都只是简单地知晓其中一部分规范工具的使用\",{\"1\":{\"1\":1}}],[\"公开的成员\",{\"1\":{\"72\":1}}],[\"公开的成员可省略\",{\"1\":{\"72\":1}}],[\"私有\",{\"1\":{\"72\":1}}],[\"断言\",{\"1\":{\"72\":1}}],[\"断言在本规则中不受约束\",{\"1\":{\"72\":1}}],[\"断言成\",{\"1\":{\"72\":1}}],[\"产生混淆\",{\"1\":{\"72\":1}}],[\"已删除的功能\",{\"1\":{\"76\":1}}],[\"已经对\",{\"1\":{\"74\":1}}],[\"已经成为\",{\"1\":{\"72\":1}}],[\"已经不再推荐使用\",{\"1\":{\"72\":1}}],[\"已经被废弃\",{\"1\":{\"72\":1}}],[\"已作为函数参数声明\",{\"1\":{\"52\":2}}],[\"交叉\",{\"1\":{\"72\":2}}],[\"联合\",{\"1\":{\"72\":1}}],[\"联系\",{\"0\":{\"4\":1}}],[\"复杂类型使用\",{\"1\":{\"72\":1}}],[\"|\",{\"1\":{\"72\":20}}],[\"||\",{\"1\":{\"19\":1,\"57\":2,\"60\":8,\"63\":4}}],[\"请按照如下方式升级\",{\"1\":{\"98\":1}}],[\"请使用\",{\"1\":{\"72\":2}}],[\"请尽量把这类任务代理给\",{\"1\":{\"69\":1}}],[\"请在\",{\"1\":{\"61\":2}}],[\"密集型任务\",{\"1\":{\"69\":1}}],[\"密集型任务委托给反向代理\",{\"1\":{\"69\":1}}],[\"密码\",{\"1\":{\"34\":1}}],[\"把\",{\"1\":{\"69\":1}}],[\"校验入参\",{\"1\":{\"68\":1}}],[\"服务端\",{\"1\":{\"68\":1}}],[\"入侵服务器\",{\"1\":{\"68\":1}}],[\"任意文件上传漏洞\",{\"1\":{\"68\":1}}],[\"检测依赖\",{\"1\":{\"68\":1}}],[\"输入为表名\",{\"1\":{\"68\":1}}],[\"含有用户输入内容的\",{\"1\":{\"68\":1}}],[\"越权访问\",{\"1\":{\"68\":1}}],[\"防止用户上传恶意文件\",{\"1\":{\"68\":1}}],[\"防止\",{\"1\":{\"68\":1}}],[\"防止未授权访问\",{\"1\":{\"68\":1}}],[\"防止通过\",{\"1\":{\"68\":1}}],[\"防止标识露出被恶意利用\",{\"1\":{\"68\":1}}],[\"跨域接口必须严格校验访问来源\",{\"1\":{\"68\":1}}],[\"响应头\",{\"1\":{\"68\":1}}],[\"容易被利用去做进一步的攻击\",{\"1\":{\"68\":1}}],[\"容易引起误解\",{\"1\":{\"57\":1}}],[\"线上环境尽量不要使用\",{\"1\":{\"67\":1}}],[\"抛出异常时\",{\"1\":{\"67\":1}}],[\"解构内部按照字典排序\",{\"1\":{\"67\":1}}],[\"解析延迟问题\",{\"1\":{\"30\":1}}],[\"每行字符数\",{\"1\":{\"104\":1}}],[\"每行不超过\",{\"1\":{\"91\":2}}],[\"每类文件代码块中的引用顺序按照字典排序\",{\"1\":{\"67\":1}}],[\"每个环境预定义了一组对应的全局变量\",{\"1\":{\"161\":1}}],[\"每个贡献者一行\",{\"1\":{\"96\":1}}],[\"每个组合选择器内的条目尽量不超过\",{\"1\":{\"20\":1}}],[\"每个选择器应该单独成行\",{\"1\":{\"19\":1}}],[\"几类文件代码块之间各空一行\",{\"1\":{\"67\":1}}],[\"按以下顺序来引入依赖\",{\"1\":{\"67\":1}}],[\"按如下顺序组织\",{\"1\":{\"23\":1}}],[\"目前互联网和社区中流传最广泛的一个分支模型\",{\"1\":{\"100\":1}}],[\"目的是给业务同学提供研发过程中的实质性规范和指导\",{\"1\":{\"66\":1}}],[\"目录被\",{\"1\":{\"10\":1}}],[\"安全规约\",{\"0\":{\"68\":1},\"1\":{\"66\":1}}],[\"安装各种依赖\",{\"1\":{\"10\":1}}],[\"安装完成后\",{\"1\":{\"8\":1}}],[\"安装\",{\"0\":{\"8\":1,\"12\":1,\"106\":1,\"127\":1,\"131\":1,\"135\":1,\"139\":1,\"143\":1,\"147\":1,\"151\":1,\"155\":1,\"158\":1,\"163\":1,\"166\":1}}],[\"字段\",{\"1\":{\"144\":1}}],[\"字段名等内容\",{\"1\":{\"68\":1}}],[\"字数限制\",{\"0\":{\"91\":1}}],[\"字体相关样式问题\",{\"1\":{\"77\":1}}],[\"字面量包含字符串\",{\"1\":{\"72\":1}}],[\"字面量\",{\"1\":{\"72\":1}}],[\"字面量对象\",{\"1\":{\"64\":1}}],[\"字典序以解构的第一个为准\",{\"1\":{\"67\":1}}],[\"字符串字面量使用单引号包裹\",{\"1\":{\"72\":1}}],[\"字符串优先使用单引号\",{\"1\":{\"54\":1}}],[\"字符串\",{\"0\":{\"54\":1},\"1\":{\"53\":1,\"61\":1,\"72\":1}}],[\"字符串和模板字符串\",{\"1\":{\"50\":1}}],[\"字符编码\",{\"1\":{\"29\":2}}],[\"仍然是更好的选择\",{\"1\":{\"74\":1}}],[\"仍然使用正常命名风格\",{\"1\":{\"64\":1}}],[\"仍建议按上一条非空块的\",{\"1\":{\"47\":1}}],[\"依然使用正常的命名风格\",{\"1\":{\"64\":1}}],[\"依赖\",{\"0\":{\"126\":1,\"130\":1,\"134\":1,\"138\":1,\"142\":1,\"146\":1,\"150\":1,\"154\":1},\"1\":{\"10\":1,\"144\":1,\"161\":1}}],[\"给其他文件用的常量\",{\"1\":{\"64\":1}}],[\"实例\",{\"1\":{\"64\":1}}],[\"实现对javascript\",{\"1\":{\"2\":1}}],[\"实现自动化发布\",{\"1\":{\"2\":1}}],[\"连接的两侧同为数字或同为字符串\",{\"1\":{\"72\":1}}],[\"连接\",{\"1\":{\"64\":1}}],[\"考虑到部分操作系统\",{\"1\":{\"64\":1}}],[\"页数\",{\"1\":{\"63\":1}}],[\"页面需要指定\",{\"1\":{\"31\":1}}],[\"页面标题\",{\"0\":{\"31\":1}}],[\"页面提供给移动设备使用时\",{\"1\":{\"29\":1}}],[\"书本的作者\",{\"1\":{\"63\":1}}],[\"书本的标题\",{\"1\":{\"63\":1}}],[\"事件等\",{\"1\":{\"63\":1}}],[\"事实上\",{\"1\":{\"57\":1}}],[\"合理使用特殊注释标记\",{\"1\":{\"63\":1}}],[\"合理并一致地使用空格有助于提升代码的可读性和可维护性\",{\"1\":{\"48\":1}}],[\"勿增注释\",{\"1\":{\"63\":1}}],[\"环境中的\",{\"1\":{\"62\":1}}],[\"生产环境禁止使用\",{\"1\":{\"62\":1}}],[\"组件\",{\"1\":{\"62\":1}}],[\"组成\",{\"1\":{\"28\":1}}],[\"好的做法是使用第三方的弹窗组件或自己定义警告框样式\",{\"1\":{\"62\":1}}],[\"布尔等\",{\"1\":{\"72\":1}}],[\"布尔的值\",{\"1\":{\"61\":1}}],[\"布尔值\",{\"1\":{\"53\":1,\"61\":1}}],[\"计算结果遵守下面的规则\",{\"1\":{\"61\":1}}],[\"条件表达式\",{\"1\":{\"61\":1}}],[\"条件表达式的计算结果\",{\"1\":{\"61\":1}}],[\"级别\",{\"1\":{\"160\":3}}],[\"级\",{\"1\":{\"61\":1}}],[\"四则运算可以不用小括号包裹\",{\"1\":{\"60\":1}}],[\"四则运算符\",{\"1\":{\"60\":1}}],[\"四则运算符两侧各保留一个空格\",{\"1\":{\"23\":1}}],[\"值从\",{\"1\":{\"98\":1}}],[\"值\",{\"1\":{\"60\":1}}],[\"值是可变的\",{\"1\":{\"60\":1}}],[\"运算符\",{\"1\":{\"60\":2}}],[\"运算符两侧有空格\",{\"1\":{\"48\":1}}],[\"进行个性化配置\",{\"1\":{\"161\":1}}],[\"进行流程卡点\",{\"1\":{\"160\":1}}],[\"进行代码格式化\",{\"1\":{\"157\":1}}],[\"进行校验\",{\"1\":{\"105\":1}}],[\"进行重定向\",{\"1\":{\"68\":1}}],[\"进行强制转换所得\",{\"1\":{\"61\":1}}],[\"进行验证\",{\"1\":{\"61\":1}}],[\"进行比较\",{\"1\":{\"60\":2}}],[\"进行扫描\",{\"1\":{\"16\":2}}],[\"讨论issue\",{\"1\":{\"59\":1}}],[\"判断使用模块标准\",{\"1\":{\"59\":1}}],[\"暂时没有特别好的解法\",{\"1\":{\"59\":1}}],[\"历史上node\",{\"1\":{\"59\":1}}],[\"绝对路径\",{\"1\":{\"59\":1}}],[\"再次的显式声明类型会带来代码冗余\",{\"1\":{\"72\":1}}],[\"再使用\",{\"1\":{\"60\":1}}],[\"再\",{\"1\":{\"59\":2}}],[\"先\",{\"1\":{\"59\":2}}],[\"上游\",{\"1\":{\"96\":1}}],[\"上手指南\",{\"1\":{\"80\":1}}],[\"上面的问题已不复存在\",{\"1\":{\"60\":1}}],[\"上使用一个已导出的名称作为属性\",{\"1\":{\"59\":1}}],[\"上的方法\",{\"1\":{\"56\":2}}],[\"避免把所有改动都放在一个提交里面\",{\"1\":{\"89\":1}}],[\"避免定义空的接口类型\",{\"1\":{\"72\":1}}],[\"避免嵌套的三元表达式\",{\"1\":{\"60\":1}}],[\"避免重复的类成员命名\",{\"1\":{\"58\":1}}],[\"避免不必要的三元表达式\",{\"1\":{\"60\":1}}],[\"避免不必要的\",{\"1\":{\"58\":1}}],[\"避免不必要的布尔类型转换\",{\"1\":{\"53\":1}}],[\"循环时需要避免对象从原型链上继承来的属性也被遍历出来\",{\"1\":{\"61\":1}}],[\"循环改为\",{\"1\":{\"61\":1}}],[\"循环的终止条件将永远无法达到\",{\"1\":{\"61\":1}}],[\"循环的条件中依然可以使用自增自减运算符\",{\"1\":{\"60\":1}}],[\"循环中需要对\",{\"1\":{\"61\":1}}],[\"循环中更新子句的计数器朝着错误的方向移动时\",{\"1\":{\"61\":1}}],[\"循环中的计数器应朝着正确方向移动\",{\"1\":{\"61\":1}}],[\"循环条件中\",{\"1\":{\"60\":1}}],[\"循环\",{\"1\":{\"57\":1,\"61\":1}}],[\"就是通过语义化的名称来给仓库标注一个个具体的节点\",{\"1\":{\"103\":1}}],[\"就是一个合格的前端架构师面临的一大难题\",{\"1\":{\"1\":1}}],[\"就不是必须的\",{\"1\":{\"57\":1}}],[\"认知复杂度不超过\",{\"1\":{\"57\":1}}],[\"圈复杂度不超过\",{\"1\":{\"57\":1}}],[\"模型\",{\"1\":{\"100\":1}}],[\"模式命名会使可读性变差\",{\"1\":{\"64\":1}}],[\"模块混淆\",{\"1\":{\"72\":1}}],[\"模块与\",{\"1\":{\"72\":1}}],[\"模块的\",{\"1\":{\"67\":1}}],[\"模块引用声明需要放在文件顶端\",{\"1\":{\"67\":1}}],[\"模块引用声明放在文件顶端\",{\"1\":{\"67\":1}}],[\"模块相关的命名规范\",{\"1\":{\"64\":1}}],[\"模块开发者选择ems和cjs时\",{\"1\":{\"59\":1}}],[\"模块\",{\"0\":{\"59\":1},\"1\":{\"72\":1}}],[\"模块语法的引入\",{\"1\":{\"57\":1}}],[\"模板字符串\",{\"1\":{\"72\":1}}],[\"模板字符串让代码更简洁\",{\"1\":{\"54\":1}}],[\"模板字符串中应包含变量或换行\",{\"1\":{\"54\":1}}],[\"触发参数使用默认值\",{\"1\":{\"57\":1}}],[\"得到的则是类数组结构\",{\"1\":{\"57\":1}}],[\"得到的是一个真正的数组\",{\"1\":{\"57\":1}}],[\"操作符\",{\"0\":{\"60\":1},\"1\":{\"57\":1}}],[\"代表一个书本\",{\"1\":{\"63\":1}}],[\"代替\",{\"1\":{\"57\":1}}],[\"代码贡献指南\",{\"1\":{\"104\":1}}],[\"代码评审者\",{\"1\":{\"96\":1}}],[\"代码逻辑并未产生任何变化\",{\"1\":{\"94\":2}}],[\"代码注释\",{\"1\":{\"80\":1}}],[\"代码在目前浏览器中或者经过\",{\"1\":{\"57\":1}}],[\"代码块只有一条语句时\",{\"1\":{\"46\":1}}],[\"代码中的双斜杠注释会被删除\",{\"1\":{\"23\":1}}],[\"代码\",{\"1\":{\"23\":1}}],[\"代码可读性更好\",{\"1\":{\"21\":1}}],[\"代码更简洁\",{\"1\":{\"21\":1}}],[\"代码风格也会迥然不同\",{\"1\":{\"1\":1}}],[\"代码维护所占的时间比重往往大于新功能的开发\",{\"1\":{\"1\":1}}],[\"简单类型\",{\"1\":{\"72\":1}}],[\"简单数组类型的定义使用\",{\"1\":{\"72\":1}}],[\"简写语法\",{\"1\":{\"57\":1}}],[\"简写语法时\",{\"1\":{\"57\":2}}],[\"简称\",{\"1\":{\"44\":1}}],[\"匿名函数表达式也能够方便地查看堆栈\",{\"1\":{\"57\":1}}],[\"查看错误堆栈等目的\",{\"1\":{\"57\":1}}],[\"能在块外使用\",{\"1\":{\"57\":1}}],[\"能增强代码的可读性和一致性\",{\"1\":{\"21\":1}}],[\"带来安全隐患\",{\"1\":{\"57\":1}}],[\"构造函数创建函数\",{\"1\":{\"57\":1}}],[\"构造长度为\",{\"1\":{\"55\":1}}],[\"karma\",{\"1\":{\"104\":1}}],[\"k\",{\"1\":{\"56\":2}}],[\"keep\",{\"1\":{\"78\":1}}],[\"keys\",{\"1\":{\"57\":1}}],[\"key\",{\"1\":{\"48\":1,\"56\":1,\"57\":6,\"61\":7,\"62\":4,\"64\":4,\"123\":3}}],[\"keyword\",{\"1\":{\"39\":1,\"72\":1}}],[\"kent\",{\"1\":{\"48\":2}}],[\"允许在新建对象字面量时使用表达式作为属性名\",{\"1\":{\"56\":1}}],[\"允许但不推荐\",{\"1\":{\"46\":1}}],[\"获取书本的标题\",{\"1\":{\"63\":1}}],[\"获取对象的同名属性\",{\"1\":{\"56\":1}}],[\"获取排除某些属性的新对象\",{\"1\":{\"56\":1}}],[\"仅将必要问题报告为\",{\"1\":{\"160\":1}}],[\"仅用于命名常量\",{\"1\":{\"64\":1}}],[\"仅应在访问动态属性名或包含特殊字符的属性名时被使用\",{\"1\":{\"56\":1}}],[\"仅对\",{\"1\":{\"52\":1}}],[\"访问对象的属性\",{\"1\":{\"56\":1}}],[\"当变量的值与类型声明相等时\",{\"1\":{\"72\":1}}],[\"当静态文件的访问量很大的时候\",{\"1\":{\"69\":1}}],[\"当模块内只有一个\",{\"1\":{\"59\":1}}],[\"当函数参数需要默认值时\",{\"1\":{\"57\":1}}],[\"当函数只有一个参数\",{\"1\":{\"57\":1}}],[\"当函数体只包含一条\",{\"1\":{\"57\":1}}],[\"当\",{\"1\":{\"57\":1,\"61\":1}}],[\"当然\",{\"1\":{\"56\":1}}],[\"当第二个参数省略时\",{\"1\":{\"53\":1}}],[\"置于对象的起始或末尾\",{\"1\":{\"56\":1}}],[\"遍历可迭代对象时\",{\"1\":{\"55\":1}}],[\"特殊的\",{\"1\":{\"55\":1}}],[\"特别是多人协作\",{\"1\":{\"23\":1}}],[\"用来描述详细的提交内容\",{\"1\":{\"96\":1}}],[\"用来描述本次提交所涉及到的改动范围\",{\"1\":{\"95\":1}}],[\"用来描述本次提交的改动类型\",{\"1\":{\"94\":1}}],[\"用来概括和描述本次提交的改动内容\",{\"1\":{\"96\":1}}],[\"用来快速构建网站和应用\",{\"1\":{\"82\":2}}],[\"用以说明更新的类型\",{\"1\":{\"76\":1}}],[\"用户上传文件不允许至服务器本地\",{\"1\":{\"68\":1}}],[\"用小括号包裹分组\",{\"1\":{\"60\":1}}],[\"用小括号包裹\",{\"1\":{\"57\":1}}],[\"用\",{\"1\":{\"55\":1,\"77\":1}}],[\"用于对\",{\"1\":{\"105\":1}}],[\"用于\",{\"1\":{\"64\":1}}],[\"用于组合若干条语句\",{\"1\":{\"46\":1}}],[\"用于锚点链接\",{\"1\":{\"37\":1}}],[\"用于章节\",{\"1\":{\"37\":1}}],[\"接口中的方法使用属性的方式定义\",{\"1\":{\"72\":1}}],[\"接口获取到敏感信息的风险\",{\"1\":{\"68\":1}}],[\"接口的对象\",{\"1\":{\"55\":1}}],[\"接入和升级成本都比较高\",{\"1\":{\"6\":1}}],[\"某些方法漏掉\",{\"1\":{\"55\":1}}],[\"某些数组方法的回调函数中必须包含\",{\"1\":{\"55\":1}}],[\"单词间使用下划线分割的命名模式\",{\"1\":{\"64\":1}}],[\"单词间用下划线分割的命名模式\",{\"1\":{\"64\":1}}],[\"单纯想遍历数组应使用\",{\"1\":{\"55\":1}}],[\"单行最大字符数\",{\"1\":{\"50\":1}}],[\"单行注释使用\",{\"1\":{\"63\":1}}],[\"单行注释\",{\"1\":{\"23\":1,\"34\":2}}],[\"单行代码最多不要超过\",{\"1\":{\"19\":1}}],[\"转码后\",{\"1\":{\"57\":1}}],[\"转换为数组\",{\"1\":{\"55\":1}}],[\"转换成\",{\"1\":{\"55\":2}}],[\"转义字符会大大降低代码的可读性\",{\"1\":{\"54\":1}}],[\"欲将\",{\"1\":{\"55\":2}}],[\"禁止在\",{\"1\":{\"72\":1}}],[\"禁止在返回类型或泛型类型参数之外使用\",{\"1\":{\"72\":1}}],[\"禁止无意义的\",{\"1\":{\"72\":1}}],[\"禁止对原生对象或只读的全局对象进行赋值\",{\"1\":{\"62\":1}}],[\"禁止使用三斜杠语法\",{\"1\":{\"72\":1}}],[\"禁止使用容易混淆的非空断言\",{\"1\":{\"72\":1}}],[\"禁止使用从参数或明文\",{\"1\":{\"68\":1}}],[\"禁止使用\",{\"1\":{\"60\":1,\"62\":3,\"72\":3}}],[\"禁止循环引用\",{\"1\":{\"59\":1}}],[\"禁止引用自身\",{\"1\":{\"59\":1}}],[\"禁止\",{\"1\":{\"59\":1}}],[\"禁止不必要的转义字符\",{\"1\":{\"54\":1}}],[\"禁止连续赋值\",{\"1\":{\"52\":1}}],[\"否则为\",{\"1\":{\"61\":2}}],[\"否则将难以阅读和维护\",{\"1\":{\"61\":1}}],[\"否则你将无法享受到默认参数的便利\",{\"1\":{\"57\":1}}],[\"否则直接使用匿名函数表达式\",{\"1\":{\"57\":1}}],[\"否则可能会产生误用或错误\",{\"1\":{\"55\":1}}],[\"否则可能带来一些副作用\",{\"1\":{\"23\":1}}],[\"否则需用单引号\",{\"1\":{\"54\":1}}],[\"`small|medium|large`\",{\"1\":{\"98\":1}}],[\"`s|m|l`\",{\"1\":{\"98\":1}}],[\"`sticky`\",{\"1\":{\"77\":1}}],[\"```markdown\",{\"1\":{\"96\":1}}],[\"```\",{\"1\":{\"96\":1}}],[\"`hidden`\",{\"1\":{\"77\":1}}],[\"`hello\",{\"1\":{\"72\":1}}],[\"`children`\",{\"1\":{\"77\":1}}],[\"`diff\",{\"1\":{\"76\":1}}],[\"`this\",{\"1\":{\"69\":1}}],[\"`tod`\",{\"1\":{\"54\":1}}],[\"`return`\",{\"1\":{\"57\":2}}],[\"`a\",{\"1\":{\"56\":1,\"57\":4}}],[\"`\",{\"1\":{\"54\":3,\"56\":4,\"57\":4,\"61\":1,\"67\":1,\"69\":1,\"72\":1,\"77\":1}}],[\"`$\",{\"1\":{\"54\":1,\"56\":3,\"67\":1}}],[\"`undefined`\",{\"1\":{\"44\":1}}],[\"作者签名等\",{\"1\":{\"96\":1}}],[\"作基数的规则\",{\"1\":{\"53\":1}}],[\"作基数\",{\"1\":{\"53\":3}}],[\"作为默认的解析器\",{\"1\":{\"161\":1}}],[\"作为主干分支显然是无法满足需求的\",{\"1\":{\"102\":1}}],[\"作为固定文案\",{\"1\":{\"76\":2}}],[\"作为后缀\",{\"1\":{\"75\":1}}],[\"作为一个开发者\",{\"1\":{\"74\":1}}],[\"作为一门弱类型解释性编程语言\",{\"1\":{\"1\":1}}],[\"作为标准代表着未来\",{\"1\":{\"59\":1}}],[\"作为基数\",{\"1\":{\"53\":1}}],[\"作为配置文件\",{\"1\":{\"16\":1}}],[\"作为\",{\"1\":{\"6\":1,\"125\":1,\"133\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1}}],[\"作为规约文档的配套工具\",{\"1\":{\"3\":1}}],[\"开发技术相关知识\",{\"1\":{\"81\":2}}],[\"开发者用户很可能需要从一个低版本升级到最新版\",{\"1\":{\"74\":1}}],[\"开发者时\",{\"1\":{\"72\":1}}],[\"开头也会使用\",{\"1\":{\"53\":1}}],[\"开头\",{\"1\":{\"53\":2}}],[\"开始支持\",{\"1\":{\"67\":1}}],[\"开始就移除了自动以\",{\"1\":{\"53\":1}}],[\"开始\",{\"1\":{\"52\":1}}],[\"数组拼接\",{\"1\":{\"55\":1}}],[\"数组复制\",{\"1\":{\"55\":1}}],[\"数组\",{\"0\":{\"55\":1},\"1\":{\"61\":1}}],[\"数组和对象是一个引用\",{\"1\":{\"52\":1}}],[\"数字与字符串的连接往往会导致一些预期外的问题\",{\"1\":{\"72\":1}}],[\"数字\",{\"1\":{\"53\":1,\"61\":1,\"72\":2}}],[\"还不熟悉\",{\"1\":{\"161\":1}}],[\"还可以添加其他元信息\",{\"1\":{\"96\":1}}],[\"还可能有问题报告者\",{\"1\":{\"96\":1}}],[\"还可能引起错误\",{\"1\":{\"55\":1}}],[\"还提供了数百个内置全局对象\",{\"1\":{\"62\":1}}],[\"还会导致变量成为\",{\"1\":{\"53\":1}}],[\"还能够保证后续所有项目的编码质量\",{\"1\":{\"1\":1}}],[\"种原始类型\",{\"1\":{\"53\":1}}],[\"原生规则和\",{\"1\":{\"125\":1,\"137\":1}}],[\"原生\",{\"1\":{\"69\":1}}],[\"原始类型\",{\"0\":{\"53\":1}}],[\"原则\",{\"1\":{\"23\":2}}],[\"归类写在一起\",{\"1\":{\"52\":1}}],[\"起到了预想效果\",{\"1\":{\"52\":1}}],[\"本包已开启的环境有\",{\"1\":{\"161\":1}}],[\"本包不同配置文件使用的解析器可在简介表格中的\",{\"1\":{\"161\":1}}],[\"本包还提供了一套名为\",{\"1\":{\"160\":1}}],[\"本包中大量风格相关的规则被设为了\",{\"1\":{\"160\":1}}],[\"本包的一些规则可能会跟\",{\"1\":{\"157\":1}}],[\"本次升级将\",{\"1\":{\"98\":1}}],[\"本身不用形成完整的句子\",{\"1\":{\"96\":1}}],[\"本质上是对\",{\"1\":{\"72\":1}}],[\"本地文件或其他\",{\"1\":{\"67\":1}}],[\"本该用\",{\"1\":{\"55\":1}}],[\"本例的结果是\",{\"1\":{\"52\":1}}],[\"本规范面向的\",{\"1\":{\"41\":1}}],[\"本规约涉及\",{\"1\":{\"17\":1}}],[\"同理\",{\"1\":{\"52\":1,\"62\":1}}],[\"同时也能避免一些非法调用\",{\"1\":{\"72\":1}}],[\"同时也能减少脏数据形成\",{\"1\":{\"68\":1}}],[\"同时也可以用于描述普通对象\",{\"1\":{\"72\":1}}],[\"同时\",{\"1\":{\"35\":1}}],[\"同时还可以根据自己的需求扩展相关的插件\",{\"1\":{\"23\":1}}],[\"同时通过husky的commit\",{\"1\":{\"2\":1}}],[\"降低程序的可维护性\",{\"1\":{\"52\":1}}],[\"降低项目接入规约的成本\",{\"1\":{\"3\":1,\"6\":1}}],[\"重构代码或其他优化举措\",{\"1\":{\"94\":1}}],[\"重构\",{\"1\":{\"77\":1}}],[\"重大变更\",{\"1\":{\"76\":1}}],[\"重载的函数必须写在一起\",{\"1\":{\"72\":1}}],[\"重定向需要设置白名单\",{\"1\":{\"68\":1}}],[\"重复的类成员声明最终生效的将是最后一个\",{\"1\":{\"58\":1}}],[\"重复声明变量会直接报错\",{\"1\":{\"52\":1}}],[\"重复声明不会报错\",{\"1\":{\"52\":1}}],[\"重新对参数赋值是不推荐的行为\",{\"1\":{\"57\":1}}],[\"重写样式\",{\"1\":{\"21\":1}}],[\"尽量避免使用回调函数\",{\"1\":{\"69\":1}}],[\"尽量不要用\",{\"1\":{\"69\":1}}],[\"尽量详尽\",{\"1\":{\"63\":1}}],[\"尽量根据语义使用\",{\"1\":{\"37\":1}}],[\"尽管使用\",{\"1\":{\"52\":1}}],[\"失败\",{\"1\":{\"52\":1}}],[\"哪里声明\",{\"1\":{\"52\":1}}],[\"哪里使用\",{\"1\":{\"52\":1}}],[\"没有私有属性或私有方法的概念\",{\"1\":{\"64\":1}}],[\"没有声明提升作用\",{\"1\":{\"52\":1}}],[\"没有结尾逗号时\",{\"1\":{\"45\":1}}],[\"了解常用的\",{\"1\":{\"161\":1}}],[\"了解如何在继承本包的基础上对项目\",{\"1\":{\"161\":1}}],[\"了解如何为\",{\"1\":{\"161\":1}}],[\"了解更多请阅读\",{\"1\":{\"159\":1}}],[\"了解更多\",{\"0\":{\"161\":1},\"1\":{\"28\":1,\"29\":1,\"30\":4,\"36\":1,\"37\":1,\"38\":1,\"46\":1,\"53\":2,\"60\":1,\"81\":2}}],[\"了\",{\"1\":{\"52\":1,\"57\":1}}],[\"改成\",{\"1\":{\"52\":1}}],[\"只使用\",{\"1\":{\"102\":1}}],[\"只有一行\",{\"1\":{\"91\":1}}],[\"只有对象本身需要使用\",{\"1\":{\"64\":1}}],[\"只有当变量会被重新赋值时才使用\",{\"1\":{\"52\":1}}],[\"只能在node\",{\"1\":{\"59\":1}}],[\"只能通过传\",{\"1\":{\"57\":1}}],[\"只修改变量不认为是被使用\",{\"1\":{\"52\":1}}],[\"只从效率的角度来看\",{\"1\":{\"20\":1}}],[\"正确代码示例\",{\"1\":{\"123\":1}}],[\"正确示例\",{\"1\":{\"120\":1}}],[\"正确地拼写英文专有词汇\",{\"1\":{\"84\":1}}],[\"正确地使用\",{\"1\":{\"52\":1,\"58\":1}}],[\"正确使用破折号\",{\"1\":{\"82\":1}}],[\"正确使用省略号\",{\"1\":{\"82\":1}}],[\"正确使用引号\",{\"1\":{\"82\":1}}],[\"正则和\",{\"1\":{\"72\":1}}],[\"正则表达式\",{\"1\":{\"50\":1}}],[\"正是这条规则经常导致错误\",{\"1\":{\"53\":1}}],[\"从上到下可以看到这段代码诞生的过程\",{\"1\":{\"96\":1}}],[\"从而提高代码的可维护性\",{\"1\":{\"63\":1}}],[\"从而污染全局命名空间\",{\"1\":{\"52\":1}}],[\"从而使\",{\"1\":{\"21\":1}}],[\"从\",{\"1\":{\"52\":1,\"67\":1}}],[\"过滤之后再拼接到\",{\"1\":{\"68\":1}}],[\"过高的复杂度意味着代码难以维护和测试\",{\"1\":{\"57\":1}}],[\"过高的选择器优先级\",{\"1\":{\"23\":1}}],[\"过长的函数不易阅读和维护\",{\"1\":{\"50\":1}}],[\"过长的文件不易阅读和维护\",{\"1\":{\"50\":1}}],[\"过长的单行代码不易阅读和维护\",{\"1\":{\"50\":1}}],[\"最初源于打字机宽度等物理设备的限制\",{\"1\":{\"91\":1}}],[\"最新版本放在最前面\",{\"1\":{\"76\":1}}],[\"最佳实践\",{\"0\":{\"69\":1}}],[\"最佳实践等几个部分\",{\"1\":{\"66\":1}}],[\"最常用的特殊标记有两种\",{\"1\":{\"63\":1}}],[\"最好对其进行拆分\",{\"1\":{\"50\":2}}],[\"最大字符数和最大行数\",{\"0\":{\"50\":1}}],[\"最小化存量代码的更新成本\",{\"1\":{\"2\":1}}],[\"qu\",{\"1\":{\"60\":2}}],[\"queue\",{\"1\":{\"58\":5}}],[\"queryselectorall\",{\"1\":{\"55\":1}}],[\"quote\",{\"1\":{\"56\":1}}],[\"quoted\",{\"1\":{\"54\":3}}],[\"quotes\",{\"1\":{\"20\":1,\"21\":1,\"54\":1,\"72\":1}}],[\"quux\",{\"1\":{\"50\":4}}],[\"quxx\",{\"1\":{\"60\":2}}],[\"qux\",{\"1\":{\"49\":2,\"57\":2,\"60\":2}}],[\"↵\",{\"1\":{\"49\":3}}],[\"空的接口类型等效于空对象\",{\"1\":{\"72\":1}}],[\"空\",{\"1\":{\"58\":1}}],[\"空行\",{\"0\":{\"49\":1}}],[\"空格风格\",{\"1\":{\"48\":1}}],[\"空格\",{\"0\":{\"48\":1,\"81\":1}}],[\"水平对齐\",{\"1\":{\"48\":1}}],[\"定义其格式与样式\",{\"1\":{\"81\":1}}],[\"定义网页的结构与内容\",{\"1\":{\"81\":1}}],[\"定义函数时\",{\"1\":{\"72\":1}}],[\"定义时必须声明成员的类型\",{\"1\":{\"72\":1}}],[\"定义类型\",{\"1\":{\"72\":1}}],[\"定义对象字面量时\",{\"1\":{\"48\":1}}],[\"定期检查过期依赖和依赖漏洞升级\",{\"1\":{\"68\":1}}],[\"定位\",{\"1\":{\"21\":6}}],[\"方式或使用\",{\"1\":{\"67\":1}}],[\"方法来迭代对象\",{\"1\":{\"57\":1}}],[\"方法一样执行字符串\",{\"1\":{\"57\":1}}],[\"方法\",{\"1\":{\"56\":1,\"58\":1,\"67\":1,\"72\":1}}],[\"方法加上基数\",{\"1\":{\"53\":1}}],[\"方法的第一个参数是待转换的字符串\",{\"1\":{\"53\":1}}],[\"方法时总是带上基数\",{\"1\":{\"53\":1}}],[\"方便链式调用\",{\"1\":{\"69\":1}}],[\"方便在串联和追加文件时不会打断\",{\"1\":{\"49\":1}}],[\"方便地为项目接入全部规范\",{\"1\":{\"3\":1}}],[\"方括号内部两侧无空格\",{\"1\":{\"48\":1}}],[\"yeoman\",{\"1\":{\"85\":1}}],[\"year\",{\"1\":{\"48\":2}}],[\"yui\",{\"1\":{\"85\":1}}],[\"yup\",{\"1\":{\"64\":1}}],[\"yyyy\",{\"1\":{\"76\":1}}],[\"yield\",{\"1\":{\"57\":4}}],[\"you\",{\"1\":{\"50\":2,\"101\":1}}],[\"yourself\",{\"1\":{\"23\":1}}],[\"y\",{\"1\":{\"48\":3,\"52\":4,\"57\":5,\"61\":2,\"72\":2}}],[\"或其他平台的\",{\"1\":{\"97\":1}}],[\"或其他服务\",{\"1\":{\"69\":1}}],[\"或标题\",{\"1\":{\"96\":1}}],[\"或测试用例\",{\"1\":{\"94\":1}}],[\"或更高版本\",{\"1\":{\"72\":1}}],[\"或函数\",{\"1\":{\"72\":1}}],[\"或当前正在处理的请求超时\",{\"1\":{\"67\":1}}],[\"或者\",{\"1\":{\"83\":2,\"94\":1}}],[\"或者公司内部的底层技术产品\",{\"1\":{\"74\":1}}],[\"或者某个地方还有一些待完成的功能\",{\"1\":{\"63\":1}}],[\"或者只调用父类的\",{\"1\":{\"58\":1}}],[\"或\",{\"1\":{\"47\":1,\"52\":2,\"53\":1,\"61\":1,\"63\":1,\"68\":1,\"72\":4,\"125\":1,\"141\":1}}],[\"或存在逗号\",{\"1\":{\"47\":1}}],[\"且该常量需同时满足如下条件\",{\"1\":{\"64\":1}}],[\"且必须在\",{\"1\":{\"58\":1}}],[\"且当参数的布尔类型转换结果是\",{\"1\":{\"57\":1}}],[\"且只有一个参数时\",{\"1\":{\"57\":1}}],[\"且函数体为\",{\"1\":{\"57\":1}}],[\"且不在类似\",{\"1\":{\"47\":1}}],[\"且斜线前需留有一个空格\",{\"1\":{\"35\":1}}],[\"放在同一行\",{\"1\":{\"47\":1}}],[\"放在最前面\",{\"1\":{\"21\":1}}],[\"右小括号\",{\"1\":{\"47\":1}}],[\"右大括号\",{\"1\":{\"47\":2}}],[\"则需要设置\",{\"1\":{\"144\":1}}],[\"则需要换行\",{\"1\":{\"47\":1}}],[\"则可以忽略\",{\"1\":{\"101\":1}}],[\"则为网页增加可交互性\",{\"1\":{\"81\":1}}],[\"则在句尾增加\",{\"1\":{\"76\":1}}],[\"则句首大写\",{\"1\":{\"76\":1}}],[\"则以下代码也是正确的\",{\"1\":{\"72\":1}}],[\"则推荐使用只读属性\",{\"1\":{\"72\":1}}],[\"则esm和cjs都要支持\",{\"1\":{\"59\":1}}],[\"则使用\",{\"1\":{\"53\":2}}],[\"则不需要换行\",{\"1\":{\"47\":1}}],[\"则不应该使用简写属性\",{\"1\":{\"21\":1}}],[\"终结了整个语句\",{\"1\":{\"47\":1}}],[\"前言\",{\"0\":{\"74\":1,\"80\":1,\"89\":1}}],[\"前使用非空断言\",{\"1\":{\"72\":1}}],[\"前的执行环境中得到的是\",{\"1\":{\"53\":1}}],[\"前有一个空格\",{\"1\":{\"48\":2}}],[\"前面换行\",{\"1\":{\"47\":1}}],[\"前面不换行\",{\"1\":{\"47\":1}}],[\"前端常用专有名词\",{\"1\":{\"85\":1}}],[\"前端框架\",{\"1\":{\"83\":3}}],[\"前端编码规范工程化的配套\",{\"1\":{\"5\":1}}],[\"前端项目正在变得越来越复杂\",{\"1\":{\"1\":1}}],[\"左大括号\",{\"1\":{\"47\":1}}],[\"具体来说\",{\"1\":{\"48\":1}}],[\"具体规则如下\",{\"1\":{\"47\":1}}],[\"具体会做以下事情\",{\"1\":{\"10\":1}}],[\"风格而非\",{\"1\":{\"72\":1}}],[\"风格换行\",{\"1\":{\"47\":1}}],[\"风格\",{\"1\":{\"47\":2,\"49\":1,\"64\":1}}],[\"采用\",{\"1\":{\"47\":1,\"76\":1}}],[\"大括号内部两侧有空格\",{\"1\":{\"48\":1}}],[\"大括号的换行方式采用\",{\"1\":{\"47\":1}}],[\"大括号换行风格\",{\"0\":{\"47\":1}}],[\"大于\",{\"1\":{\"21\":1}}],[\"始终加上大括号\",{\"1\":{\"57\":1}}],[\"始终加上最后一个逗号\",{\"1\":{\"45\":1}}],[\"始终使用大括号包裹代码块\",{\"1\":{\"46\":1}}],[\"由于\",{\"1\":{\"52\":2,\"57\":1,\"59\":1}}],[\"由于历史原因\",{\"1\":{\"29\":1}}],[\"由一对大括号界定\",{\"1\":{\"46\":1}}],[\"术语解释\",{\"1\":{\"46\":1}}],[\"块级作用域在很多其他编程语言中都有使用\",{\"1\":{\"52\":1}}],[\"块的开始和结束不能是空行\",{\"1\":{\"49\":1}}],[\"块的左大括号\",{\"1\":{\"48\":1}}],[\"块\",{\"0\":{\"46\":1},\"1\":{\"46\":1}}],[\"块内的属性声明按如下顺序排序\",{\"1\":{\"23\":1}}],[\"有些用户根据\",{\"1\":{\"160\":1}}],[\"有些规范提出\",{\"1\":{\"57\":1}}],[\"有利于保证提交内容的独立性\",{\"1\":{\"89\":1}}],[\"有时会重新渲染的问题\",{\"1\":{\"77\":1}}],[\"有时会出现因开发者忘记设置\",{\"1\":{\"61\":1}}],[\"有时我们发现某个可能的\",{\"1\":{\"63\":1}}],[\"有人可能会误以为执行顺序是\",{\"1\":{\"60\":1}}],[\"有默认值的函数参数需要放到参数列表的最后\",{\"1\":{\"57\":1}}],[\"有\",{\"1\":{\"55\":1}}],[\"有结尾逗号时\",{\"1\":{\"45\":1}}],[\"有且仅有\",{\"1\":{\"31\":1}}],[\"新建分支的命名格式为\",{\"1\":{\"101\":1}}],[\"新增或修改测试用例\",{\"1\":{\"94\":1}}],[\"新增图片组件\",{\"1\":{\"77\":1}}],[\"新增功能\",{\"1\":{\"76\":1,\"94\":1}}],[\"新增\",{\"1\":{\"76\":1,\"77\":4,\"101\":1}}],[\"新增一行的\",{\"1\":{\"45\":2}}],[\"新定义\",{\"1\":{\"53\":1}}],[\"新特性的增加\",{\"1\":{\"44\":1}}],[\"逗号\",{\"0\":{\"45\":1}}],[\"函数等\",{\"1\":{\"72\":1}}],[\"函数库\",{\"1\":{\"64\":1}}],[\"函数内必须有\",{\"1\":{\"57\":1}}],[\"函数的参数不应过多\",{\"1\":{\"57\":1}}],[\"函数的复杂度不应过高\",{\"1\":{\"57\":1}}],[\"函数的声明也不要与已存在的变量和函数重名\",{\"1\":{\"52\":1}}],[\"函数参数风格\",{\"1\":{\"57\":1}}],[\"函数体只包含一条\",{\"1\":{\"57\":1}}],[\"函数体包含多条语句时\",{\"1\":{\"57\":1}}],[\"函数体风格\",{\"1\":{\"57\":1}}],[\"函数体的大括号在某些时候可以省略\",{\"1\":{\"57\":1}}],[\"函数声明会被提升到当前作用域的顶部\",{\"1\":{\"57\":1}}],[\"函数声明不是块作用域而是函数作用域\",{\"1\":{\"57\":1}}],[\"函数表达式可以清晰地说明函数能否在块外使用\",{\"1\":{\"57\":1}}],[\"函数有多个返回值时\",{\"1\":{\"55\":1}}],[\"函数最大行数\",{\"1\":{\"50\":1}}],[\"函数名和参数列表之间无空格\",{\"1\":{\"48\":1}}],[\"函数或类的主体\",{\"1\":{\"47\":1}}],[\"函数\",{\"0\":{\"57\":1},\"1\":{\"46\":1,\"64\":1}}],[\"函数将返回\",{\"1\":{\"44\":1}}],[\"函数时\",{\"1\":{\"19\":1}}],[\"报错\",{\"1\":{\"44\":2}}],[\"异常的情况可能变得更加复杂\",{\"1\":{\"44\":1}}],[\"遇到不带分号的语句时判断是否自动添加分号的机制\",{\"1\":{\"44\":1}}],[\"自定义\",{\"1\":{\"72\":1}}],[\"自定义属性的命名\",{\"1\":{\"36\":1}}],[\"自然相关的项组合在一起将提高代码可读性和组织性\",{\"1\":{\"72\":1}}],[\"自己工程里的模块\",{\"1\":{\"59\":1}}],[\"自动分号插入机制\",{\"1\":{\"44\":1}}],[\"引用方式为在相应配置的\",{\"1\":{\"160\":1}}],[\"引用\",{\"0\":{\"97\":1}}],[\"引用顺序如无特殊需求\",{\"1\":{\"67\":1}}],[\"引擎的优化\",{\"1\":{\"56\":1}}],[\"引擎自动分号插入机制的怪异行为\",{\"1\":{\"44\":1}}],[\"引入插件\",{\"0\":{\"111\":1}}],[\"引入同一模块\",{\"1\":{\"59\":1}}],[\"引入\",{\"1\":{\"30\":2}}],[\"统一以分号结束语句\",{\"1\":{\"44\":1}}],[\"统一使用\",{\"1\":{\"29\":1,\"33\":1,\"43\":1}}],[\"∙∙let\",{\"1\":{\"43\":1}}],[\"∙∙∙∙let\",{\"1\":{\"43\":1}}],[\"命令\",{\"1\":{\"161\":1}}],[\"命令写入\",{\"1\":{\"10\":1}}],[\"命名格式为\",{\"1\":{\"103\":1}}],[\"命名规约\",{\"0\":{\"103\":1}}],[\"命名不要以下划线开头或结尾\",{\"1\":{\"64\":1}}],[\"命名模式只用于\",{\"1\":{\"64\":1}}],[\"命名类和构造函数\",{\"1\":{\"64\":1}}],[\"命名原始类型\",{\"1\":{\"64\":1}}],[\"命名相同\",{\"1\":{\"59\":1}}],[\"命名\",{\"0\":{\"64\":1},\"1\":{\"41\":1,\"64\":2}}],[\"印客学院\",{\"1\":{\"39\":2,\"105\":1,\"124\":1,\"162\":1,\"165\":1}}],[\"印客学院官网\",{\"1\":{\"4\":1}}],[\"建议的\",{\"1\":{\"39\":1}}],[\"建议自定义属性的命名都以\",{\"1\":{\"36\":1}}],[\"脚手架模板如下\",{\"1\":{\"39\":1}}],[\"脚手架模板\",{\"0\":{\"39\":1}}],[\"脚本\",{\"1\":{\"30\":1}}],[\"图片无需被无障碍阅读器识别时\",{\"1\":{\"38\":2}}],[\"无\",{\"1\":{\"72\":1}}],[\"无用的注释代码会使程序变得臃肿并降低可读性\",{\"1\":{\"63\":1}}],[\"无用的代码注释应被即时删除\",{\"1\":{\"63\":1}}],[\"无法被无障碍阅读器识别\",{\"1\":{\"38\":1}}],[\"无障碍\",{\"1\":{\"38\":1}}],[\"缺少\",{\"1\":{\"38\":1}}],[\"传统上我们认为这只与残疾人士有关\",{\"1\":{\"38\":1}}],[\"让我们拥抱未来吧\",{\"1\":{\"59\":1}}],[\"让不同程度或需求的用户可以顺畅的获取网站上的信息\",{\"1\":{\"38\":1}}],[\"让项目能够一键接入\",{\"1\":{\"3\":1,\"6\":1}}],[\"网页可访问性使网页内容落实\",{\"1\":{\"38\":1}}],[\"都是允许的\",{\"1\":{\"72\":1}}],[\"都推荐使用\",{\"1\":{\"72\":1}}],[\"都成了全局变量\",{\"1\":{\"52\":1}}],[\"都有其语义\",{\"1\":{\"37\":1}}],[\"都会对不仅能够解决存量项目的编码异味\",{\"1\":{\"1\":1}}],[\"被设计为返回\",{\"1\":{\"72\":1}}],[\"被广泛使用\",{\"1\":{\"64\":1}}],[\"被广泛使用的今天\",{\"1\":{\"35\":1}}],[\"被计算为\",{\"1\":{\"61\":6}}],[\"被多处使用\",{\"1\":{\"23\":1}}],[\"需保证项目已安装\",{\"1\":{\"144\":1}}],[\"需遵循\",{\"1\":{\"76\":1}}],[\"需在块内写明注释\",{\"1\":{\"47\":1}}],[\"需在注释内容和注释符之间需留有一个空格\",{\"1\":{\"34\":1}}],[\"需注意以下几点\",{\"1\":{\"96\":2}}],[\"需注意\",{\"1\":{\"45\":1,\"52\":1}}],[\"需要先行安装\",{\"1\":{\"163\":1,\"166\":1}}],[\"需要安装\",{\"1\":{\"106\":1}}],[\"需要在这里声明\",{\"1\":{\"98\":1}}],[\"需要对其进行域名白名单校验\",{\"1\":{\"68\":1}}],[\"需要对用户输入进行转义\",{\"1\":{\"68\":1}}],[\"需要上传到\",{\"1\":{\"68\":1}}],[\"需要以\",{\"1\":{\"61\":1}}],[\"需要判断运行时环境\",{\"1\":{\"59\":1}}],[\"需要迭代运算时\",{\"1\":{\"57\":1}}],[\"需要提醒的是\",{\"1\":{\"57\":1}}],[\"需要用小括号包裹\",{\"1\":{\"57\":1}}],[\"需要进行合理换行\",{\"1\":{\"50\":1}}],[\"需要每个属性声明取值\",{\"1\":{\"36\":1}}],[\"需要设置\",{\"1\":{\"29\":1}}],[\"需要显式地设置所有值\",{\"1\":{\"21\":1}}],[\"证书\",{\"1\":{\"34\":1}}],[\"身份证号码\",{\"1\":{\"34\":1}}],[\"手机\",{\"1\":{\"34\":1}}],[\"例如这条规则\",{\"1\":{\"157\":1}}],[\"例如模块\",{\"1\":{\"95\":1}}],[\"例如代码缩进\",{\"1\":{\"94\":1}}],[\"例如在国内的团队中\",{\"1\":{\"92\":1}}],[\"例如\",{\"1\":{\"37\":1,\"38\":1,\"56\":1,\"61\":1,\"63\":1,\"64\":1,\"69\":1,\"95\":1,\"96\":2,\"102\":1,\"103\":1,\"144\":1}}],[\"例如邮箱\",{\"1\":{\"34\":1}}],[\"例如业务规则\",{\"1\":{\"34\":1}}],[\"常见的敏感信息包括\",{\"1\":{\"34\":1}}],[\"常见的简写属性包括\",{\"1\":{\"21\":1}}],[\"处理字符集和字符编码的问题应该是每个程序员的必修课\",{\"1\":{\"92\":1}}],[\"处理回调函数\",{\"1\":{\"69\":1}}],[\"处理对象\",{\"1\":{\"56\":1}}],[\"处理数组\",{\"1\":{\"55\":1}}],[\"处理\",{\"1\":{\"30\":1}}],[\"处理器\",{\"1\":{\"23\":1}}],[\"预加载关键资源\",{\"1\":{\"30\":1}}],[\"外的其他类型做联合\",{\"1\":{\"72\":1}}],[\"外部资源的引用地址跟随页面协议\",{\"1\":{\"30\":1}}],[\"外观\",{\"1\":{\"21\":2}}],[\"浏览器行为跟踪\",{\"1\":{\"81\":2}}],[\"浏览器\",{\"1\":{\"30\":1}}],[\"结尾\",{\"1\":{\"61\":1}}],[\"结束标签前引入\",{\"1\":{\"30\":2}}],[\"结构强耦合\",{\"1\":{\"23\":1}}],[\"根据以上规约\",{\"1\":{\"39\":1}}],[\"根据\",{\"1\":{\"30\":1}}],[\"资源加载\",{\"0\":{\"30\":1}}],[\"xxxx\",{\"1\":{\"123\":2}}],[\"xyzzy\",{\"1\":{\"50\":2}}],[\"x=y+5\",{\"1\":{\"48\":1}}],[\"x\",{\"1\":{\"29\":1,\"48\":3,\"52\":4,\"57\":14,\"61\":4,\"62\":6,\"68\":1,\"72\":11,\"85\":1,\"114\":2,\"115\":2}}],[\"xhtml1\",{\"1\":{\"27\":2}}],[\"xhtml\",{\"1\":{\"27\":1,\"36\":1}}],[\"元数据\",{\"0\":{\"29\":1}}],[\"元素上指定\",{\"1\":{\"28\":1}}],[\"元素\",{\"1\":{\"20\":1,\"37\":1}}],[\"翻译等工具的工作\",{\"1\":{\"28\":1}}],[\"指向当前版本和上一个版本之间的\",{\"1\":{\"76\":1}}],[\"指向的问题\",{\"1\":{\"57\":1}}],[\"指定代码的运行环境\",{\"1\":{\"161\":1}}],[\"指定代码中可能用到的全局变量\",{\"1\":{\"161\":1}}],[\"指定版本会被警告\",{\"1\":{\"115\":1}}],[\"指定\",{\"1\":{\"28\":1}}],[\"指令\",{\"1\":{\"23\":2}}],[\"非常的有趣\",{\"1\":{\"83\":2}}],[\"非字面量\",{\"1\":{\"72\":1}}],[\"非严格相等运算符\",{\"1\":{\"60\":1}}],[\"非子类不能使用\",{\"1\":{\"58\":1}}],[\"非子类的\",{\"1\":{\"58\":1}}],[\"非\",{\"1\":{\"27\":1}}],[\"版本号增加一个超链接\",{\"1\":{\"76\":1}}],[\"版本号\",{\"1\":{\"76\":1}}],[\"版本之后\",{\"1\":{\"30\":1}}],[\"版本\",{\"1\":{\"27\":1}}],[\"来表明该提交解决了某个\",{\"1\":{\"97\":1}}],[\"来定义命名空间\",{\"1\":{\"72\":2}}],[\"来保证字段无法被重新定义和覆盖\",{\"1\":{\"72\":1}}],[\"来代替\",{\"1\":{\"60\":1}}],[\"来迭代数组\",{\"1\":{\"57\":1}}],[\"来进行对象的浅拷贝\",{\"1\":{\"56\":1}}],[\"来兼容\",{\"1\":{\"29\":1}}],[\"来声明文档的\",{\"1\":{\"27\":1}}],[\"来让代码符合\",{\"1\":{\"23\":1}}],[\"来让代码遵循\",{\"1\":{\"23\":1}}],[\"你需要手动安装\",{\"1\":{\"157\":1}}],[\"你需要同时安装\",{\"1\":{\"109\":1}}],[\"你需要将它们合成一条语句\",{\"1\":{\"59\":1}}],[\"你\",{\"1\":{\"81\":1}}],[\"你应该为它负责\",{\"1\":{\"63\":1}}],[\"你可以暂时在这里将其关闭\",{\"1\":{\"161\":1}}],[\"你可以通过版本控制系统找回被删除的代码\",{\"1\":{\"63\":1}}],[\"你可能在定义全局变量时无意对它们进行了重新赋值\",{\"1\":{\"62\":1}}],[\"你可能不再需要使用\",{\"1\":{\"57\":1}}],[\"你可选择自己倾向的风格\",{\"1\":{\"21\":1}}],[\"你不需要总去把最后的\",{\"1\":{\"52\":1}}],[\"你只需要使用\",{\"1\":{\"23\":1}}],[\"也无法直接将\",{\"1\":{\"74\":1}}],[\"也有助于语法高亮和一些\",{\"1\":{\"56\":1}}],[\"也会导致内层作用域无法读取外层作用域的同名变量\",{\"1\":{\"52\":1}}],[\"也会给维护者造成困扰\",{\"1\":{\"52\":1}}],[\"也会使\",{\"1\":{\"45\":1}}],[\"也更易于进行单步调试\",{\"1\":{\"52\":1}}],[\"也可称作类型转换\",{\"1\":{\"72\":1}}],[\"也可能因为自动添加分号机制导致一些错误\",{\"1\":{\"60\":1}}],[\"也可能引起问题\",{\"1\":{\"23\":1}}],[\"也可以选择始终不省略参数的小括号\",{\"1\":{\"57\":1}}],[\"也可以选择始终不省略大括号\",{\"1\":{\"57\":1}}],[\"也可以减少为了使用属性而创建的临时引用\",{\"1\":{\"56\":1}}],[\"也可以在\",{\"1\":{\"37\":1}}],[\"也应该写成多行\",{\"1\":{\"19\":1}}],[\"尤其是在嵌套选择器中\",{\"1\":{\"23\":1}}],[\"双斜杠注释会被删除\",{\"1\":{\"23\":1}}],[\"多版本分支命名\",{\"0\":{\"102\":1}}],[\"多条\",{\"1\":{\"59\":1}}],[\"多个属性时\",{\"1\":{\"56\":1}}],[\"多行代码块必须用大括号包裹\",{\"1\":{\"46\":1}}],[\"多行注释使用\",{\"1\":{\"63\":1}}],[\"多行注释\",{\"1\":{\"23\":4,\"34\":3}}],[\"多团队协作的时候\",{\"1\":{\"23\":1}}],[\"后来慢慢成为默认遵守的规范\",{\"1\":{\"91\":1}}],[\"后者容易与\",{\"1\":{\"72\":1}}],[\"后却一直没找到时间处理\",{\"1\":{\"63\":1}}],[\"后使用\",{\"1\":{\"58\":1}}],[\"后面加上\",{\"1\":{\"160\":1}}],[\"后面存在\",{\"1\":{\"47\":1}}],[\"后面是否换行有两种情况\",{\"1\":{\"47\":1}}],[\"后面换行\",{\"1\":{\"47\":1}}],[\"后\",{\"1\":{\"23\":2,\"64\":1}}],[\"后代选择器\",{\"1\":{\"20\":1}}],[\"编写代码的最终用户是\",{\"1\":{\"72\":1}}],[\"编译阶段\",{\"1\":{\"72\":1}}],[\"编译器在编译阶段的错误\",{\"1\":{\"72\":1}}],[\"编译后会输出多段重复的代码\",{\"1\":{\"23\":1}}],[\"编译为\",{\"1\":{\"23\":2}}],[\"编码规约主要包含编码风格\",{\"1\":{\"41\":1}}],[\"编码规范一脉相承\",{\"1\":{\"71\":1}}],[\"编码规范\",{\"0\":{\"17\":1,\"25\":1,\"41\":1,\"66\":1,\"71\":1},\"1\":{\"3\":4,\"6\":4}}],[\"编码\",{\"0\":{\"32\":1}}],[\"编码风格\",{\"0\":{\"19\":1,\"42\":1,\"67\":1,\"72\":1}}],[\"难以复用\",{\"1\":{\"23\":1}}],[\"层\",{\"1\":{\"23\":1}}],[\"嵌套的三元表达式会降低代码可读性\",{\"1\":{\"60\":1}}],[\"嵌套的子级选择器\",{\"1\":{\"23\":1}}],[\"嵌套选择器的深度不要超过\",{\"1\":{\"23\":1}}],[\"声明文件\",{\"1\":{\"72\":1}}],[\"声明文档的编码方式\",{\"1\":{\"29\":1}}],[\"声明的值都用\",{\"1\":{\"64\":1}}],[\"声明的变量必须被使用\",{\"1\":{\"52\":1}}],[\"声明不会有任何好处\",{\"1\":{\"53\":1}}],[\"声明而未使用的变量\",{\"1\":{\"52\":1}}],[\"声明后发生重新赋值\",{\"1\":{\"52\":1}}],[\"声明后未发生重新赋值\",{\"1\":{\"52\":1}}],[\"声明变量时\",{\"1\":{\"52\":1}}],[\"声明变量\",{\"1\":{\"52\":1}}],[\"声明函数时\",{\"1\":{\"48\":1}}],[\"声明一个明确的字符编码\",{\"1\":{\"29\":1}}],[\"声明\",{\"1\":{\"23\":1,\"52\":1}}],[\"声明块内只有一条语句时\",{\"1\":{\"19\":1}}],[\"声明块的右大括号\",{\"1\":{\"19\":1}}],[\"子类必须使用\",{\"1\":{\"58\":1}}],[\"子类的\",{\"1\":{\"58\":1}}],[\"子级选择器的声明\",{\"1\":{\"23\":1}}],[\"子选择器\",{\"1\":{\"20\":1}}],[\"调用\",{\"1\":{\"23\":3}}],[\"标点方面遵循一般的文档格式规约\",{\"1\":{\"96\":1}}],[\"标点符号用法\",{\"1\":{\"86\":1}}],[\"标点符号\",{\"0\":{\"82\":1}}],[\"标准\",{\"1\":{\"81\":2}}],[\"标准属性声明\",{\"1\":{\"23\":1}}],[\"标签设置\",{\"1\":{\"38\":1}}],[\"标签即\",{\"1\":{\"37\":2}}],[\"标签名统一使用小写\",{\"1\":{\"35\":1}}],[\"标签的内联样式\",{\"1\":{\"30\":1}}],[\"标签引入样式文件\",{\"1\":{\"30\":1}}],[\"标签里引入\",{\"1\":{\"30\":1}}],[\"标签内引入\",{\"1\":{\"30\":1}}],[\"标签上的\",{\"1\":{\"28\":1}}],[\"标签\",{\"0\":{\"35\":1},\"1\":{\"20\":1,\"31\":1,\"37\":2}}],[\"$1\",{\"1\":{\"108\":1}}],[\"$\",{\"1\":{\"50\":2,\"54\":1,\"56\":4,\"57\":4,\"69\":1,\"72\":1,\"109\":1}}],[\"$color\",{\"1\":{\"23\":2}}],[\"$default\",{\"1\":{\"23\":2}}],[\"全角和半角\",{\"0\":{\"83\":1}}],[\"全角标点与其他字符之间不加空格\",{\"1\":{\"81\":1}}],[\"全大写字母\",{\"1\":{\"64\":1}}],[\"全部大写字母\",{\"1\":{\"64\":1}}],[\"全部安装它们会给项目增加十几个依赖\",{\"1\":{\"6\":1}}],[\"全局变量声明\",{\"1\":{\"23\":1}}],[\"间无空格\",{\"1\":{\"23\":1}}],[\"随着\",{\"1\":{\"23\":1}}],[\"随着前端技术的发展\",{\"1\":{\"1\":1}}],[\"更推荐使用如下命令生成\",{\"1\":{\"103\":1}}],[\"更方便\",{\"1\":{\"89\":1}}],[\"更新描述\",{\"1\":{\"76\":1}}],[\"更新类型\",{\"1\":{\"76\":1}}],[\"更新日期\",{\"1\":{\"76\":1}}],[\"更新日志\",{\"1\":{\"76\":3,\"77\":1}}],[\"更适合使用\",{\"1\":{\"61\":1}}],[\"更加简洁易维护\",{\"1\":{\"58\":1}}],[\"更不要给参数重新赋值\",{\"1\":{\"57\":1}}],[\"更不要什么都不用\",{\"1\":{\"52\":1}}],[\"更清晰\",{\"1\":{\"45\":1}}],[\"更严谨的叫法是\",{\"1\":{\"37\":1}}],[\"更易于维护和理解\",{\"1\":{\"35\":1}}],[\"更建议使用\",{\"1\":{\"23\":1}}],[\"更多信息可参考\",{\"1\":{\"108\":1}}],[\"更多\",{\"1\":{\"21\":1}}],[\"这里定义的规则会覆盖\",{\"1\":{\"161\":1}}],[\"这套配置将所有风格问题降级为\",{\"1\":{\"160\":1}}],[\"这种\",{\"1\":{\"103\":1}}],[\"这种复杂\",{\"1\":{\"102\":1}}],[\"这篇十年前的文章\",{\"1\":{\"100\":1}}],[\"这两者的区别与联系同在\",{\"1\":{\"74\":1}}],[\"这可以更清晰地表达代码意图\",{\"1\":{\"60\":1}}],[\"这可能让人感觉你的程序出错了\",{\"1\":{\"62\":1}}],[\"这可能造成不小的隐患\",{\"1\":{\"60\":1}}],[\"这可能导致意外的行为和内核优化问题\",{\"1\":{\"57\":1}}],[\"这可能导致作为入参的原变量发生变化\",{\"1\":{\"57\":1}}],[\"这可能导致风格的不统一\",{\"1\":{\"57\":1}}],[\"这有利于代码的可维护性\",{\"1\":{\"59\":1}}],[\"这有助于读屏\",{\"1\":{\"28\":1}}],[\"这时我们需要使用相应的特殊标记注释来告知未来的自己或合作者\",{\"1\":{\"63\":1}}],[\"这时要么是程序出现了错误\",{\"1\":{\"61\":1}}],[\"这时你需要考虑是否函数做了太多的事情\",{\"1\":{\"57\":1}}],[\"这时如果使用\",{\"1\":{\"23\":1}}],[\"这会导致死循环的出现\",{\"1\":{\"61\":1}}],[\"这会覆盖掉函数作用域中的\",{\"1\":{\"57\":1}}],[\"这会影响代码的可读性与可维护性\",{\"1\":{\"57\":1}}],[\"这会使阅读者感到困惑\",{\"1\":{\"47\":1}}],[\"这些方法可能会被对象上的属性覆盖\",{\"1\":{\"56\":1}}],[\"这些处理器语言是在一定历史条件下的产物\",{\"1\":{\"23\":1}}],[\"这个章节主要介绍原始类型相关的规约\",{\"1\":{\"53\":1}}],[\"这将产生全局变量\",{\"1\":{\"52\":1}}],[\"这一行并不在\",{\"1\":{\"46\":1}}],[\"这既有助于可访问性\",{\"1\":{\"37\":1}}],[\"这与\",{\"1\":{\"35\":1}}],[\"这样会阻塞\",{\"1\":{\"67\":1}}],[\"这样会导致浏览器处理\",{\"1\":{\"22\":1}}],[\"这样的开源项目\",{\"1\":{\"91\":1}}],[\"这样的命名可能会让人误解\",{\"1\":{\"64\":1}}],[\"这样的众所周知的对象\",{\"1\":{\"62\":1}}],[\"这样的处理器语言\",{\"1\":{\"23\":1}}],[\"这样可以保证函数不能在定义前被调用\",{\"1\":{\"57\":1}}],[\"这样可以将所有属性定义在一个地方\",{\"1\":{\"56\":1}}],[\"这样可以提高代码可读性\",{\"1\":{\"56\":1}}],[\"这样可以使增删行更加容易\",{\"1\":{\"45\":1}}],[\"这样更加简洁\",{\"1\":{\"56\":1}}],[\"这样做更易于追加新的声明语句\",{\"1\":{\"52\":1}}],[\"这样声明的变量不会污染全局命名空间\",{\"1\":{\"52\":1}}],[\"而一段代码的诞生\",{\"1\":{\"96\":1}}],[\"而邮件标题本身就有长度的限制\",{\"1\":{\"91\":1}}],[\"而javascript则为网页增加可交互性\",{\"1\":{\"81\":1}}],[\"而导致错误\",{\"1\":{\"61\":1}}],[\"而在新版本的\",{\"1\":{\"60\":1}}],[\"而有意使用\",{\"1\":{\"60\":1}}],[\"而非其他非标准的模块系统\",{\"1\":{\"59\":1}}],[\"而且在返回类型中不应再与其他类型做联合或交叉\",{\"1\":{\"72\":1}}],[\"而且语法更简洁\",{\"1\":{\"57\":1}}],[\"而且社区繁荣\",{\"1\":{\"23\":1}}],[\"而不是三方库如\",{\"1\":{\"69\":1}}],[\"而不是本文件内\",{\"1\":{\"64\":1}}],[\"而不是多行的\",{\"1\":{\"63\":1}}],[\"而不是依赖于\",{\"1\":{\"60\":1}}],[\"而不是其他非标准的模块系统\",{\"1\":{\"59\":1}}],[\"而不是使用\",{\"1\":{\"58\":1}}],[\"而不是去修改参数\",{\"1\":{\"57\":1}}],[\"而不是\",{\"1\":{\"55\":1,\"72\":1}}],[\"而不是统一在块开始处进行声明\",{\"1\":{\"52\":2}}],[\"而不是换行后的值\",{\"1\":{\"44\":1}}],[\"而不是原生元素标签\",{\"1\":{\"20\":1}}],[\"而加载顺序发生了变化\",{\"1\":{\"23\":1}}],[\"而\",{\"1\":{\"23\":1,\"57\":1,\"81\":1}}],[\"而言\",{\"1\":{\"23\":1}}],[\"<button\",{\"1\":{\"98\":2}}],[\"<body>\",{\"1\":{\"30\":2,\"33\":1,\"39\":1}}],[\"<body><\",{\"1\":{\"30\":1}}],[\"<user3\",{\"1\":{\"96\":1}}],[\"<user2\",{\"1\":{\"96\":1}}],[\"<user1\",{\"1\":{\"96\":1}}],[\"<ul\",{\"1\":{\"37\":1}}],[\"<desc>\",{\"1\":{\"76\":4}}],[\"<date>\",{\"1\":{\"76\":1}}],[\"<div\",{\"1\":{\"37\":4,\"39\":1}}],[\"<version\",{\"1\":{\"76\":1}}],[\"<version>\",{\"1\":{\"76\":1}}],[\"<reference\",{\"1\":{\"72\":1}}],[\"<rule\",{\"1\":{\"72\":1}}],[\"<const>\",{\"1\":{\"72\":1}}],[\"<type>\",{\"1\":{\"72\":1,\"76\":2,\"90\":1}}],[\"<title>印客学院<\",{\"1\":{\"31\":1,\"33\":1,\"39\":1}}],[\"<li\",{\"1\":{\"37\":3}}],[\"<link\",{\"1\":{\"22\":1,\"30\":8,\"36\":2,\"39\":1}}],[\"<link>\",{\"1\":{\"22\":1}}],[\"<author\",{\"1\":{\"96\":1}}],[\"<a\",{\"1\":{\"36\":2}}],[\"<option\",{\"1\":{\"36\":2}}],[\"<input\",{\"1\":{\"36\":4}}],[\"<img\",{\"1\":{\"33\":1,\"35\":2,\"38\":4,\"117\":1}}],[\"<subject>\",{\"1\":{\"90\":1}}],[\"<string>\",{\"1\":{\"72\":2}}],[\"<style\",{\"1\":{\"30\":1}}],[\"<style>\",{\"1\":{\"22\":1,\"30\":4}}],[\"<select>\",{\"1\":{\"36\":2}}],[\"<script\",{\"1\":{\"30\":5,\"39\":1}}],[\"<h1>hello\",{\"1\":{\"35\":2}}],[\"<h1\",{\"1\":{\"33\":1}}],[\"<head><\",{\"1\":{\"30\":1}}],[\"<head>\",{\"1\":{\"29\":1,\"30\":2,\"31\":1,\"33\":1,\"39\":1}}],[\"<html>\",{\"1\":{\"30\":2,\"33\":1}}],[\"<html><\",{\"1\":{\"27\":2}}],[\"<html\",{\"1\":{\"28\":1,\"39\":1}}],[\"<meta\",{\"1\":{\"29\":3,\"31\":1,\"35\":2,\"39\":4}}],[\"<\",{\"1\":{\"22\":3,\"27\":5,\"28\":2,\"29\":1,\"30\":16,\"31\":1,\"33\":5,\"34\":2,\"35\":6,\"36\":8,\"37\":4,\"38\":4,\"39\":4,\"55\":1,\"57\":1,\"60\":2,\"61\":3,\"72\":1,\"75\":4,\"76\":10,\"81\":12,\"82\":8,\"83\":9,\"84\":2}}],[\"与此同时还可以根据标签名称来大致了解当前项目的兼容性和迭代情况\",{\"1\":{\"103\":1}}],[\"与分支内容相关的\",{\"1\":{\"101\":1}}],[\"与数字比较\",{\"1\":{\"60\":1}}],[\"与\",{\"1\":{\"22\":1,\"23\":1,\"57\":1,\"76\":1}}],[\"第三方框架和库\",{\"1\":{\"82\":2}}],[\"第三方模块\",{\"1\":{\"59\":1}}],[\"第三组\",{\"1\":{\"21\":1}}],[\"第二个参数是转换基数\",{\"1\":{\"53\":1}}],[\"第二组\",{\"1\":{\"21\":1}}],[\"第七组\",{\"1\":{\"21\":1}}],[\"第六组\",{\"1\":{\"21\":1}}],[\"第五组\",{\"1\":{\"21\":1}}],[\"第四组\",{\"1\":{\"21\":1}}],[\"第一组\",{\"1\":{\"21\":1}}],[\"排版\",{\"1\":{\"21\":1}}],[\"排在\",{\"1\":{\"21\":1}}],[\"os\",{\"1\":{\"85\":1}}],[\"oss\",{\"1\":{\"68\":1}}],[\"ok\",{\"1\":{\"72\":1}}],[\"owned\",{\"1\":{\"69\":1}}],[\"oops\",{\"1\":{\"62\":2}}],[\"off\",{\"1\":{\"96\":2}}],[\"of\",{\"1\":{\"55\":1,\"57\":2,\"72\":3}}],[\"othermember\",{\"1\":{\"72\":2}}],[\"othername\",{\"1\":{\"52\":2}}],[\"othercondition\",{\"1\":{\"47\":2}}],[\"only\",{\"1\":{\"72\":1}}],[\"on\",{\"1\":{\"63\":4,\"101\":1}}],[\"one\",{\"1\":{\"52\":1,\"56\":2,\"72\":2}}],[\"once\",{\"1\":{\"45\":2}}],[\"objnull\",{\"1\":{\"56\":3}}],[\"obj\",{\"1\":{\"49\":4,\"52\":4,\"56\":16,\"57\":5,\"62\":4}}],[\"object\",{\"1\":{\"21\":1,\"53\":6,\"56\":11,\"57\":6,\"61\":1,\"62\":2,\"64\":3,\"72\":1}}],[\"overload\",{\"1\":{\"72\":1}}],[\"overridesdeclaration\",{\"1\":{\"21\":1}}],[\"overflow\",{\"1\":{\"21\":2}}],[\"or\",{\"1\":{\"59\":1}}],[\"originalobj\",{\"1\":{\"57\":3}}],[\"original\",{\"1\":{\"56\":9}}],[\"orientation\",{\"1\":{\"21\":1}}],[\"org\",{\"1\":{\"27\":1,\"81\":2}}],[\"orphans\",{\"1\":{\"21\":1}}],[\"ordering\",{\"1\":{\"72\":1}}],[\"order\",{\"1\":{\"21\":2,\"59\":1,\"67\":1,\"101\":1}}],[\"outline\",{\"1\":{\"21\":1}}],[\"opera\",{\"1\":{\"85\":1}}],[\"operands\",{\"1\":{\"72\":1}}],[\"operators\",{\"1\":{\"60\":1}}],[\"opening\",{\"1\":{\"19\":1}}],[\"opskey\",{\"1\":{\"48\":1}}],[\"optional\",{\"1\":{\"72\":3,\"90\":3}}],[\"option>\",{\"1\":{\"36\":2}}],[\"options\",{\"1\":{\"16\":2,\"57\":2,\"63\":1,\"64\":4}}],[\"opacity\",{\"1\":{\"21\":4}}],[\"位置和尺寸\",{\"1\":{\"21\":1}}],[\"其中\",{\"1\":{\"90\":1}}],[\"其中编码风格\",{\"1\":{\"66\":1}}],[\"其余情况都不要省略小括号\",{\"1\":{\"57\":1}}],[\"其他开发过程中的分支命名参考上节\",{\"1\":{\"102\":1}}],[\"其他复杂类型\",{\"1\":{\"72\":1}}],[\"其他情况则使用\",{\"1\":{\"53\":1}}],[\"其他都在靠近\",{\"1\":{\"30\":1}}],[\"其他\",{\"0\":{\"22\":1,\"62\":1},\"1\":{\"21\":1}}],[\"其他属性声明的顺序与\",{\"1\":{\"23\":1}}],[\"其他属性都只在元素内部起作用\",{\"1\":{\"21\":1}}],[\"其他属性\",{\"1\":{\"21\":1}}],[\"其灵活多变的语法极大的提高了前端开发效率\",{\"1\":{\"1\":1}}],[\"盒模型\",{\"1\":{\"21\":6}}],[\"zepto\",{\"1\":{\"85\":1}}],[\"zero\",{\"1\":{\"21\":2}}],[\"zh\",{\"1\":{\"28\":1,\"39\":1,\"81\":2}}],[\"zoom\",{\"1\":{\"21\":1}}],[\"z\",{\"1\":{\"21\":3,\"72\":1}}],[\"相对路径\",{\"1\":{\"59\":1}}],[\"相当于是项目仓库元信息的一部分\",{\"1\":{\"75\":1}}],[\"相当于\",{\"1\":{\"52\":1,\"53\":1}}],[\"相一致\",{\"1\":{\"35\":1}}],[\"相关联\",{\"1\":{\"76\":1}}],[\"相关联的属性声明最好写成一组\",{\"1\":{\"21\":1}}],[\"相关敏感信息\",{\"1\":{\"34\":1}}],[\"相比于使用例如\",{\"1\":{\"103\":1}}],[\"相比之前为参数赋默认值的方法更加简洁\",{\"1\":{\"57\":1}}],[\"相比可以更清晰地聚合函数的剩余参数\",{\"1\":{\"57\":1}}],[\"相比\",{\"1\":{\"22\":1,\"23\":1}}],[\"相邻兄弟选择器\",{\"1\":{\"20\":1}}],[\"压缩工具会在压缩时帮我们去掉\",{\"1\":{\"21\":1}}],[\"因地制宜\",{\"1\":{\"92\":1}}],[\"因为一个提交的元信息中只有作者\",{\"1\":{\"96\":1}}],[\"因为主题\",{\"1\":{\"96\":1}}],[\"因为项目的开发者和参与者可能来自世界各地\",{\"1\":{\"92\":1}}],[\"因为在绝大情况下\",{\"1\":{\"76\":1,\"96\":1}}],[\"因为其他协作者或是交接方能更直观地看到业务逻辑的演变\",{\"1\":{\"74\":1}}],[\"因为\\b大多数人熟知它们的优先级\",{\"1\":{\"60\":1}}],[\"因为数组解构需要考虑返回值的位置\",{\"1\":{\"55\":1}}],[\"因为\",{\"1\":{\"23\":1,\"30\":1,\"72\":1,\"74\":1}}],[\"因为当今很多\",{\"1\":{\"21\":1}}],[\"因此手写\",{\"1\":{\"74\":1}}],[\"因此其编码规约和配套\",{\"1\":{\"71\":1}}],[\"因此最好的做法是不要定义全局变量\",{\"1\":{\"62\":1}}],[\"因此保险的做法是对\",{\"1\":{\"61\":1}}],[\"因此建议总是给出\",{\"1\":{\"61\":1}}],[\"因此出于程序可读性的考虑\",{\"1\":{\"60\":1}}],[\"因此使用\",{\"1\":{\"60\":1}}],[\"因此es6\",{\"1\":{\"59\":1}}],[\"因此需要规范其编码风格\",{\"1\":{\"57\":1}}],[\"因此函数可以在声明语句前就被调用\",{\"1\":{\"57\":1}}],[\"因此在块外也能使用函数\",{\"1\":{\"57\":1}}],[\"因此尽量不要滥用它们\",{\"1\":{\"54\":1}}],[\"因此我们约定\",{\"1\":{\"64\":1}}],[\"因此我们推荐使用\",{\"1\":{\"60\":1}}],[\"因此我们可以把声明写在更合理的地方\",{\"1\":{\"52\":1}}],[\"因此我们应该避免使用\",{\"1\":{\"22\":1}}],[\"因此多数情况下应用\",{\"1\":{\"52\":1}}],[\"因此不必担心在旧浏览器中的问题\",{\"1\":{\"45\":1}}],[\"因此大多数情况下\",{\"1\":{\"23\":1}}],[\"因此放在后面\",{\"1\":{\"21\":1}}],[\"因此\",{\"1\":{\"1\":1,\"30\":1,\"53\":1,\"57\":1,\"60\":1}}],[\"因此编写符合团队编码规范的代码是至关重要的\",{\"1\":{\"1\":1}}],[\"业界存在争议\",{\"1\":{\"21\":1}}],[\"小括号内部两侧无空格\",{\"1\":{\"48\":1}}],[\"小数点前的\",{\"1\":{\"21\":1}}],[\"小于\",{\"1\":{\"21\":1}}],[\"小写字母更容易分辨\",{\"1\":{\"21\":1}}],[\"保持一致\",{\"1\":{\"101\":1}}],[\"保证即使结束某个应用实例也不会影响数据和服务\",{\"1\":{\"69\":1}}],[\"保留英文句子内部的英文标点符号\",{\"1\":{\"82\":1}}],[\"保留\",{\"1\":{\"21\":1}}],[\"保留小数点前的\",{\"1\":{\"21\":1}}],[\"保障项目的编码规范和代码质量\",{\"1\":{\"5\":1}}],[\"省略号是\",{\"1\":{\"82\":4}}],[\"省略协议部分\",{\"1\":{\"30\":1}}],[\"省略\",{\"1\":{\"21\":1}}],[\"省略长度单位可以使代码更简洁\",{\"1\":{\"21\":1}}],[\"省略掉长度单位\",{\"1\":{\"21\":1}}],[\"长度相当于两个汉字的长度\",{\"1\":{\"82\":1}}],[\"长度单位包括\",{\"1\":{\"21\":1}}],[\"长度值为\",{\"1\":{\"21\":2}}],[\"它是\",{\"1\":{\"71\":1}}],[\"它通常在程序调试阶段使用\",{\"1\":{\"62\":1}}],[\"它可以让书写和阅读更简洁\",{\"1\":{\"57\":1}}],[\"它的好处同输出文件到终端一样\",{\"1\":{\"49\":1}}],[\"它的单位是可选的\",{\"1\":{\"21\":1}}],[\"它在个别情况下的行为比较怪异\",{\"1\":{\"44\":1}}],[\"它不够直观且具有潜在风险\",{\"1\":{\"23\":1}}],[\"它类似于\",{\"1\":{\"23\":1}}],[\"它们包括\",{\"1\":{\"3\":1,\"6\":1}}],[\"中继承本包\",{\"1\":{\"164\":1,\"167\":1}}],[\"中禁止使用纯文本值\",{\"1\":{\"123\":1}}],[\"中集成本包\",{\"1\":{\"107\":1}}],[\"中提到的组件插入顺序\",{\"1\":{\"101\":1}}],[\"中一般不会指出文档\",{\"1\":{\"94\":1}}],[\"中文排版需求\",{\"1\":{\"86\":1}}],[\"中文文案排版指北\",{\"1\":{\"86\":1}}],[\"中文句子括号未使用全角\",{\"1\":{\"83\":1}}],[\"中文句子内夹用并列的英文单词时使未使用顿号分隔\",{\"1\":{\"83\":1}}],[\"中文句子内夹用英文句子时\",{\"1\":{\"82\":1}}],[\"中文句子冒号未使用全角\",{\"1\":{\"83\":1}}],[\"中文标点符号使用全角\",{\"1\":{\"83\":1}}],[\"中文破折号的形式为\",{\"1\":{\"82\":1}}],[\"中文内部的省略使用中文省略号\",{\"1\":{\"82\":1}}],[\"中文输入法下\",{\"1\":{\"82\":1}}],[\"中文省略号的形式为\",{\"1\":{\"82\":1}}],[\"中英文与数字之间需要增加空格\",{\"1\":{\"81\":1}}],[\"中英文之间需要增加空格\",{\"1\":{\"81\":1}}],[\"中描述的内容需要更加精炼和归纳\",{\"1\":{\"74\":1}}],[\"中获取的用户标识进行敏感信息查询输出\",{\"1\":{\"68\":1}}],[\"中不能使用\",{\"1\":{\"58\":1}}],[\"中必须使用\",{\"1\":{\"58\":1}}],[\"中引入的\",{\"1\":{\"72\":1}}],[\"中引入的用于声明类的语法糖\",{\"1\":{\"58\":1}}],[\"中引入了默认参数语法\",{\"1\":{\"57\":1}}],[\"中没有\",{\"1\":{\"57\":1}}],[\"中自闭合标签必须保留结尾的斜线\",{\"1\":{\"35\":1}}],[\"中指出结尾的斜线是可选的\",{\"1\":{\"35\":1}}],[\"中指定外部样式表和嵌入式样式块可能会导致页面的重排和重绘\",{\"1\":{\"30\":1}}],[\"中可以在\",{\"1\":{\"30\":1}}],[\"中使用太过宽泛的版本指定方式\",{\"1\":{\"114\":1}}],[\"中使用\",{\"1\":{\"29\":1,\"30\":2}}],[\"中定义\",{\"1\":{\"28\":1}}],[\"中的\",{\"1\":{\"23\":1,\"76\":1,\"144\":1}}],[\"中\",{\"1\":{\"21\":2,\"52\":4,\"57\":1,\"60\":2,\"68\":1,\"92\":1}}],[\"时触发\",{\"1\":{\"108\":1}}],[\"时引用\",{\"1\":{\"77\":1}}],[\"时态方面使用一般现在时\",{\"1\":{\"76\":1,\"96\":2}}],[\"时直接\",{\"1\":{\"59\":1}}],[\"时可能会错误地被赋予默认值\",{\"1\":{\"57\":1}}],[\"时通常不需要指明\",{\"1\":{\"30\":1}}],[\"时无需指定\",{\"1\":{\"30\":1}}],[\"时\",{\"1\":{\"21\":2,\"59\":1,\"76\":1,\"96\":1,\"118\":1}}],[\"时会运行\",{\"1\":{\"10\":1}}],[\"十六进制值统一使用小写字母\",{\"1\":{\"21\":1}}],[\"伪元素\",{\"1\":{\"20\":1}}],[\"伪类\",{\"1\":{\"20\":1}}],[\"通常用于代码评审过程记录\",{\"1\":{\"96\":1}}],[\"通配符选择器\",{\"1\":{\"20\":1}}],[\"通过变量赋值为\",{\"1\":{\"72\":1}}],[\"通过结合gitpre\",{\"1\":{\"2\":1}}],[\"通过本套课程\",{\"1\":{\"2\":1}}],[\"uris\",{\"1\":{\"85\":1}}],[\"uri\",{\"1\":{\"85\":1}}],[\"urls\",{\"1\":{\"85\":1}}],[\"urlsearchparams\",{\"1\":{\"67\":3}}],[\"url>\",{\"1\":{\"76\":1}}],[\"url\",{\"1\":{\"19\":1,\"22\":1,\"50\":2,\"67\":5,\"68\":2,\"76\":4,\"85\":1}}],[\"ubuntu\",{\"1\":{\"85\":1}}],[\"uc\",{\"1\":{\"85\":1}}],[\"ui\",{\"1\":{\"85\":2}}],[\"uid\",{\"1\":{\"69\":1}}],[\"udp\",{\"1\":{\"81\":2}}],[\"u\",{\"1\":{\"67\":8}}],[\"upload\",{\"1\":{\"77\":1}}],[\"uppercases\",{\"1\":{\"64\":1}}],[\"uppercased\",{\"1\":{\"64\":1}}],[\"uppercase\",{\"1\":{\"64\":7}}],[\"upon\",{\"1\":{\"45\":2}}],[\"util\",{\"1\":{\"67\":2,\"69\":4}}],[\"utils\",{\"1\":{\"62\":2,\"95\":1}}],[\"utf8\",{\"1\":{\"67\":2}}],[\"utf\",{\"1\":{\"29\":4,\"31\":1,\"39\":1,\"67\":3}}],[\"used\",{\"1\":{\"72\":1}}],[\"useless\",{\"1\":{\"54\":1,\"58\":1}}],[\"use\",{\"1\":{\"52\":1,\"63\":1,\"64\":1}}],[\"user3\",{\"1\":{\"96\":1}}],[\"user2\",{\"1\":{\"96\":1}}],[\"user1\",{\"1\":{\"96\":1}}],[\"user\",{\"1\":{\"21\":1,\"23\":1,\"56\":5,\"64\":4}}],[\"unmount\",{\"1\":{\"101\":1}}],[\"unknown\",{\"1\":{\"72\":1}}],[\"unreachable\",{\"1\":{\"72\":1}}],[\"underscore\",{\"1\":{\"64\":1}}],[\"undefined\",{\"1\":{\"52\":1,\"53\":1,\"55\":1,\"57\":2,\"60\":3,\"61\":1,\"62\":2,\"67\":1,\"72\":3}}],[\"undef\",{\"1\":{\"52\":1,\"161\":1}}],[\"unnecessarily\",{\"1\":{\"64\":2}}],[\"unneeded\",{\"1\":{\"60\":1}}],[\"unexpected\",{\"1\":{\"57\":1}}],[\"unused\",{\"1\":{\"52\":1}}],[\"uncaught\",{\"1\":{\"44\":2,\"52\":3,\"55\":1,\"56\":1,\"57\":2}}],[\"unified\",{\"1\":{\"72\":1}}],[\"union\",{\"1\":{\"72\":2}}],[\"uniquenodes\",{\"1\":{\"55\":1}}],[\"unix\",{\"1\":{\"49\":1}}],[\"unicode\",{\"1\":{\"21\":1}}],[\"unit\",{\"1\":{\"21\":1}}],[\"ul>\",{\"1\":{\"37\":1}}],[\"ul\",{\"1\":{\"20\":2}}],[\"类的静态方法\",{\"1\":{\"72\":1}}],[\"类的成员应按照固定的先后顺序排列\",{\"1\":{\"72\":1}}],[\"类上所有返回\",{\"1\":{\"72\":1}}],[\"类\",{\"0\":{\"58\":1},\"1\":{\"63\":1}}],[\"类选择器\",{\"1\":{\"20\":1}}],[\"类型声明周围添加合适的间距可以有效的提升代码可读性\",{\"1\":{\"72\":1}}],[\"类型声明时应正确添加空格间距\",{\"1\":{\"72\":1}}],[\"类型无法与除了\",{\"1\":{\"72\":1}}],[\"类型代表\",{\"1\":{\"72\":1}}],[\"类型中使用一致的成员分隔符\",{\"1\":{\"72\":1}}],[\"类型系统的人为干预\",{\"1\":{\"72\":1}}],[\"类型断言\",{\"1\":{\"72\":1}}],[\"类型断言必须使用\",{\"1\":{\"72\":1}}],[\"类型转换\",{\"1\":{\"53\":1}}],[\"类型\",{\"1\":{\"14\":1,\"16\":1,\"53\":2,\"72\":2}}],[\"比如指定为\",{\"1\":{\"161\":1}}],[\"比如以下格式都满足规范\",{\"1\":{\"101\":1}}],[\"比如在\",{\"1\":{\"94\":1}}],[\"比如使用移动设备的人群或低速网络的人群\",{\"1\":{\"38\":1}}],[\"比如\",{\"1\":{\"20\":9,\"23\":1}}],[\"低效率\",{\"1\":{\"20\":1}}],[\"到低\",{\"1\":{\"20\":1}}],[\"高效率\",{\"1\":{\"20\":1}}],[\"控制语句的嵌套层级不要超过\",{\"1\":{\"61\":1}}],[\"控制语句的嵌套层级不要过深\",{\"1\":{\"61\":1}}],[\"控制语句\",{\"0\":{\"61\":1},\"1\":{\"48\":1}}],[\"控制语句等由大括号\",{\"1\":{\"46\":1}}],[\"控制选择器的长度\",{\"1\":{\"20\":1}}],[\"控制台就不会出现选择器\",{\"1\":{\"14\":3}}],[\"控制台会出现选择器\",{\"1\":{\"14\":3}}],[\"减少意外输入造成的程序报错或崩溃\",{\"1\":{\"68\":1}}],[\"减少直接使用\",{\"1\":{\"57\":1}}],[\"减少在经常出现的组件中使用个别属性选择器\",{\"1\":{\"20\":1}}],[\"减少遗留系统维护的负担\",{\"1\":{\"1\":1}}],[\"应避免\",{\"1\":{\"72\":1}}],[\"应避免使用\",{\"1\":{\"23\":1}}],[\"应用\",{\"1\":{\"81\":1}}],[\"应用不合适做\",{\"1\":{\"69\":1}}],[\"应用不应该有状态\",{\"1\":{\"69\":1}}],[\"应用去托管前端静态文件\",{\"1\":{\"69\":1}}],[\"应用广泛的框架多有公开的漏洞\",{\"1\":{\"68\":1}}],[\"应用的进程\",{\"1\":{\"67\":1}}],[\"应用于构建一个新数组\",{\"1\":{\"55\":1}}],[\"应被即时删除\",{\"1\":{\"63\":1}}],[\"应该选择内部人员普遍能够熟练表达的语言\",{\"1\":{\"92\":1}}],[\"应该把前端静态文件放到\",{\"1\":{\"69\":1}}],[\"应该去掉代码里所有的\",{\"1\":{\"62\":1}}],[\"应该先将其进行类型转换\",{\"1\":{\"60\":1}}],[\"应该显性地将其转换成相同类型再进行严格比较\",{\"1\":{\"60\":1}}],[\"应该给函数表达式起一个不同于被赋值变量名的名字\",{\"1\":{\"57\":1}}],[\"应将它们删除\",{\"1\":{\"52\":1}}],[\"应使用箭头函数保留函数作用域\",{\"1\":{\"72\":1}}],[\"应使用对象解构而不是数组解构\",{\"1\":{\"55\":1}}],[\"应使用\",{\"1\":{\"52\":1}}],[\"应优先使用\",{\"1\":{\"52\":1,\"57\":1}}],[\"应与\",{\"1\":{\"47\":1}}],[\"应在\",{\"1\":{\"30\":1}}],[\"应注意以下性能问题\",{\"1\":{\"20\":1}}],[\"应单独成行\",{\"1\":{\"19\":1}}],[\"覆盖样式的恶性循环\",{\"1\":{\"20\":1}}],[\"继续使用\",{\"1\":{\"98\":1}}],[\"继而引发使用\",{\"1\":{\"20\":1}}],[\"继承一组规则集\",{\"1\":{\"161\":1}}],[\"继承了\",{\"1\":{\"145\":1,\"149\":1,\"153\":1}}],[\"继承了默认配置和\",{\"1\":{\"137\":1}}],[\"继承了默认配置\",{\"1\":{\"129\":1,\"133\":1,\"141\":1}}],[\"继承\",{\"1\":{\"10\":3}}],[\"使其返回\",{\"1\":{\"69\":1}}],[\"使得后续很难进行样式覆盖\",{\"1\":{\"20\":1}}],[\"使用时\",{\"1\":{\"106\":1}}],[\"使用如下格式\",{\"1\":{\"97\":1}}],[\"使用现在时的时态更简洁明确\",{\"1\":{\"96\":1}}],[\"使用英文可以更广泛的传递信息\",{\"1\":{\"92\":1}}],[\"使用完整的句子\",{\"1\":{\"76\":1}}],[\"使用大写来表明本文件的重要性\",{\"1\":{\"75\":1}}],[\"使用大驼峰\",{\"1\":{\"64\":2}}],[\"使用属性去定义接口中的方法\",{\"1\":{\"72\":1}}],[\"使用外部数据存储\",{\"1\":{\"69\":1}}],[\"使用原生\",{\"1\":{\"67\":1}}],[\"使用模块内支持的\",{\"1\":{\"67\":1}}],[\"使用模板字符串替代字符串拼接\",{\"1\":{\"54\":1}}],[\"使用小驼峰\",{\"1\":{\"64\":2}}],[\"使用小写字母命名\",{\"1\":{\"64\":1}}],[\"使用自定义的\",{\"1\":{\"62\":1}}],[\"使用严格相等运算符\",{\"1\":{\"60\":1}}],[\"使用默认参数语法\",{\"1\":{\"57\":2}}],[\"使用剩余参数操作符\",{\"1\":{\"57\":1}}],[\"使用箭头函数代替匿名函数\",{\"1\":{\"57\":1}}],[\"使用函数表达式替代函数声明\",{\"1\":{\"57\":1}}],[\"使用解构让代码更简洁\",{\"1\":{\"56\":1}}],[\"使用解构获取对象属性\",{\"1\":{\"56\":1}}],[\"使用解构获取数组元素\",{\"1\":{\"55\":1}}],[\"使用对象属性和方法的简写语法\",{\"1\":{\"56\":1}}],[\"使用字面量创建对象\",{\"1\":{\"56\":1}}],[\"使用字面量创建数组\",{\"1\":{\"55\":1}}],[\"使用扩展运算符\",{\"1\":{\"55\":1,\"56\":1}}],[\"使用扩展运算符的元素后面不能加逗号\",{\"1\":{\"45\":1}}],[\"使用正确\",{\"1\":{\"52\":1}}],[\"使用分号\",{\"1\":{\"44\":1}}],[\"使用简写属性时\",{\"1\":{\"21\":1}}],[\"使用尽可能短的十六进制值\",{\"1\":{\"21\":1}}],[\"使用多个选择器时\",{\"1\":{\"19\":1}}],[\"使用\",{\"0\":{\"7\":1,\"9\":1,\"11\":1,\"107\":1,\"110\":1,\"112\":1,\"157\":1,\"164\":1,\"167\":1},\"1\":{\"10\":1,\"19\":2,\"20\":2,\"23\":1,\"27\":1,\"29\":1,\"30\":2,\"43\":1,\"52\":2,\"53\":5,\"55\":2,\"57\":3,\"58\":2,\"59\":3,\"61\":1,\"64\":1,\"67\":1,\"68\":1,\"69\":3,\"72\":2,\"115\":1,\"125\":2,\"133\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1,\"161\":1}}],[\"选择器从高\",{\"1\":{\"20\":1}}],[\"选择器时\",{\"1\":{\"20\":1}}],[\"选择器\",{\"0\":{\"20\":1},\"1\":{\"20\":4}}],[\"选择器和\",{\"1\":{\"19\":1}}],[\"除外\",{\"1\":{\"72\":1}}],[\"除非注释行上方是一个块的顶部\",{\"1\":{\"63\":1}}],[\"除非在\",{\"1\":{\"60\":1}}],[\"除非包含特殊字符\",{\"1\":{\"56\":1}}],[\"除非为了构造某一长度的空数组\",{\"1\":{\"55\":1}}],[\"除非可以保证代码的执行环境不受上述特性的影响\",{\"1\":{\"53\":1}}],[\"除非上一行是注释或块的顶部\",{\"1\":{\"19\":1}}],[\"除了本包\",{\"1\":{\"109\":1}}],[\"除了像\",{\"1\":{\"62\":1}}],[\"除了一元运算符\",{\"1\":{\"48\":1}}],[\"除了基础库等必须要在\",{\"1\":{\"30\":1}}],[\"除了\",{\"1\":{\"21\":1,\"23\":1}}],[\"除了以下两种情况\",{\"1\":{\"19\":1,\"50\":1}}],[\"参照\",{\"1\":{\"115\":1}}],[\"参与的人往往不止于此\",{\"1\":{\"96\":1}}],[\"参考资料\",{\"0\":{\"24\":1,\"40\":1,\"65\":1,\"70\":1,\"78\":1,\"86\":1,\"104\":1}}],[\"参考\",{\"1\":{\"19\":3,\"20\":3,\"21\":3,\"37\":1,\"38\":1,\"47\":1,\"49\":1,\"50\":2,\"52\":2,\"56\":2,\"57\":4,\"59\":4,\"61\":4,\"63\":3,\"64\":5}}],[\"参数始终加上小括号\",{\"1\":{\"57\":1}}],[\"参数\",{\"1\":{\"14\":1,\"16\":1,\"72\":1}}],[\"参数如下\",{\"1\":{\"14\":1}}],[\"参数以开启严格模式\",{\"1\":{\"10\":1}}],[\"ipad\",{\"1\":{\"85\":3}}],[\"iphone\",{\"1\":{\"29\":1,\"85\":3}}],[\"ios\",{\"1\":{\"85\":1}}],[\"ie\",{\"1\":{\"85\":2}}],[\"it\",{\"1\":{\"72\":1}}],[\"iterator\",{\"1\":{\"55\":1}}],[\"item\",{\"1\":{\"37\":6,\"55\":10,\"57\":6,\"77\":1}}],[\"ignore\",{\"1\":{\"72\":4}}],[\"i++\",{\"1\":{\"57\":1,\"61\":2}}],[\"iife\",{\"1\":{\"57\":4}}],[\"issues\",{\"1\":{\"97\":1}}],[\"issue\",{\"1\":{\"76\":2,\"80\":1,\"97\":6,\"101\":5}}],[\"isequalsnum\",{\"1\":{\"72\":2}}],[\"isequalsbar\",{\"1\":{\"72\":2}}],[\"istruthy\",{\"1\":{\"62\":1}}],[\"isprototypeof\",{\"1\":{\"56\":1}}],[\"isactive\",{\"1\":{\"56\":2}}],[\"isn\",{\"1\":{\"53\":1}}],[\"is\",{\"1\":{\"52\":1,\"53\":1,\"54\":2,\"56\":1,\"57\":1,\"63\":4,\"64\":4,\"69\":1}}],[\"isright\",{\"1\":{\"48\":2}}],[\"isjedi\",{\"1\":{\"48\":2}}],[\"i\",{\"1\":{\"47\":1,\"54\":1,\"55\":5,\"57\":3,\"61\":7,\"96\":1,\"127\":1,\"131\":1,\"132\":1,\"135\":1,\"139\":1,\"143\":1,\"147\":1,\"148\":1,\"151\":1,\"155\":1}}],[\"if\",{\"1\":{\"46\":6,\"47\":10,\"48\":5,\"49\":4,\"52\":8,\"53\":7,\"57\":6,\"60\":4,\"61\":17,\"62\":1}}],[\"icon\",{\"1\":{\"23\":1}}],[\"imac\",{\"1\":{\"85\":1}}],[\"images\",{\"1\":{\"33\":1,\"35\":2}}],[\"image\",{\"1\":{\"19\":2,\"77\":1}}],[\"implement\",{\"1\":{\"72\":1}}],[\"impossible\",{\"1\":{\"44\":2}}],[\"imports\",{\"1\":{\"72\":1}}],[\"import\",{\"1\":{\"22\":4,\"23\":2,\"49\":3,\"59\":46,\"67\":15,\"72\":3,\"125\":1,\"126\":1,\"127\":1,\"130\":1,\"131\":1,\"134\":1,\"135\":1,\"138\":1,\"139\":1,\"142\":2,\"143\":2,\"146\":2,\"147\":2,\"150\":2,\"151\":2,\"154\":2,\"155\":2}}],[\"important\",{\"1\":{\"20\":1,\"21\":1}}],[\"img\",{\"1\":{\"38\":1}}],[\"ide\",{\"1\":{\"161\":1}}],[\"ideas\",{\"1\":{\"83\":2}}],[\"identifier\",{\"1\":{\"52\":2}}],[\"id=\",{\"1\":{\"39\":1}}],[\"id\",{\"1\":{\"20\":4,\"34\":1,\"52\":4,\"56\":2,\"60\":5,\"76\":1,\"97\":1,\"101\":3}}],[\"integrations\",{\"1\":{\"161\":1}}],[\"integrating\",{\"1\":{\"159\":1}}],[\"interface\",{\"1\":{\"72\":30,\"161\":1}}],[\"internet\",{\"1\":{\"57\":1,\"85\":1}}],[\"interpolation\",{\"1\":{\"21\":1}}],[\"info\",{\"1\":{\"111\":1}}],[\"inferrable\",{\"1\":{\"72\":1}}],[\"infix\",{\"1\":{\"48\":1}}],[\"inherits\",{\"1\":{\"58\":3}}],[\"increasedbyone\",{\"1\":{\"57\":5}}],[\"include\",{\"1\":{\"23\":3}}],[\"inner\",{\"1\":{\"57\":1}}],[\"invalid\",{\"1\":{\"72\":1}}],[\"invokes\",{\"1\":{\"53\":1}}],[\"inventorof\",{\"1\":{\"45\":7}}],[\"indent\",{\"1\":{\"43\":1}}],[\"indentation\",{\"1\":{\"19\":1}}],[\"index\",{\"1\":{\"21\":3,\"30\":1,\"55\":8,\"59\":2,\"120\":2}}],[\"in\",{\"1\":{\"21\":1,\"48\":1,\"57\":1,\"61\":5,\"63\":4,\"72\":1}}],[\"input\",{\"1\":{\"20\":2}}],[\"instance\",{\"1\":{\"72\":1}}],[\"instanceof\",{\"1\":{\"58\":1}}],[\"install\",{\"1\":{\"8\":1,\"12\":1,\"106\":1,\"108\":1,\"109\":1,\"158\":1,\"163\":1,\"166\":1}}],[\"insert\",{\"1\":{\"101\":1}}],[\"insertion\",{\"1\":{\"44\":1}}],[\"inset\",{\"1\":{\"19\":2}}],[\"inside\",{\"1\":{\"19\":1}}],[\"initial\",{\"1\":{\"35\":2}}],[\"init\",{\"0\":{\"14\":1},\"1\":{\"10\":3,\"14\":6,\"16\":1,\"59\":4}}],[\"个句号\",{\"1\":{\"82\":1}}],[\"个小圆点\",{\"1\":{\"82\":1}}],[\"个齐线小圆点\",{\"1\":{\"82\":2}}],[\"个居中小圆点\",{\"1\":{\"82\":2}}],[\"个性化设置\",{\"1\":{\"81\":2}}],[\"个条件分支\",{\"1\":{\"61\":1}}],[\"个人隐私信息\",{\"1\":{\"34\":1}}],[\"个\",{\"1\":{\"20\":1,\"31\":1}}],[\"个字符\",{\"1\":{\"19\":1,\"50\":1,\"91\":3}}],[\"个空格或\",{\"1\":{\"19\":1,\"33\":1,\"43\":1}}],[\"个空格缩进\",{\"1\":{\"19\":1,\"33\":1,\"34\":1,\"43\":2}}],[\"属性的\",{\"1\":{\"98\":1}}],[\"属性的值由\",{\"1\":{\"28\":1}}],[\"属性以支持固定表头和滚动条\",{\"1\":{\"77\":1}}],[\"属性方法实现重载\",{\"1\":{\"72\":1}}],[\"属性存在即表示取值\",{\"1\":{\"36\":1}}],[\"属性添加取值\",{\"1\":{\"36\":1}}],[\"属性值使用双引号\",{\"1\":{\"36\":1}}],[\"属性值本身无法换行时\",{\"1\":{\"19\":1}}],[\"属性\",{\"0\":{\"36\":1},\"1\":{\"28\":2,\"38\":2,\"72\":3}}],[\"属性顺序参考如下列表\",{\"1\":{\"21\":1}}],[\"属性失效\",{\"1\":{\"21\":1}}],[\"属性可以让元素脱离正常文本流\",{\"1\":{\"21\":1}}],[\"属性声明的顺序\",{\"1\":{\"21\":1,\"23\":1}}],[\"属性声明应单独成行\",{\"1\":{\"19\":1}}],[\"属性和属性值\",{\"0\":{\"21\":1}}],[\"属性选择器\",{\"1\":{\"20\":1}}],[\"属性选择器的值的引号只有在某些情况下可以省略\",{\"1\":{\"20\":1}}],[\"属性选择器的值始终用双引号包裹\",{\"1\":{\"20\":1}}],[\"属性名和\",{\"1\":{\"19\":1}}],[\"94\",{\"1\":{\"19\":2}}],[\"9\",{\"0\":{\"61\":1},\"1\":{\"19\":1,\"52\":1,\"56\":1,\"57\":1,\"59\":1,\"61\":8,\"68\":1,\"72\":1,\"76\":1}}],[\"83949\",{\"1\":{\"60\":3}}],[\"80\",{\"1\":{\"50\":1}}],[\"88\",{\"1\":{\"19\":2}}],[\"8\",{\"0\":{\"60\":1},\"1\":{\"19\":1,\"29\":4,\"31\":1,\"39\":1,\"52\":1,\"53\":2,\"56\":1,\"57\":3,\"59\":1,\"60\":6,\"61\":1,\"67\":3,\"68\":1}}],[\"with\",{\"1\":{\"64\":1,\"72\":4,\"159\":1}}],[\"within\",{\"1\":{\"64\":1}}],[\"windows\",{\"1\":{\"64\":1,\"85\":1}}],[\"window\",{\"1\":{\"62\":4,\"72\":1}}],[\"widows\",{\"1\":{\"21\":1}}],[\"width=device\",{\"1\":{\"29\":1,\"35\":2,\"39\":1}}],[\"width\",{\"1\":{\"21\":3,\"23\":4,\"29\":1,\"35\":2,\"39\":1}}],[\"what\",{\"1\":{\"47\":1}}],[\"while\",{\"1\":{\"47\":1,\"48\":1,\"53\":2,\"57\":1,\"61\":1,\"64\":1}}],[\"white\",{\"1\":{\"21\":1}}],[\"whitespace\",{\"1\":{\"19\":1}}],[\"watch\",{\"1\":{\"85\":1}}],[\"want\",{\"1\":{\"44\":2}}],[\"warnings\",{\"1\":{\"76\":1}}],[\"warning\",{\"1\":{\"63\":1}}],[\"warn\",{\"1\":{\"10\":1,\"160\":1}}],[\"world\",{\"1\":{\"33\":2,\"35\":2,\"64\":1,\"72\":2,\"82\":4}}],[\"word\",{\"1\":{\"21\":1}}],[\"w3\",{\"1\":{\"27\":1}}],[\"w3c\",{\"1\":{\"27\":1}}],[\"www\",{\"1\":{\"27\":1}}],[\"webpack\",{\"1\":{\"85\":1}}],[\"websocket\",{\"1\":{\"85\":1}}],[\"web\",{\"1\":{\"81\":3}}],[\"webkit\",{\"1\":{\"19\":2}}],[\"welcome\",{\"1\":{\"38\":1,\"57\":1}}],[\"weight\",{\"1\":{\"23\":1}}],[\"wrappers\",{\"1\":{\"53\":1}}],[\"wrap\",{\"1\":{\"21\":1,\"57\":1}}],[\"writing\",{\"1\":{\"21\":1}}],[\"72\",{\"1\":{\"91\":2}}],[\"71\",{\"1\":{\"53\":1}}],[\"7\",{\"0\":{\"50\":1,\"59\":1},\"1\":{\"19\":1,\"21\":1,\"23\":1,\"50\":3,\"52\":1,\"53\":1,\"56\":1,\"57\":3,\"59\":13,\"61\":1,\"68\":1,\"69\":1,\"76\":1,\"85\":1}}],[\"08\",{\"1\":{\"77\":2}}],[\"05\",{\"1\":{\"76\":1}}],[\"09\",{\"1\":{\"76\":1}}],[\"071\",{\"1\":{\"53\":2}}],[\"0x\",{\"1\":{\"53\":1}}],[\"0em\",{\"1\":{\"21\":1}}],[\"04\",{\"1\":{\"19\":2}}],[\"0px\",{\"1\":{\"19\":2,\"21\":1}}],[\"0\",{\"1\":{\"19\":26,\"21\":19,\"23\":1,\"27\":1,\"29\":1,\"35\":2,\"39\":1,\"48\":4,\"52\":1,\"53\":7,\"55\":4,\"57\":9,\"58\":2,\"60\":7,\"61\":10,\"63\":2,\"67\":4,\"72\":1,\"76\":42,\"77\":2,\"102\":4,\"126\":1,\"130\":3,\"134\":4,\"138\":3,\"142\":4,\"146\":6,\"150\":7,\"154\":6}}],[\"rjs\",{\"1\":{\"84\":1}}],[\"ruby\",{\"1\":{\"83\":2}}],[\"rule3\",{\"1\":{\"72\":3}}],[\"rule2\",{\"1\":{\"72\":3}}],[\"rule1\",{\"1\":{\"72\":3}}],[\"rules\",{\"1\":{\"65\":1,\"111\":1,\"161\":1}}],[\"rc\",{\"1\":{\"76\":1}}],[\"radix\",{\"1\":{\"53\":1}}],[\"radius\",{\"1\":{\"21\":1}}],[\"role=\",{\"1\":{\"38\":1}}],[\"recommended\",{\"1\":{\"112\":1}}],[\"reviewed\",{\"1\":{\"96\":2}}],[\"revert\",{\"1\":{\"94\":1,\"101\":1}}],[\"refactor\",{\"1\":{\"94\":1}}],[\"refactored\",{\"1\":{\"76\":1}}],[\"reference\",{\"1\":{\"72\":1}}],[\"referenceerror\",{\"1\":{\"44\":2,\"52\":5,\"57\":1}}],[\"reported\",{\"1\":{\"96\":2}}],[\"replacement\",{\"1\":{\"72\":1}}],[\"repeat\",{\"1\":{\"23\":1}}],[\"requirejs\",{\"1\":{\"85\":1}}],[\"require\",{\"1\":{\"57\":1,\"58\":1,\"59\":1,\"67\":32,\"69\":2,\"72\":2}}],[\"readme\",{\"1\":{\"75\":1,\"80\":1}}],[\"readonlyarray<string>\",{\"1\":{\"72\":1}}],[\"readonlyarray<t>\",{\"1\":{\"72\":1}}],[\"readonly\",{\"1\":{\"72\":9}}],[\"readfilesync\",{\"1\":{\"67\":2}}],[\"readfile\",{\"1\":{\"67\":4}}],[\"readdata\",{\"1\":{\"67\":2}}],[\"reassignable\",{\"1\":{\"64\":1}}],[\"reassign\",{\"1\":{\"57\":1}}],[\"realname\",{\"1\":{\"54\":4}}],[\"reaction\",{\"1\":{\"44\":2}}],[\"react\",{\"0\":{\"129\":2,\"145\":2},\"1\":{\"2\":1,\"14\":1,\"15\":6,\"35\":1,\"59\":16,\"83\":3,\"84\":1,\"85\":2,\"124\":1,\"125\":1,\"129\":3,\"130\":2,\"131\":2,\"132\":2,\"141\":1,\"145\":2,\"146\":2,\"147\":2,\"148\":2,\"153\":1,\"159\":2,\"160\":2}}],[\"resolver\",{\"1\":{\"142\":1,\"143\":1,\"146\":1,\"147\":1,\"150\":1,\"151\":1,\"154\":1,\"155\":1}}],[\"resolved\",{\"1\":{\"97\":1}}],[\"resolves\",{\"1\":{\"97\":1}}],[\"resolve\",{\"1\":{\"97\":4}}],[\"restrict\",{\"1\":{\"72\":1}}],[\"rest\",{\"1\":{\"57\":2}}],[\"result\",{\"1\":{\"44\":2,\"48\":2}}],[\"resize\",{\"1\":{\"21\":1}}],[\"returns\",{\"1\":{\"63\":5}}],[\"returned\",{\"1\":{\"44\":2}}],[\"return\",{\"1\":{\"44\":2,\"46\":3,\"48\":2,\"49\":6,\"52\":6,\"53\":1,\"54\":2,\"55\":7,\"56\":6,\"57\":19,\"58\":2,\"60\":2,\"61\":7,\"62\":1,\"63\":9,\"69\":2,\"72\":9}}],[\"redis\",{\"1\":{\"85\":1}}],[\"reduceright\",{\"1\":{\"55\":1}}],[\"reduce\",{\"1\":{\"55\":3,\"57\":2}}],[\"redundant\",{\"1\":{\"21\":1,\"96\":6}}],[\"redeclare\",{\"1\":{\"52\":1}}],[\"red\",{\"1\":{\"23\":2}}],[\"rel=\",{\"1\":{\"22\":1,\"30\":8,\"36\":2,\"39\":1}}],[\"removed\",{\"1\":{\"76\":1}}],[\"rem\",{\"1\":{\"21\":1}}],[\"right\",{\"1\":{\"19\":2,\"21\":4,\"23\":1,\"55\":2}}],[\"rgb\",{\"1\":{\"19\":4}}],[\"rgba\",{\"1\":{\"19\":6}}],[\"分享等\",{\"1\":{\"80\":1}}],[\"分支模型\",{\"1\":{\"104\":1}}],[\"分支模型选择的说明\",{\"0\":{\"100\":1}}],[\"分支命名\",{\"0\":{\"101\":1}}],[\"分支命名规约\",{\"0\":{\"99\":1}}],[\"分支\",{\"1\":{\"61\":1}}],[\"分隔的代码块状结构\",{\"1\":{\"46\":1}}],[\"分隔的属性值中\",{\"1\":{\"19\":1}}],[\"分号的移除和添加\",{\"1\":{\"94\":1}}],[\"分号\",{\"0\":{\"44\":1},\"1\":{\"47\":1}}],[\"分别归类\",{\"1\":{\"52\":1}}],[\"分别是他们的默认值\",{\"1\":{\"30\":1}}],[\"分别对提交文件和提交信息进行规约检查\",{\"1\":{\"10\":1}}],[\"6s\",{\"1\":{\"85\":2}}],[\"69\",{\"1\":{\"30\":1}}],[\"6\",{\"0\":{\"38\":1,\"49\":1,\"58\":1},\"1\":{\"19\":1,\"21\":1,\"23\":1,\"38\":1,\"49\":3,\"52\":1,\"56\":1,\"57\":3,\"58\":5,\"59\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"76\":1,\"77\":2,\"82\":5,\"83\":1,\"85\":1}}],[\"~\",{\"1\":{\"19\":1}}],[\">提交<\",{\"1\":{\"98\":2}}],[\">>\",{\"1\":{\"53\":1}}],[\">3<\",{\"1\":{\"37\":2}}],[\">2<\",{\"1\":{\"37\":2}}],[\">example\",{\"1\":{\"36\":2}}],[\">1<\",{\"1\":{\"36\":1,\"37\":2}}],[\">hello\",{\"1\":{\"33\":1}}],[\"><\",{\"1\":{\"30\":5,\"39\":2}}],[\">\",{\"1\":{\"19\":2,\"20\":1,\"22\":3,\"27\":3,\"28\":2,\"29\":3,\"30\":13,\"31\":1,\"33\":1,\"34\":2,\"35\":8,\"36\":12,\"37\":4,\"38\":8,\"39\":6,\"60\":2,\"72\":3,\"75\":4,\"76\":10,\"81\":12,\"82\":8,\"83\":9,\"84\":2,\"98\":1,\"114\":1,\"115\":1,\"117\":1}}],[\"50\",{\"1\":{\"91\":1}}],[\"500\",{\"1\":{\"55\":2}}],[\"57\",{\"1\":{\"53\":1}}],[\"5s\",{\"1\":{\"23\":1}}],[\"5px\",{\"1\":{\"21\":2}}],[\"52\",{\"1\":{\"19\":2}}],[\"5\",{\"0\":{\"31\":1,\"37\":1,\"48\":1,\"54\":1,\"57\":1},\"1\":{\"19\":7,\"21\":4,\"23\":1,\"27\":1,\"30\":1,\"31\":1,\"37\":1,\"48\":2,\"52\":1,\"54\":3,\"56\":3,\"57\":20,\"58\":1,\"59\":1,\"60\":3,\"61\":2,\"62\":1,\"63\":1,\"64\":1,\"67\":1,\"68\":1,\"69\":1,\"72\":9,\"76\":2,\"77\":4,\"81\":2,\"96\":1}}],[\"之后使用\",{\"1\":{\"72\":1}}],[\"之后保留一个空格\",{\"1\":{\"19\":1,\"23\":1}}],[\"之间有且只有一个空格\",{\"1\":{\"48\":1}}],[\"之间保留一个空格\",{\"1\":{\"19\":1}}],[\"之前\",{\"1\":{\"21\":1}}],[\"之前无空格\",{\"1\":{\"19\":1,\"23\":1}}],[\"30px\",{\"1\":{\"23\":2}}],[\"333\",{\"1\":{\"21\":1}}],[\"3\",{\"0\":{\"21\":1,\"29\":1,\"35\":1,\"39\":1,\"45\":1,\"55\":1,\"63\":1,\"69\":1,\"83\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":2,\"102\":1,\"103\":1},\"1\":{\"19\":1,\"20\":2,\"21\":8,\"23\":2,\"29\":2,\"30\":1,\"34\":1,\"35\":2,\"36\":1,\"45\":2,\"47\":1,\"48\":2,\"49\":1,\"50\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":12,\"56\":16,\"57\":18,\"58\":1,\"59\":1,\"60\":1,\"61\":3,\"62\":1,\"63\":7,\"64\":1,\"67\":1,\"68\":1,\"69\":8,\"72\":2,\"75\":1,\"76\":1,\"77\":1,\"81\":4,\"82\":3,\"83\":4,\"96\":1,\"97\":6,\"101\":1,\"103\":3,\"126\":2,\"130\":3,\"134\":3,\"138\":2,\"142\":1,\"146\":2,\"150\":2,\"154\":1}}],[\"缩进\",{\"0\":{\"33\":1,\"43\":1},\"1\":{\"19\":1,\"33\":1,\"43\":1}}],[\"404\",{\"1\":{\"168\":1}}],[\"42\",{\"1\":{\"57\":5}}],[\"4\",{\"0\":{\"22\":1,\"30\":1,\"36\":1,\"46\":1,\"47\":1,\"56\":1,\"64\":1,\"84\":1},\"1\":{\"19\":2,\"21\":1,\"22\":1,\"23\":1,\"30\":6,\"33\":1,\"36\":3,\"43\":1,\"46\":1,\"47\":3,\"52\":3,\"53\":1,\"55\":5,\"56\":14,\"57\":8,\"58\":1,\"59\":1,\"60\":1,\"61\":3,\"62\":1,\"63\":1,\"64\":7,\"67\":1,\"68\":1,\"69\":1,\"72\":1,\"76\":1,\"77\":9,\"81\":1,\"84\":1,\"96\":1}}],[\"不在代码中直接通过纯文本值设置\",{\"1\":{\"122\":1}}],[\"不推荐在项目中同时存在\",{\"1\":{\"119\":1}}],[\"不推荐这样做\",{\"1\":{\"46\":1}}],[\"不包括如\",{\"1\":{\"101\":1}}],[\"不超过\",{\"1\":{\"91\":1}}],[\"不像\",{\"1\":{\"81\":2}}],[\"不管是手写还是自动生成\",{\"1\":{\"74\":1}}],[\"不是必需的\",{\"1\":{\"74\":1}}],[\"不做限制\",{\"1\":{\"72\":1}}],[\"不建议将\",{\"1\":{\"72\":1}}],[\"不建议使用\",{\"1\":{\"72\":1}}],[\"不返回任何值\",{\"1\":{\"72\":1}}],[\"不需使用\",{\"1\":{\"64\":1}}],[\"不应发布到线上\",{\"1\":{\"62\":1}}],[\"不会破坏\",{\"1\":{\"58\":1}}],[\"不会对前两类属性的结果产生影响\",{\"1\":{\"21\":1}}],[\"不使用简写语法糖\",{\"1\":{\"57\":1}}],[\"不使用行首逗号\",{\"1\":{\"45\":1}}],[\"不能在块外使用\",{\"1\":{\"57\":1}}],[\"不能省略\",{\"1\":{\"19\":1}}],[\"不允许跳转至白名单外的域名\",{\"1\":{\"68\":1}}],[\"不允许所谓的\",{\"1\":{\"48\":1}}],[\"不允许出现任何敏感信息\",{\"1\":{\"34\":1}}],[\"不存在类似\",{\"1\":{\"52\":1}}],[\"不存在则表示取值\",{\"1\":{\"36\":1}}],[\"不存在多占用一个字符的问题\",{\"1\":{\"21\":1}}],[\"不同浏览器采用了不同的字符编码\",{\"1\":{\"29\":1}}],[\"不要追加在某条语句的后面\",{\"1\":{\"63\":1}}],[\"不要修改引用类型的参数\",{\"1\":{\"57\":1}}],[\"不要修改函数参数\",{\"1\":{\"57\":1}}],[\"不要将函数参数命名为\",{\"1\":{\"57\":1}}],[\"不要在\",{\"1\":{\"59\":2,\"114\":1}}],[\"不要在块中使用函数声明\",{\"1\":{\"57\":1}}],[\"不要在声明前就使用变量\",{\"1\":{\"52\":1}}],[\"不要用过去时态\",{\"1\":{\"76\":1,\"96\":1}}],[\"不要用多个\",{\"1\":{\"59\":1}}],[\"不要用\",{\"1\":{\"57\":1}}],[\"不要直接在对象上调用\",{\"1\":{\"56\":2}}],[\"不要重复声明变量和函数\",{\"1\":{\"52\":1}}],[\"不要让代码中出现空代码块\",{\"1\":{\"47\":1}}],[\"不要为\",{\"1\":{\"36\":1}}],[\"不要省略自闭合标签结尾处的斜线\",{\"1\":{\"35\":1}}],[\"不要再嵌套更深选择器\",{\"1\":{\"23\":1}}],[\"不要使用过去时\",{\"1\":{\"96\":1}}],[\"不要使用一元自增自减运算符\",{\"1\":{\"60\":2}}],[\"不要使用函数声明\",{\"1\":{\"57\":1}}],[\"不要使用空代码块\",{\"1\":{\"47\":1}}],[\"不要使用单引号\",{\"1\":{\"36\":1}}],[\"不要使用\",{\"1\":{\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"33\":1,\"43\":1,\"52\":1,\"53\":1,\"55\":1,\"57\":2,\"60\":1}}],[\"不但具备\",{\"1\":{\"23\":1}}],[\"不省略的好处是\",{\"1\":{\"21\":1}}],[\"推荐将\",{\"1\":{\"116\":1}}],[\"推荐在持续交付的软件工程中使用更简单的\",{\"1\":{\"100\":1}}],[\"推荐你阅读\",{\"1\":{\"83\":2}}],[\"推荐值如下\",{\"1\":{\"76\":1}}],[\"推荐使用的关键字有\",{\"1\":{\"97\":1}}],[\"推荐使用英文\",{\"1\":{\"92\":1}}],[\"推荐使用\",{\"1\":{\"63\":1,\"64\":1,\"67\":1}}],[\"推荐始终给\",{\"1\":{\"53\":1}}],[\"推荐开发者在\",{\"1\":{\"28\":1}}],[\"推荐\",{\"1\":{\"19\":9,\"21\":4,\"22\":1,\"23\":7,\"28\":1,\"29\":2,\"30\":5,\"33\":1,\"34\":2,\"35\":1,\"36\":2,\"46\":1,\"49\":1,\"50\":1,\"53\":2,\"54\":1,\"55\":2,\"56\":2,\"57\":4,\"58\":2,\"59\":3,\"60\":1,\"61\":2,\"62\":2,\"63\":2,\"67\":5,\"68\":4,\"69\":7,\"72\":15,\"76\":3,\"81\":1,\"82\":3}}],[\"语法的文本文件\",{\"1\":{\"75\":1}}],[\"语法引入模块\",{\"1\":{\"72\":1}}],[\"语法中最后一条声明的分号是可选的\",{\"1\":{\"19\":1}}],[\"语义化\",{\"0\":{\"37\":1}}],[\"语言选择\",{\"0\":{\"92\":1}}],[\"语言的关键字\",{\"1\":{\"72\":1}}],[\"语言版本是\",{\"1\":{\"41\":1}}],[\"语言特性的人来说\",{\"1\":{\"60\":1}}],[\"语言特性\",{\"0\":{\"51\":1},\"1\":{\"41\":1}}],[\"语言\",{\"0\":{\"28\":1}}],[\"语言和框架类型\",{\"1\":{\"14\":1}}],[\"语句必须使用预编译模式\",{\"1\":{\"68\":1}}],[\"语句通常在调试阶段使用\",{\"1\":{\"62\":1}}],[\"语句也不应被使用\",{\"1\":{\"62\":1}}],[\"语句会使浏览器弹出原生警告框\",{\"1\":{\"62\":1}}],[\"语句会让程序暂停\",{\"1\":{\"62\":1}}],[\"语句会被声明提升\",{\"1\":{\"59\":1}}],[\"语句存在安全风险\",{\"1\":{\"62\":1}}],[\"语句的条件\",{\"1\":{\"61\":1}}],[\"语句的结果总是返回一个\",{\"1\":{\"61\":1}}],[\"语句的排序\",{\"1\":{\"59\":1}}],[\"语句更易于书写和阅读\",{\"1\":{\"61\":1}}],[\"语句在有许多条件分支的情况下可以使代码结构更清晰\",{\"1\":{\"61\":1}}],[\"语句应包含至少\",{\"1\":{\"61\":1}}],[\"语句末尾用\",{\"1\":{\"61\":2}}],[\"语句需要始终包含\",{\"1\":{\"61\":1}}],[\"语句需要放到模块的最上方\",{\"1\":{\"59\":1}}],[\"语句中的\",{\"1\":{\"61\":1}}],[\"语句一般是用来得到一个\",{\"1\":{\"60\":1}}],[\"语句建议按以下规则排序\",{\"1\":{\"59\":1}}],[\"语句引入了同一模块会降低可维护性\",{\"1\":{\"59\":1}}],[\"语句进行类的继承\",{\"1\":{\"58\":1}}],[\"语句是\",{\"1\":{\"58\":1}}],[\"语句声明类\",{\"1\":{\"58\":1}}],[\"语句时\",{\"1\":{\"57\":2,\"61\":1}}],[\"语句里\",{\"1\":{\"46\":1}}],[\"语句\",{\"1\":{\"23\":1,\"55\":2,\"57\":2,\"61\":2,\"62\":2}}],[\"虽然查看\",{\"1\":{\"76\":1,\"96\":1}}],[\"虽然一行代码更简洁\",{\"1\":{\"59\":1}}],[\"虽然从\",{\"1\":{\"53\":1}}],[\"虽然这些产物在一定程度上提高开发者的开发效率\",{\"1\":{\"23\":1}}],[\"虽然\",{\"1\":{\"19\":1,\"35\":1}}],[\"button>\",{\"1\":{\"98\":2}}],[\"buffer\",{\"1\":{\"67\":4}}],[\"builtins\",{\"1\":{\"56\":1}}],[\"bug\",{\"1\":{\"53\":1,\"63\":1,\"76\":2,\"94\":1,\"97\":1,\"101\":1}}],[\"bluebird\",{\"1\":{\"69\":1}}],[\"blah\",{\"1\":{\"56\":2}}],[\"blocks\",{\"1\":{\"49\":1}}],[\"blockskeyword\",{\"1\":{\"48\":1}}],[\"block\",{\"1\":{\"19\":3,\"21\":3,\"46\":1}}],[\"big\",{\"1\":{\"83\":2}}],[\"bigint\",{\"1\":{\"53\":1,\"72\":1}}],[\"bing\",{\"1\":{\"60\":2}}],[\"bidi\",{\"1\":{\"21\":1}}],[\"beta\",{\"1\":{\"76\":4}}],[\"best\",{\"1\":{\"56\":1,\"57\":2}}],[\"been\",{\"1\":{\"52\":2}}],[\"bernese\",{\"1\":{\"48\":2}}],[\"be\",{\"1\":{\"44\":2,\"63\":1,\"64\":1,\"72\":1}}],[\"beforeselector\",{\"1\":{\"19\":1}}],[\"before\",{\"1\":{\"19\":3,\"20\":1,\"48\":1,\"52\":1,\"58\":1}}],[\"bcp47\",{\"1\":{\"28\":1}}],[\"by\",{\"1\":{\"24\":1,\"40\":1,\"63\":1,\"68\":1,\"69\":1,\"96\":7}}],[\"b\",{\"1\":{\"23\":2,\"52\":10,\"53\":2,\"55\":9,\"56\":11,\"57\":16,\"60\":10,\"67\":2,\"72\":10}}],[\"btn\",{\"1\":{\"23\":1}}],[\"bom\",{\"1\":{\"85\":1}}],[\"bootstrap\",{\"1\":{\"85\":1}}],[\"book\",{\"1\":{\"63\":2}}],[\"book类\",{\"1\":{\"63\":1}}],[\"bool\",{\"1\":{\"53\":6}}],[\"boolean\",{\"1\":{\"14\":5,\"16\":4,\"36\":2,\"53\":7,\"62\":1,\"72\":7}}],[\"body>\",{\"1\":{\"30\":3,\"33\":1,\"39\":1}}],[\"body\",{\"1\":{\"30\":4,\"46\":1,\"57\":1,\"90\":2,\"91\":2,\"96\":2}}],[\"bold\",{\"1\":{\"23\":1}}],[\"border\",{\"1\":{\"21\":5}}],[\"bottom\",{\"1\":{\"19\":4,\"21\":4,\"55\":2}}],[\"box\",{\"1\":{\"19\":2,\"21\":3}}],[\"backbone\",{\"1\":{\"84\":2,\"85\":1}}],[\"background\",{\"1\":{\"19\":4,\"21\":4,\"23\":2}}],[\"ban\",{\"1\":{\"72\":2}}],[\"based\",{\"1\":{\"63\":4}}],[\"bam\",{\"1\":{\"60\":2}}],[\"baz\",{\"1\":{\"46\":2,\"49\":4,\"50\":6,\"55\":2,\"57\":4,\"58\":2,\"60\":4,\"72\":17}}],[\"bar3\",{\"1\":{\"72\":3}}],[\"bar2\",{\"1\":{\"72\":2}}],[\"bar1\",{\"1\":{\"72\":2}}],[\"bar\",{\"1\":{\"46\":2,\"48\":2,\"49\":6,\"50\":8,\"52\":26,\"55\":2,\"56\":6,\"57\":6,\"58\":6,\"59\":15,\"60\":7,\"61\":5,\"67\":4,\"72\":59}}],[\"batman\",{\"1\":{\"45\":2}}],[\"babel\",{\"1\":{\"23\":1,\"45\":1,\"57\":1,\"85\":1,\"95\":2,\"125\":1,\"126\":2,\"127\":2,\"130\":2,\"131\":2,\"134\":2,\"135\":2,\"138\":2,\"139\":2,\"161\":2}}],[\"badge\",{\"1\":{\"77\":1}}],[\"bad\",{\"1\":{\"19\":13,\"20\":2,\"21\":5,\"22\":1,\"23\":2,\"27\":1,\"30\":2,\"35\":2,\"36\":3,\"37\":1,\"38\":1,\"43\":1,\"44\":3,\"45\":4,\"46\":3,\"47\":4,\"48\":13,\"49\":6,\"50\":2,\"52\":18,\"53\":6,\"54\":3,\"55\":11,\"56\":11,\"57\":16,\"58\":7,\"59\":9,\"60\":8,\"61\":8,\"62\":5,\"63\":6,\"64\":7,\"67\":12,\"72\":30,\"75\":2,\"76\":5,\"81\":6,\"82\":5,\"83\":5,\"84\":1,\"96\":3}}],[\"browser\",{\"1\":{\"161\":1}}],[\"brother\",{\"1\":{\"19\":2}}],[\"branching\",{\"1\":{\"100\":1}}],[\"bracket\",{\"1\":{\"48\":1}}],[\"brackets\",{\"1\":{\"47\":3}}],[\"brace\",{\"1\":{\"19\":1,\"47\":1}}],[\"breed\",{\"1\":{\"48\":2}}],[\"breaking\",{\"1\":{\"76\":1,\"98\":1}}],[\"break\",{\"1\":{\"21\":3,\"61\":7,\"72\":1}}],[\"所有的现代浏览器都完整的支持\",{\"1\":{\"81\":2}}],[\"所有声明都应该以分号结尾\",{\"1\":{\"19\":1}}],[\"所以\",{\"1\":{\"72\":1}}],[\"所以当你做了特殊标记\",{\"1\":{\"63\":1}}],[\"所以除非你出于某些目的想给函数起一个不同于被赋值变量的名字\",{\"1\":{\"57\":1}}],[\"所以不要在声明前就使用变量\",{\"1\":{\"52\":1}}],[\"所需的依赖和配置\",{\"1\":{\"10\":1}}],[\"强制对类型的断言统一使用\",{\"1\":{\"72\":1}}],[\"强制\",{\"1\":{\"19\":1,\"27\":1,\"31\":1,\"34\":1,\"35\":1,\"36\":1,\"43\":1,\"44\":1,\"45\":2,\"47\":2,\"48\":1,\"49\":1,\"52\":8,\"53\":2,\"54\":2,\"55\":2,\"56\":5,\"57\":7,\"58\":3,\"59\":5,\"60\":5,\"61\":2,\"62\":3,\"63\":1,\"64\":1,\"68\":5,\"72\":12,\"75\":3,\"76\":4,\"81\":4,\"83\":3,\"84\":1}}],[\"详细规则如下\",{\"1\":{\"19\":1,\"42\":1,\"76\":1}}],[\"部分规则可通过\",{\"1\":{\"17\":1}}],[\"luke\",{\"1\":{\"56\":1,\"69\":2}}],[\"lukeskywalker\",{\"1\":{\"56\":3}}],[\"location\",{\"1\":{\"72\":1}}],[\"lookup\",{\"1\":{\"67\":4}}],[\"looooongname\",{\"1\":{\"48\":3}}],[\"long\",{\"1\":{\"48\":3}}],[\"longhand\",{\"1\":{\"21\":1}}],[\"logandreturn<void>\",{\"1\":{\"72\":1}}],[\"logsomething\",{\"1\":{\"72\":1}}],[\"log\",{\"1\":{\"48\":8,\"49\":6,\"50\":4,\"52\":20,\"53\":2,\"56\":4,\"57\":10,\"58\":3,\"62\":4,\"63\":2,\"67\":2,\"69\":1,\"72\":8,\"74\":3,\"76\":2}}],[\"logo\",{\"1\":{\"33\":1,\"38\":2}}],[\"lovelace\",{\"1\":{\"45\":2}}],[\"lambda\",{\"1\":{\"72\":1}}],[\"last\",{\"1\":{\"49\":1}}],[\"lastname\",{\"1\":{\"45\":12,\"56\":7}}],[\"lang=\",{\"1\":{\"28\":1,\"39\":1}}],[\"language\",{\"1\":{\"28\":1}}],[\"lang\",{\"1\":{\"28\":3}}],[\"layout\",{\"1\":{\"21\":1}}],[\"literal\",{\"1\":{\"67\":1,\"72\":1}}],[\"li>\",{\"1\":{\"37\":3}}],[\"lib\",{\"1\":{\"30\":1}}],[\"li\",{\"1\":{\"20\":1}}],[\"linux\",{\"1\":{\"85\":1,\"91\":1,\"96\":1}}],[\"link<\",{\"1\":{\"36\":2}}],[\"link\",{\"1\":{\"30\":1}}],[\"lines\",{\"1\":{\"50\":2}}],[\"linear\",{\"1\":{\"19\":2}}],[\"line\",{\"1\":{\"19\":3,\"21\":3,\"72\":4,\"161\":1}}],[\"lint\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"5\":2,\"6\":2,\"8\":2,\"10\":9,\"12\":1,\"14\":6,\"16\":5,\"71\":1}}],[\"linters\",{\"1\":{\"159\":1}}],[\"linteroptions\",{\"1\":{\"16\":1}}],[\"linter\",{\"1\":{\"3\":1,\"6\":2,\"10\":2}}],[\"list\",{\"1\":{\"19\":2,\"21\":1,\"37\":8,\"72\":1}}],[\"leak\",{\"1\":{\"101\":1}}],[\"leading\",{\"1\":{\"21\":1}}],[\"let\",{\"1\":{\"52\":29,\"55\":1,\"57\":6,\"60\":1,\"61\":8,\"64\":2,\"72\":16}}],[\"letter\",{\"1\":{\"21\":1}}],[\"len\",{\"1\":{\"50\":1}}],[\"length\",{\"1\":{\"19\":1,\"21\":2,\"55\":1,\"57\":2,\"61\":2}}],[\"left\",{\"1\":{\"19\":28,\"21\":5,\"23\":4,\"30\":2,\"55\":4}}],[\"less\",{\"1\":{\"17\":1,\"23\":6,\"77\":2,\"85\":1}}],[\"==\",{\"1\":{\"60\":5,\"62\":1,\"72\":6}}],[\"===\",{\"1\":{\"48\":2,\"52\":2,\"60\":7,\"61\":1,\"72\":2}}],[\"=>\",{\"1\":{\"44\":2,\"50\":4,\"52\":14,\"53\":4,\"55\":6,\"56\":8,\"57\":31,\"58\":1,\"61\":5,\"62\":1,\"67\":2,\"72\":14}}],[\"=\",{\"1\":{\"16\":1,\"44\":8,\"45\":10,\"48\":9,\"49\":2,\"50\":2,\"52\":57,\"53\":23,\"54\":6,\"55\":35,\"56\":32,\"57\":39,\"58\":11,\"59\":8,\"60\":21,\"61\":17,\"62\":10,\"63\":14,\"64\":18,\"67\":43,\"69\":7,\"72\":92,\"81\":1,\"107\":1,\"111\":1,\"112\":1,\"117\":2,\"123\":4}}],[\"文章作者\",{\"1\":{\"100\":1}}],[\"文章标题使用\",{\"1\":{\"76\":1}}],[\"文档相关的改动\",{\"1\":{\"94\":1}}],[\"文档的含义非常广泛\",{\"1\":{\"80\":1}}],[\"文档的开头使用\",{\"1\":{\"27\":1}}],[\"文档新增或者修改\",{\"1\":{\"76\":1}}],[\"文档类注释\",{\"1\":{\"63\":1}}],[\"文档类注释使用\",{\"1\":{\"63\":1}}],[\"文档类型\",{\"0\":{\"27\":1}}],[\"文档\",{\"0\":{\"26\":1},\"1\":{\"76\":1,\"108\":1,\"162\":1}}],[\"文档规范\",{\"0\":{\"79\":1},\"1\":{\"3\":1,\"6\":1}}],[\"文字排版\",{\"1\":{\"21\":1}}],[\"文件时不会报错\",{\"1\":{\"121\":1}}],[\"文件必须存放在项目根目录下\",{\"1\":{\"75\":1}}],[\"文件必须是使用标准\",{\"1\":{\"75\":1}}],[\"文件必须取名为\",{\"1\":{\"75\":1}}],[\"文件名\",{\"1\":{\"64\":1}}],[\"文件最大行数\",{\"1\":{\"50\":1}}],[\"文件末尾保留了2个换行符\",{\"1\":{\"49\":1}}],[\"文件末尾未保留换行符\",{\"1\":{\"49\":1}}],[\"文件速度变慢\",{\"1\":{\"22\":1}}],[\"文件\",{\"0\":{\"75\":1},\"1\":{\"16\":1,\"63\":1,\"119\":1,\"120\":1}}],[\"会话状态管理\",{\"1\":{\"81\":2}}],[\"会更好\",{\"1\":{\"74\":1}}],[\"会引入严重的类型安全问题\",{\"1\":{\"72\":1}}],[\"会带来值是否会提前变化带来的理解成本\",{\"1\":{\"60\":1}}],[\"会带来过高的选择器优先级\",{\"1\":{\"20\":1}}],[\"会提供一个默认的\",{\"1\":{\"58\":1}}],[\"会被影响\",{\"1\":{\"56\":1}}],[\"会被保留\",{\"1\":{\"23\":1}}],[\"会根据第一个参数自动判断基数\",{\"1\":{\"53\":1}}],[\"会降低可读性\",{\"1\":{\"52\":1}}],[\"会直接报错\",{\"1\":{\"52\":1}}],[\"会在比较前将被比较值转换为相同类型\",{\"1\":{\"60\":1}}],[\"会在关键渲染路径上增加更多的往返\",{\"1\":{\"22\":1}}],[\"会在执行目录下新增如下的\",{\"1\":{\"16\":1}}],[\"会读取执行目录下的\",{\"1\":{\"16\":1}}],[\"会同时将\",{\"1\":{\"10\":1}}],[\"若它只继承另一个接口类型\",{\"1\":{\"72\":1}}],[\"若需要对用户输入内容作为目标\",{\"1\":{\"68\":1}}],[\"若用户输入无法使用预编译模式\",{\"1\":{\"68\":1}}],[\"若未设置将使用执行目录下或内置的默认\",{\"1\":{\"16\":3}}],[\"若要一个团队内所有的成员都能发挥最大程度的价值\",{\"1\":{\"1\":1}}],[\"支持但\",{\"1\":{\"161\":1}}],[\"支持自定义设置文件白名单\",{\"1\":{\"121\":1}}],[\"支持的规则\",{\"0\":{\"113\":1}}],[\"支持的配置参数有\",{\"1\":{\"16\":1}}],[\"支持配套的\",{\"1\":{\"105\":1,\"162\":1,\"165\":1}}],[\"支持\",{\"1\":{\"72\":1}}],[\"支持一键接入新增项目\",{\"1\":{\"2\":1}}],[\"支持一键扫描和一键修复\",{\"1\":{\"2\":1}}],[\"老项目\",{\"1\":{\"15\":1}}],[\"+0\",{\"1\":{\"61\":1}}],[\"++\",{\"1\":{\"60\":2}}],[\"+str\",{\"1\":{\"53\":1}}],[\"+=\",{\"1\":{\"52\":2,\"55\":1,\"57\":2,\"58\":2,\"60\":2}}],[\"+\",{\"0\":{\"129\":1,\"133\":1,\"145\":1,\"149\":1},\"1\":{\"15\":4,\"19\":2,\"20\":1,\"45\":3,\"48\":1,\"52\":1,\"53\":1,\"54\":3,\"56\":2,\"57\":14,\"60\":4,\"62\":1,\"67\":1,\"72\":7,\"81\":1,\"82\":1,\"97\":1}}],[\"项目为\",{\"1\":{\"160\":2}}],[\"项目为例\",{\"1\":{\"159\":1}}],[\"项目中包含\",{\"1\":{\"120\":1}}],[\"项目中对某个\",{\"1\":{\"95\":1}}],[\"项目工程方面的改动\",{\"1\":{\"94\":1}}],[\"项目\",{\"0\":{\"125\":1,\"129\":1,\"133\":1,\"137\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1},\"1\":{\"15\":8,\"125\":1,\"129\":1,\"137\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1}}],[\"项目绝对路径\",{\"1\":{\"14\":1}}],[\"即首行\",{\"1\":{\"90\":1}}],[\"即一般情况不要增加主语\",{\"1\":{\"76\":1,\"96\":1}}],[\"即在标点方面遵循一般的文档格式规约\",{\"1\":{\"76\":1}}],[\"即将废弃功能\",{\"1\":{\"76\":1}}],[\"即将删除\",{\"1\":{\"76\":1}}],[\"即便是约束了\",{\"1\":{\"74\":1}}],[\"即用一个换行符结束文件\",{\"1\":{\"49\":1}}],[\"即\",{\"1\":{\"44\":1,\"53\":2}}],[\"即使继承的是顶层选择器\",{\"1\":{\"23\":1}}],[\"即关键路径的深度变长\",{\"1\":{\"22\":1}}],[\"即属性值内无空格或逗号时\",{\"1\":{\"19\":1}}],[\"即默认启用\",{\"1\":{\"14\":1}}],[\"即可一键接入规约\",{\"1\":{\"10\":1}}],[\"是本包的默认配置\",{\"1\":{\"125\":1}}],[\"是遵循\",{\"1\":{\"103\":1}}],[\"是在提交的最后加上签名\",{\"1\":{\"96\":1}}],[\"是以邮件列表作为代码评审的平台\",{\"1\":{\"91\":1}}],[\"是一个不会静默丢失消息的协议\",{\"1\":{\"81\":2}}],[\"是一个独立的执行单元\",{\"1\":{\"57\":1}}],[\"是微软开发的一款开源编程语言\",{\"1\":{\"71\":1}}],[\"是没有必要的\",{\"1\":{\"64\":1}}],[\"是用于原型继承的内建方法\",{\"1\":{\"58\":1}}],[\"是不必要的\",{\"1\":{\"52\":1,\"58\":1,\"61\":1}}],[\"是块级作用域\",{\"1\":{\"52\":1}}],[\"是当\",{\"1\":{\"44\":1}}],[\"是由于\",{\"1\":{\"21\":1}}],[\"是因为它们决定了元素的布局\",{\"1\":{\"21\":1}}],[\"是否在当前仓库下\",{\"1\":{\"97\":1}}],[\"是否是对象自身的属性进行验证\",{\"1\":{\"61\":1}}],[\"是否有必要对其进行拆分\",{\"1\":{\"57\":1}}],[\"是否禁用自动在初始化完成后安装依赖\",{\"1\":{\"14\":1}}],[\"是否启用\",{\"1\":{\"14\":4,\"16\":4}}],[\"是印客学院\",{\"1\":{\"5\":1}}],[\"说明和ppt\",{\"1\":{\"80\":1}}],[\"说明还要做什么或者问题的解决方案\",{\"1\":{\"63\":1}}],[\"说明问题是什么\",{\"1\":{\"63\":1}}],[\"说明\",{\"1\":{\"14\":1,\"16\":1,\"72\":1}}],[\"默认解析器不支持的语法\",{\"1\":{\"161\":1}}],[\"默认当存在\",{\"1\":{\"121\":1}}],[\"默认值\",{\"1\":{\"14\":1,\"16\":1}}],[\"默认仅对\",{\"1\":{\"10\":1}}],[\"driessen\",{\"1\":{\"100\":1}}],[\"dry\",{\"1\":{\"23\":2}}],[\"dd\",{\"1\":{\"76\":1}}],[\"duplicates\",{\"1\":{\"59\":1}}],[\"dupe\",{\"1\":{\"58\":1}}],[\"d\",{\"1\":{\"52\":2,\"60\":7,\"72\":3,\"127\":1,\"131\":1,\"132\":1,\"135\":1,\"139\":1,\"143\":1,\"147\":1,\"148\":1,\"151\":1,\"155\":1}}],[\"date\",{\"1\":{\"76\":1}}],[\"data\",{\"1\":{\"36\":3,\"50\":2,\"52\":6,\"56\":4}}],[\"dana\",{\"1\":{\"45\":2}}],[\"dangle\",{\"1\":{\"45\":1,\"64\":1}}],[\"dns\",{\"1\":{\"30\":3,\"67\":7}}],[\"dtd\",{\"1\":{\"27\":3}}],[\"dojo\",{\"1\":{\"85\":1}}],[\"dowork\",{\"1\":{\"72\":2}}],[\"dosomethingelse\",{\"1\":{\"61\":2}}],[\"dosomething\",{\"1\":{\"57\":4,\"61\":6}}],[\"dosomethingwith\",{\"1\":{\"52\":2}}],[\"dot\",{\"1\":{\"56\":1}}],[\"docs\",{\"1\":{\"81\":2,\"94\":2,\"96\":12,\"115\":1}}],[\"docx\",{\"1\":{\"75\":1}}],[\"documentation\",{\"1\":{\"76\":1}}],[\"document\",{\"1\":{\"55\":1}}],[\"doctype\",{\"1\":{\"27\":5,\"30\":2,\"33\":1,\"39\":1}}],[\"dog\",{\"1\":{\"48\":4}}],[\"do\",{\"1\":{\"47\":1,\"60\":2,\"61\":2,\"64\":1,\"101\":1}}],[\"dom\",{\"1\":{\"30\":1,\"85\":1}}],[\"done\",{\"1\":{\"50\":2}}],[\"donothing\",{\"1\":{\"47\":1}}],[\"don\",{\"1\":{\"23\":1}}],[\"directory\",{\"1\":{\"69\":1}}],[\"direction\",{\"1\":{\"21\":1,\"61\":1}}],[\"diff\",{\"1\":{\"45\":2,\"76\":5}}],[\"diffs\",{\"1\":{\"45\":1}}],[\"disable\",{\"1\":{\"72\":5}}],[\"disabled\",{\"1\":{\"36\":2}}],[\"disabled=\",{\"1\":{\"36\":1}}],[\"disablenpminstall\",{\"1\":{\"14\":2}}],[\"display\",{\"1\":{\"21\":3}}],[\"div>\",{\"1\":{\"37\":4,\"39\":1}}],[\"div\",{\"1\":{\"20\":1,\"55\":4}}],[\"dev\",{\"1\":{\"106\":1,\"108\":1,\"109\":1,\"158\":1,\"163\":1,\"166\":1}}],[\"develop\",{\"1\":{\"101\":1}}],[\"developer\",{\"1\":{\"81\":2}}],[\"debian\",{\"1\":{\"85\":1}}],[\"debug\",{\"1\":{\"62\":2}}],[\"debugger\",{\"1\":{\"62\":4}}],[\"deprecation\",{\"1\":{\"76\":1}}],[\"depth\",{\"1\":{\"61\":6}}],[\"delimiter\",{\"1\":{\"72\":1}}],[\"deleted\",{\"1\":{\"96\":1}}],[\"delete\",{\"1\":{\"56\":1,\"96\":5}}],[\"design\",{\"1\":{\"77\":12,\"78\":1}}],[\"desc\",{\"1\":{\"76\":1}}],[\"descriptive\",{\"1\":{\"57\":1}}],[\"description\",{\"1\":{\"39\":1}}],[\"destructuring\",{\"1\":{\"56\":1}}],[\"definitions\",{\"1\":{\"72\":1}}],[\"defined\",{\"1\":{\"52\":1,\"57\":1}}],[\"define\",{\"1\":{\"52\":1}}],[\"default`\",{\"1\":{\"61\":1}}],[\"default\",{\"1\":{\"15\":2,\"49\":3,\"59\":11,\"61\":12,\"63\":4,\"64\":2}}],[\"defaultformatter\",{\"1\":{\"10\":1}}],[\"determined\",{\"1\":{\"47\":1}}],[\"declare\",{\"1\":{\"72\":10}}],[\"declared\",{\"1\":{\"52\":2}}],[\"declarations\",{\"1\":{\"19\":1,\"57\":1}}],[\"declaration\",{\"1\":{\"19\":3,\"21\":2}}],[\"decoration\",{\"1\":{\"21\":1}}],[\"txt\",{\"1\":{\"75\":1}}],[\"t3\",{\"1\":{\"72\":2}}],[\"t2\",{\"1\":{\"72\":2}}],[\"t1\",{\"1\":{\"72\":2}}],[\"tag\",{\"0\":{\"103\":1},\"1\":{\"63\":8,\"103\":3}}],[\"table\",{\"1\":{\"21\":1,\"77\":1}}],[\"tab\",{\"1\":{\"19\":1,\"21\":1,\"33\":1,\"43\":1,\"63\":4}}],[\"two\",{\"1\":{\"56\":2}}],[\"twojediwalkintoacantina\",{\"1\":{\"56\":2}}],[\"ternary\",{\"1\":{\"60\":2}}],[\"template\",{\"1\":{\"54\":1}}],[\"test\",{\"1\":{\"48\":4,\"52\":2,\"57\":13,\"67\":3,\"94\":2,\"117\":1}}],[\"textdecoder\",{\"1\":{\"67\":3}}],[\"textencoder\",{\"1\":{\"67\":3}}],[\"text\",{\"1\":{\"20\":1,\"21\":3,\"30\":5,\"36\":2}}],[\"title>\",{\"1\":{\"31\":1,\"33\":1,\"39\":1}}],[\"title\",{\"1\":{\"31\":1,\"63\":5}}],[\"tool\",{\"1\":{\"67\":4}}],[\"toboolean\",{\"1\":{\"61\":1}}],[\"total\",{\"1\":{\"57\":2,\"63\":3}}],[\"token\",{\"1\":{\"57\":1}}],[\"tod\",{\"1\":{\"54\":2,\"56\":2}}],[\"todo\",{\"1\":{\"47\":1,\"63\":3}}],[\"tostring\",{\"1\":{\"53\":1}}],[\"toggle\",{\"1\":{\"36\":2}}],[\"to\",{\"1\":{\"30\":1,\"38\":1,\"44\":2,\"47\":1,\"53\":1,\"57\":1,\"63\":4,\"72\":1}}],[\"top\",{\"1\":{\"19\":6,\"21\":5,\"55\":4}}],[\"t\",{\"1\":{\"23\":1,\"47\":1,\"53\":1,\"63\":1,\"72\":9}}],[\"than\",{\"1\":{\"72\":1}}],[\"that\",{\"1\":{\"44\":2}}],[\"throw\",{\"1\":{\"67\":12}}],[\"throws\",{\"1\":{\"52\":4}}],[\"the\",{\"1\":{\"57\":5,\"63\":8,\"72\":1,\"83\":2,\"101\":1}}],[\"theme\",{\"1\":{\"23\":1}}],[\"thisismyfunction\",{\"1\":{\"64\":1}}],[\"thisismyobject\",{\"1\":{\"64\":1}}],[\"thisismystring\",{\"1\":{\"64\":1}}],[\"this\",{\"1\":{\"50\":2,\"54\":3,\"57\":1,\"58\":15,\"63\":9,\"64\":10,\"69\":5,\"72\":10}}],[\"thing\",{\"1\":{\"72\":1,\"101\":1}}],[\"thing2\",{\"1\":{\"47\":2}}],[\"thing1\",{\"1\":{\"47\":4}}],[\"third\",{\"1\":{\"19\":2}}],[\"typedef\",{\"1\":{\"72\":1}}],[\"types\",{\"1\":{\"72\":1}}],[\"typescript\",{\"0\":{\"71\":1,\"141\":2,\"145\":2,\"149\":2,\"153\":2},\"1\":{\"2\":1,\"3\":1,\"6\":1,\"15\":6,\"71\":1,\"72\":35,\"124\":2,\"141\":3,\"142\":3,\"143\":3,\"144\":3,\"145\":2,\"146\":3,\"147\":3,\"148\":2,\"149\":2,\"150\":3,\"151\":3,\"152\":1,\"153\":3,\"154\":3,\"155\":3,\"156\":1,\"159\":1,\"160\":1}}],[\"typeerror\",{\"1\":{\"55\":1,\"56\":1}}],[\"typeof\",{\"1\":{\"53\":7}}],[\"type\",{\"0\":{\"94\":1},\"1\":{\"30\":2,\"53\":1,\"63\":26,\"72\":30,\"76\":3,\"94\":3,\"101\":3}}],[\"type=\",{\"1\":{\"20\":1,\"30\":3,\"36\":4}}],[\"type=text\",{\"1\":{\"20\":1}}],[\"triple\",{\"1\":{\"72\":1}}],[\"trulyundefined\",{\"1\":{\"72\":1}}],[\"true\",{\"1\":{\"14\":6,\"16\":7,\"36\":1,\"48\":2,\"52\":2,\"53\":4,\"56\":1,\"57\":3,\"60\":2,\"61\":6,\"63\":4,\"69\":1,\"72\":2}}],[\"try\",{\"1\":{\"47\":3,\"67\":1}}],[\"tr\",{\"1\":{\"27\":1}}],[\"transform\",{\"1\":{\"21\":1}}],[\"transitional\",{\"1\":{\"27\":2}}],[\"transition\",{\"1\":{\"21\":1,\"23\":1}}],[\"trailing\",{\"1\":{\"19\":1}}],[\"tsconfig\",{\"1\":{\"120\":2,\"144\":2}}],[\"ts3\",{\"1\":{\"72\":1}}],[\"tslint\",{\"1\":{\"72\":11}}],[\"ts\",{\"1\":{\"15\":1,\"72\":11,\"119\":1,\"120\":4,\"144\":1,\"145\":1,\"149\":1,\"159\":1,\"160\":1}}],[\"a11y\",{\"1\":{\"130\":1,\"132\":2,\"146\":1,\"148\":2}}],[\"air\",{\"1\":{\"85\":3}}],[\"airbnb\",{\"1\":{\"24\":1,\"65\":1,\"70\":1}}],[\"author\",{\"1\":{\"63\":4,\"96\":2}}],[\"automatic\",{\"1\":{\"44\":1}}],[\"about\",{\"1\":{\"115\":1}}],[\"above\",{\"1\":{\"72\":1}}],[\"abacus\",{\"1\":{\"63\":1}}],[\"absolute\",{\"1\":{\"21\":1}}],[\"amd\",{\"1\":{\"59\":1}}],[\"active\",{\"1\":{\"56\":3,\"63\":4}}],[\"access\",{\"1\":{\"123\":2}}],[\"accessibility\",{\"1\":{\"37\":1,\"38\":1,\"72\":1}}],[\"accesskeytoken\",{\"1\":{\"123\":2}}],[\"accesskeysecret\",{\"1\":{\"123\":2}}],[\"accesskey\",{\"1\":{\"34\":2}}],[\"adjacent\",{\"1\":{\"72\":1}}],[\"add\",{\"1\":{\"95\":1,\"108\":1}}],[\"address\",{\"1\":{\"67\":2}}],[\"adding\",{\"1\":{\"64\":1}}],[\"added\",{\"1\":{\"56\":2}}],[\"addvalue\",{\"1\":{\"56\":2}}],[\"ada\",{\"1\":{\"45\":2}}],[\"apple\",{\"1\":{\"85\":1}}],[\"apply\",{\"1\":{\"55\":2,\"58\":1}}],[\"apache\",{\"1\":{\"85\":1}}],[\"api\",{\"0\":{\"11\":1,\"13\":1},\"1\":{\"3\":1,\"6\":1,\"67\":2,\"98\":1}}],[\"arguments\",{\"1\":{\"57\":8}}],[\"args\",{\"1\":{\"55\":4,\"57\":5}}],[\"arg\",{\"1\":{\"52\":13,\"72\":11}}],[\"arrow\",{\"1\":{\"57\":2}}],[\"array<\",{\"1\":{\"72\":2}}],[\"array<string\",{\"1\":{\"72\":1}}],[\"array<string>\",{\"1\":{\"72\":1}}],[\"array<mytype>\",{\"1\":{\"72\":1}}],[\"array<t>\",{\"1\":{\"72\":2}}],[\"array1\",{\"1\":{\"55\":6}}],[\"array\",{\"1\":{\"55\":16,\"57\":1,\"72\":1}}],[\"arr\",{\"1\":{\"52\":4,\"55\":5}}],[\"ajax\",{\"1\":{\"50\":2,\"85\":1}}],[\"age\",{\"1\":{\"48\":2,\"53\":4,\"58\":4,\"72\":1,\"83\":2}}],[\"atom\",{\"1\":{\"56\":2}}],[\"attr\",{\"1\":{\"48\":2}}],[\"attribute\",{\"1\":{\"20\":1}}],[\"atime\",{\"1\":{\"45\":2}}],[\"asserted\",{\"1\":{\"72\":1}}],[\"assertion\",{\"1\":{\"72\":1}}],[\"assertions\",{\"1\":{\"72\":1}}],[\"assertiions\",{\"1\":{\"72\":1}}],[\"assign\",{\"1\":{\"52\":1,\"56\":3,\"62\":1}}],[\"as\",{\"1\":{\"59\":3,\"72\":17}}],[\"async\",{\"1\":{\"44\":2,\"67\":4,\"69\":3,\"72\":1}}],[\"asi\",{\"1\":{\"44\":1}}],[\"as=\",{\"1\":{\"30\":2}}],[\"a>\",{\"1\":{\"36\":2}}],[\"ak\",{\"1\":{\"34\":1}}],[\"alpha\",{\"1\":{\"76\":3}}],[\"alias\",{\"1\":{\"72\":1}}],[\"align\",{\"1\":{\"21\":4}}],[\"alloc\",{\"1\":{\"67\":2}}],[\"alert\",{\"1\":{\"62\":6}}],[\"already\",{\"1\":{\"52\":2}}],[\"alt\",{\"1\":{\"38\":2}}],[\"alt=\",{\"1\":{\"33\":1,\"35\":2,\"38\":2}}],[\"angularjs\",{\"1\":{\"84\":1,\"85\":1,\"104\":2}}],[\"angular\",{\"1\":{\"78\":1,\"83\":3,\"84\":1}}],[\"ant\",{\"1\":{\"77\":12,\"78\":1}}],[\"annotation\",{\"1\":{\"72\":1}}],[\"any\",{\"1\":{\"72\":4}}],[\"anobject\",{\"1\":{\"64\":2}}],[\"an\",{\"1\":{\"63\":1,\"64\":2,\"67\":1,\"72\":6}}],[\"anakin\",{\"1\":{\"56\":1}}],[\"anakinskywalker\",{\"1\":{\"56\":3}}],[\"anchors\",{\"1\":{\"37\":1}}],[\"animation\",{\"1\":{\"21\":1}}],[\"android\",{\"1\":{\"85\":1}}],[\"and\",{\"1\":{\"21\":1,\"123\":1}}],[\"a\",{\"1\":{\"20\":3,\"23\":2,\"30\":1,\"37\":1,\"48\":3,\"52\":20,\"53\":3,\"55\":8,\"56\":11,\"57\":16,\"60\":11,\"63\":5,\"64\":1,\"72\":16,\"76\":2,\"78\":1,\"100\":1,\"103\":1}}],[\"after\",{\"1\":{\"19\":3,\"59\":1}}],[\"afterdeclaration\",{\"1\":{\"19\":1}}],[\"await\",{\"1\":{\"14\":1,\"67\":4,\"69\":3}}],[\"示例\",{\"1\":{\"14\":1,\"45\":2}}],[\"效果等同于\",{\"1\":{\"14\":1}}],[\"将风格问题降级\",{\"0\":{\"160\":1}}],[\"将能提升所有人的阅读体验\",{\"1\":{\"80\":1}}],[\"将非公开成员的可访问性设置为\",{\"1\":{\"72\":1}}],[\"将它们放到模块的最上方以防止异常行为\",{\"1\":{\"59\":1}}],[\"将它用小括号包裹可以更清晰的体现这点\",{\"1\":{\"57\":1}}],[\"将不利于函数的维护和调用\",{\"1\":{\"57\":1}}],[\"将立即执行函数表达式\",{\"1\":{\"57\":1}}],[\"将简写的属性写在一起\",{\"1\":{\"56\":1}}],[\"将对象的简写属性写在一起\",{\"1\":{\"56\":1}}],[\"将数组去重\",{\"1\":{\"55\":1}}],[\"将类数组结构\",{\"1\":{\"55\":1}}],[\"将表达式的结果强制转换成布尔值是多余的\",{\"1\":{\"53\":1}}],[\"将\",{\"1\":{\"52\":2}}],[\"将嵌套的选择器放到块的末尾\",{\"1\":{\"23\":1}}],[\"将项目一键接入规约\",{\"1\":{\"14\":1}}],[\"将会提示存在冲突的依赖和配置\",{\"1\":{\"10\":1}}],[\"初始化为\",{\"1\":{\"72\":1}}],[\"初始化\",{\"0\":{\"14\":1}}],[\"忽略\",{\"1\":{\"10\":1}}],[\"26152\",{\"1\":{\"77\":2}}],[\"26219\",{\"1\":{\"77\":2}}],[\"26230\",{\"1\":{\"77\":2}}],[\"25\",{\"1\":{\"126\":1,\"130\":1,\"134\":1,\"138\":1,\"142\":1,\"146\":1,\"150\":1,\"154\":1}}],[\"25939\",{\"1\":{\"77\":2}}],[\"255\",{\"1\":{\"19\":6}}],[\"23\",{\"1\":{\"77\":1}}],[\"2015\",{\"1\":{\"83\":1,\"85\":1}}],[\"2012\",{\"1\":{\"81\":1}}],[\"2020\",{\"1\":{\"76\":2,\"77\":2,\"100\":1}}],[\"20200905\",{\"1\":{\"76\":1}}],[\"20\",{\"1\":{\"69\":1}}],[\"20px\",{\"1\":{\"20\":2,\"23\":2}}],[\"2px\",{\"1\":{\"19\":2}}],[\"2\",{\"0\":{\"20\":1,\"23\":1,\"28\":1,\"32\":1,\"33\":1,\"34\":2,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"44\":1,\"47\":1,\"51\":1,\"52\":1,\"53\":2,\"54\":2,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"68\":1,\"76\":1,\"82\":1,\"90\":1,\"91\":1,\"92\":2,\"95\":1,\"99\":1,\"100\":1,\"101\":2,\"102\":1},\"1\":{\"10\":1,\"19\":2,\"20\":4,\"21\":1,\"23\":10,\"28\":1,\"29\":1,\"30\":1,\"33\":2,\"34\":8,\"35\":3,\"36\":4,\"37\":1,\"38\":1,\"43\":2,\"44\":1,\"45\":1,\"47\":3,\"48\":2,\"49\":1,\"50\":1,\"52\":21,\"53\":9,\"54\":7,\"55\":16,\"56\":23,\"57\":31,\"58\":6,\"59\":13,\"60\":7,\"61\":17,\"62\":6,\"63\":1,\"64\":1,\"67\":1,\"68\":10,\"69\":1,\"72\":5,\"75\":1,\"76\":18,\"81\":3,\"82\":4,\"83\":1,\"85\":1,\"96\":1,\"97\":6,\"102\":3,\"103\":3,\"130\":1,\"142\":1,\"146\":2,\"150\":1,\"154\":1}}],[\"执行环境中会包含一些全局变量和原生对象\",{\"1\":{\"62\":1}}],[\"执行环境都支持了这一特性\",{\"1\":{\"53\":1}}],[\"执行\",{\"1\":{\"10\":1}}],[\"17\",{\"1\":{\"130\":1,\"146\":1}}],[\"1n\",{\"1\":{\"72\":3}}],[\"14218\",{\"1\":{\"101\":2}}],[\"14\",{\"1\":{\"57\":1,\"67\":1}}],[\"15\",{\"1\":{\"57\":5}}],[\"15px\",{\"1\":{\"19\":28,\"20\":2,\"23\":4,\"30\":2}}],[\"16\",{\"1\":{\"53\":1,\"67\":2,\"126\":2,\"130\":2,\"134\":2,\"138\":2}}],[\"162\",{\"1\":{\"19\":2}}],[\"1379\",{\"1\":{\"101\":2}}],[\"13px\",{\"1\":{\"21\":1}}],[\"13\",{\"1\":{\"19\":1,\"57\":1}}],[\"11\",{\"1\":{\"19\":1,\"57\":1,\"59\":1}}],[\"115\",{\"1\":{\"19\":2}}],[\"12\",{\"1\":{\"19\":1,\"56\":2,\"57\":1,\"59\":1,\"77\":1}}],[\"123\",{\"1\":{\"19\":2}}],[\"124\",{\"1\":{\"19\":2}}],[\"1000\",{\"1\":{\"50\":1}}],[\"100px\",{\"1\":{\"21\":2}}],[\"100\",{\"1\":{\"19\":1,\"21\":1,\"50\":2}}],[\"10\",{\"0\":{\"62\":1},\"1\":{\"19\":1,\"52\":1,\"53\":4,\"57\":4,\"59\":1,\"61\":1,\"62\":5,\"72\":2}}],[\"10px\",{\"1\":{\"19\":6,\"20\":2,\"21\":2,\"23\":1}}],[\"1px\",{\"1\":{\"19\":4,\"21\":1}}],[\"1\",{\"0\":{\"18\":1,\"19\":2,\"20\":1,\"21\":1,\"22\":1,\"26\":1,\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"33\":1,\"42\":1,\"43\":2,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"52\":1,\"67\":1,\"75\":1,\"81\":1,\"88\":1,\"89\":2,\"90\":1,\"91\":2,\"92\":1,\"93\":1,\"94\":2,\"95\":1,\"96\":1,\"100\":1},\"1\":{\"10\":1,\"19\":27,\"20\":4,\"21\":12,\"22\":2,\"23\":1,\"27\":4,\"28\":2,\"29\":3,\"30\":6,\"31\":3,\"33\":2,\"34\":1,\"35\":1,\"36\":5,\"37\":1,\"38\":1,\"43\":3,\"44\":2,\"45\":3,\"46\":2,\"47\":4,\"48\":6,\"49\":4,\"50\":4,\"52\":27,\"53\":3,\"54\":1,\"55\":14,\"56\":13,\"57\":34,\"58\":5,\"59\":1,\"60\":7,\"61\":9,\"62\":2,\"63\":1,\"64\":1,\"67\":6,\"68\":1,\"69\":1,\"72\":10,\"75\":4,\"76\":17,\"81\":10,\"82\":1,\"83\":1,\"84\":1,\"96\":3,\"97\":6,\"101\":2,\"102\":1,\"130\":1,\"146\":1}}],[\"注明修复的问题\",{\"1\":{\"76\":1}}],[\"注入\",{\"1\":{\"68\":1}}],[\"注意引用顺序\",{\"1\":{\"67\":1}}],[\"注意\",{\"1\":{\"38\":1,\"94\":1}}],[\"注释指令时需跟随描述说明\",{\"1\":{\"72\":1}}],[\"注释指明\",{\"1\":{\"61\":2}}],[\"注释行上面是一个块的顶部时不需要空行\",{\"1\":{\"63\":1}}],[\"注释行上方需要一个空行\",{\"1\":{\"63\":1}}],[\"注释行上方需要有一个空行\",{\"1\":{\"63\":1}}],[\"注释行上方需留有一行空行\",{\"1\":{\"19\":1}}],[\"注释应单独一行写在被注释对象的上方\",{\"1\":{\"63\":1}}],[\"注释的原则\",{\"1\":{\"63\":1}}],[\"注释的目的\",{\"1\":{\"63\":1}}],[\"注释内容和注释符之间需要有一个空格\",{\"1\":{\"63\":2}}],[\"注释内容和注释符之间留有一个空格\",{\"1\":{\"19\":1}}],[\"注释内容\",{\"1\":{\"34\":1}}],[\"注释符单独占一行\",{\"1\":{\"34\":1}}],[\"注释代码中\",{\"1\":{\"34\":1}}],[\"注释\",{\"0\":{\"34\":1,\"63\":1},\"1\":{\"41\":1,\"72\":1}}],[\"注\",{\"1\":{\"10\":2,\"101\":1}}],[\"问题也卡口\",{\"1\":{\"10\":1}}],[\"问题卡口\",{\"1\":{\"10\":1}}],[\"fps\",{\"1\":{\"85\":1}}],[\"fn\",{\"1\":{\"72\":2}}],[\"f\",{\"1\":{\"72\":8}}],[\"fs\",{\"1\":{\"67\":27,\"69\":3,\"72\":4}}],[\"f2\",{\"1\":{\"57\":2}}],[\"f1\",{\"1\":{\"57\":3}}],[\"func\",{\"1\":{\"57\":1,\"72\":8}}],[\"function\",{\"1\":{\"43\":2,\"44\":4,\"45\":3,\"47\":1,\"48\":6,\"49\":2,\"50\":1,\"52\":14,\"54\":2,\"55\":2,\"56\":6,\"57\":25,\"58\":4,\"59\":2,\"61\":2,\"62\":1,\"63\":9,\"64\":5,\"67\":7,\"69\":1,\"72\":33}}],[\"from\",{\"1\":{\"49\":3,\"55\":4,\"59\":20,\"67\":14,\"72\":3,\"83\":2}}],[\"favorite\",{\"1\":{\"95\":1}}],[\"family\",{\"1\":{\"67\":2}}],[\"fallthrough\",{\"1\":{\"61\":1}}],[\"false\",{\"1\":{\"14\":2,\"36\":1,\"46\":3,\"48\":2,\"52\":3,\"53\":5,\"56\":1,\"57\":1,\"60\":2,\"61\":6}}],[\"failed\",{\"1\":{\"50\":2}}],[\"fail\",{\"1\":{\"50\":2}}],[\"father\",{\"1\":{\"44\":2}}],[\"found\",{\"1\":{\"168\":1}}],[\"follow\",{\"1\":{\"57\":1,\"66\":1}}],[\"form\",{\"1\":{\"77\":1}}],[\"for\",{\"1\":{\"55\":1,\"57\":5,\"60\":2,\"61\":12}}],[\"foreach\",{\"1\":{\"44\":2,\"55\":3,\"57\":2}}],[\"footer\",{\"1\":{\"90\":2,\"91\":2,\"95\":1,\"96\":2}}],[\"foolish\",{\"1\":{\"83\":2}}],[\"foo3\",{\"1\":{\"72\":3}}],[\"foo2\",{\"1\":{\"72\":2}}],[\"foo1\",{\"1\":{\"72\":2}}],[\"foo\",{\"1\":{\"35\":4,\"43\":2,\"44\":2,\"46\":5,\"47\":2,\"48\":14,\"49\":17,\"50\":14,\"52\":48,\"53\":6,\"54\":3,\"55\":7,\"56\":15,\"57\":18,\"58\":7,\"59\":33,\"60\":8,\"61\":20,\"62\":2,\"64\":3,\"67\":4,\"72\":128}}],[\"fonts\",{\"1\":{\"30\":2}}],[\"font\",{\"1\":{\"21\":6,\"23\":1}}],[\"f0f0f0\",{\"1\":{\"23\":1}}],[\"flag>\",{\"1\":{\"72\":1}}],[\"flag\",{\"1\":{\"52\":6,\"53\":2}}],[\"flow\",{\"1\":{\"100\":2,\"102\":1}}],[\"florence\",{\"1\":{\"45\":2}}],[\"float\",{\"1\":{\"21\":3}}],[\"flex\",{\"1\":{\"21\":1}}],[\"f5f5f5\",{\"1\":{\"21\":1}}],[\"fff\",{\"1\":{\"21\":1}}],[\"ffffff\",{\"1\":{\"21\":1}}],[\"field\",{\"1\":{\"72\":1}}],[\"findindex\",{\"1\":{\"55\":1,\"57\":1}}],[\"find\",{\"1\":{\"55\":1,\"57\":1}}],[\"finally\",{\"1\":{\"47\":1}}],[\"fight\",{\"1\":{\"48\":4}}],[\"first\",{\"1\":{\"55\":2,\"59\":1}}],[\"firstname\",{\"1\":{\"45\":11,\"56\":7,\"64\":4}}],[\"firefox\",{\"1\":{\"30\":1,\"85\":1}}],[\"fit=cover\",{\"1\":{\"29\":1,\"39\":1}}],[\"fit\",{\"1\":{\"21\":1,\"29\":1}}],[\"fill\",{\"1\":{\"21\":1}}],[\"filter\",{\"1\":{\"21\":1,\"55\":1,\"57\":1}}],[\"filepath\",{\"1\":{\"67\":4}}],[\"file\",{\"1\":{\"10\":2,\"64\":1}}],[\"fixed\",{\"1\":{\"97\":1}}],[\"fixes\",{\"1\":{\"76\":1,\"97\":1}}],[\"fixme\",{\"1\":{\"63\":3}}],[\"fix\",{\"1\":{\"10\":1,\"94\":2,\"97\":4,\"101\":1,\"161\":1}}],[\"feat\",{\"1\":{\"94\":2,\"101\":1}}],[\"features\",{\"1\":{\"76\":1}}],[\"fed\",{\"1\":{\"84\":1}}],[\"fetching\",{\"1\":{\"63\":2}}],[\"fetchdata\",{\"1\":{\"52\":3}}],[\"fefefe\",{\"1\":{\"21\":2}}],[\"fe\",{\"0\":{\"5\":1,\"105\":1,\"109\":1,\"124\":1,\"125\":1,\"129\":1,\"133\":1,\"137\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1,\"162\":1,\"165\":1},\"1\":{\"3\":6,\"4\":2,\"5\":1,\"6\":5,\"8\":2,\"10\":15,\"12\":1,\"14\":6,\"16\":5,\"106\":1,\"107\":1,\"109\":1,\"111\":2,\"112\":1,\"127\":1,\"128\":1,\"131\":1,\"132\":3,\"135\":1,\"136\":1,\"139\":1,\"140\":1,\"143\":1,\"144\":2,\"147\":1,\"148\":3,\"151\":1,\"152\":1,\"155\":1,\"156\":1,\"159\":1,\"160\":3,\"161\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1}}],[\"及几个测试框架的环境\",{\"1\":{\"161\":1}}],[\"及之后的执行环境以\",{\"1\":{\"53\":1}}],[\"及之前版本的\",{\"1\":{\"15\":1}}],[\"及其预编译语言\",{\"1\":{\"17\":1}}],[\"及保存时自动运行\",{\"1\":{\"10\":1}}],[\"及黑名单文件\",{\"1\":{\"10\":2}}],[\"插件设置为各前端语言的\",{\"1\":{\"10\":1}}],[\"插件的规则\",{\"1\":{\"133\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1}}],[\"插件的\",{\"1\":{\"10\":1}}],[\"插件推荐\",{\"1\":{\"10\":1}}],[\"设置在\",{\"1\":{\"108\":1}}],[\"设置类成员的可访问性\",{\"1\":{\"72\":1}}],[\"设置书本的页数\",{\"1\":{\"63\":1}}],[\"设置为\",{\"1\":{\"29\":1}}],[\"设置代码提交卡口\",{\"1\":{\"10\":1}}],[\"设置\",{\"0\":{\"108\":1},\"1\":{\"10\":2,\"29\":1,\"161\":1}}],[\"设计目的\",{\"0\":{\"1\":1}}],[\"写入规约相关的\",{\"1\":{\"10\":2}}],[\"写入各种配置文件\",{\"1\":{\"10\":1}}],[\"v1\",{\"1\":{\"103\":3}}],[\"v11\",{\"1\":{\"67\":1}}],[\"v\",{\"1\":{\"103\":1}}],[\"void>\",{\"1\":{\"72\":2}}],[\"void\",{\"1\":{\"60\":5,\"72\":76}}],[\"versioning\",{\"1\":{\"115\":1}}],[\"version\",{\"1\":{\"76\":5,\"103\":1}}],[\"very\",{\"1\":{\"56\":1}}],[\"vertical\",{\"1\":{\"21\":1}}],[\"variable\",{\"1\":{\"64\":2}}],[\"variables\",{\"1\":{\"64\":7}}],[\"vars\",{\"1\":{\"52\":1}}],[\"var\",{\"1\":{\"52\":15,\"72\":4,\"117\":2,\"123\":4}}],[\"varno\",{\"1\":{\"52\":1}}],[\"vader\",{\"1\":{\"44\":2}}],[\"values\",{\"1\":{\"57\":1}}],[\"valueof\",{\"1\":{\"53\":1}}],[\"value=\",{\"1\":{\"36\":4}}],[\"value\",{\"1\":{\"19\":1,\"48\":1,\"56\":8,\"58\":4,\"62\":2,\"64\":3,\"72\":4,\"98\":1}}],[\"validate\",{\"1\":{\"10\":1}}],[\"vincent\",{\"1\":{\"100\":1}}],[\"visit\",{\"1\":{\"38\":1}}],[\"visibility\",{\"1\":{\"21\":1}}],[\"viewport\",{\"1\":{\"29\":4,\"35\":2,\"39\":2}}],[\"vmax\",{\"1\":{\"21\":1}}],[\"vmin\",{\"1\":{\"21\":1}}],[\"vh\",{\"1\":{\"21\":1}}],[\"vw\",{\"1\":{\"21\":1}}],[\"vue\",{\"0\":{\"133\":2,\"149\":2},\"1\":{\"15\":6,\"83\":3,\"124\":1,\"125\":1,\"133\":3,\"134\":2,\"135\":2,\"136\":1,\"141\":1,\"149\":2,\"150\":2,\"151\":2,\"152\":1,\"153\":1,\"160\":2}}],[\"vue等不同类型的前端项目下的标准的语法限制\",{\"1\":{\"2\":1}}],[\"vscode\",{\"1\":{\"10\":9}}],[\"符合规约的\",{\"1\":{\"10\":2}}],[\"python\",{\"1\":{\"83\":2}}],[\"php\",{\"1\":{\"83\":2,\"85\":1}}],[\"plus\",{\"1\":{\"72\":1,\"85\":1}}],[\"plusplus\",{\"1\":{\"60\":1}}],[\"plugin\",{\"0\":{\"109\":1},\"1\":{\"70\":2,\"95\":1,\"109\":1,\"111\":2,\"112\":2,\"125\":1,\"126\":1,\"127\":1,\"129\":2,\"130\":4,\"131\":3,\"132\":1,\"133\":1,\"134\":2,\"135\":2,\"137\":1,\"138\":1,\"139\":1,\"141\":1,\"142\":2,\"143\":2,\"145\":1,\"146\":5,\"147\":4,\"148\":1,\"149\":1,\"150\":3,\"151\":3,\"153\":1,\"154\":2,\"155\":2,\"157\":1,\"158\":1}}],[\"please\",{\"1\":{\"57\":1}}],[\"peek\",{\"1\":{\"58\":2}}],[\"peekablequeue\",{\"1\":{\"58\":4}}],[\"person\",{\"1\":{\"58\":3}}],[\"per\",{\"1\":{\"50\":1}}],[\"pull\",{\"1\":{\"77\":4}}],[\"put\",{\"1\":{\"57\":2}}],[\"push\",{\"1\":{\"52\":1,\"57\":2}}],[\"public\",{\"1\":{\"27\":1,\"72\":16}}],[\"png\",{\"1\":{\"33\":1,\"35\":2}}],[\"pnpm\",{\"1\":{\"2\":1}}],[\"printarg<t\",{\"1\":{\"72\":1}}],[\"private\",{\"1\":{\"64\":1,\"72\":9}}],[\"primitive\",{\"1\":{\"53\":1}}],[\"project\",{\"1\":{\"144\":2}}],[\"pro\",{\"1\":{\"85\":2}}],[\"protected\",{\"1\":{\"72\":6}}],[\"prototype\",{\"1\":{\"56\":3,\"57\":4,\"58\":3,\"61\":1,\"63\":1}}],[\"prototypes\",{\"1\":{\"56\":2}}],[\"promise<void>\",{\"1\":{\"72\":1}}],[\"promisemesomething\",{\"1\":{\"72\":1}}],[\"promise\",{\"1\":{\"69\":2}}],[\"promises\",{\"1\":{\"67\":8}}],[\"promisify\",{\"1\":{\"69\":2}}],[\"prompt\",{\"1\":{\"62\":1}}],[\"process\",{\"1\":{\"62\":1,\"67\":5,\"123\":2}}],[\"product\",{\"1\":{\"62\":1}}],[\"propname\",{\"1\":{\"72\":1}}],[\"prop\",{\"1\":{\"72\":7}}],[\"props\",{\"1\":{\"56\":1}}],[\"properties\",{\"1\":{\"21\":1}}],[\"propertyisenumerable\",{\"1\":{\"56\":1}}],[\"property\",{\"1\":{\"21\":1,\"55\":1,\"72\":1}}],[\"presets\",{\"0\":{\"112\":1}}],[\"presentation\",{\"1\":{\"38\":1}}],[\"prefer\",{\"1\":{\"52\":1,\"54\":1,\"56\":1,\"57\":2,\"59\":1,\"67\":2,\"72\":2}}],[\"prefetch\",{\"1\":{\"30\":2,\"101\":2}}],[\"preconnect\",{\"1\":{\"30\":2}}],[\"preload\",{\"1\":{\"30\":3}}],[\"prettier\",{\"0\":{\"157\":1},\"1\":{\"10\":4,\"14\":1,\"16\":1,\"157\":4,\"158\":2,\"159\":3}}],[\"prettierrc\",{\"1\":{\"10\":1,\"121\":1}}],[\"package\",{\"1\":{\"95\":1,\"114\":1}}],[\"painters\",{\"1\":{\"83\":2}}],[\"pagination\",{\"1\":{\"77\":1}}],[\"pagenum\",{\"1\":{\"63\":4}}],[\"page\",{\"1\":{\"21\":1}}],[\"panda\",{\"1\":{\"64\":4}}],[\"passwordtoken\",{\"1\":{\"122\":1,\"123\":1}}],[\"passed\",{\"1\":{\"63\":4}}],[\"pascalcase\",{\"1\":{\"64\":2}}],[\"padded\",{\"1\":{\"49\":1}}],[\"padding\",{\"1\":{\"19\":26,\"20\":4,\"21\":3,\"23\":2,\"30\":2}}],[\"parseroptions\",{\"1\":{\"144\":2}}],[\"parser\",{\"1\":{\"125\":2,\"126\":1,\"127\":1,\"130\":1,\"131\":1,\"133\":2,\"134\":2,\"135\":2,\"138\":1,\"139\":1,\"141\":2,\"142\":1,\"143\":1,\"145\":2,\"146\":1,\"147\":1,\"149\":2,\"150\":2,\"151\":2,\"153\":2,\"154\":1,\"155\":1,\"161\":3}}],[\"parseint\",{\"1\":{\"53\":8,\"72\":1}}],[\"parent\",{\"1\":{\"58\":11}}],[\"parensarrow\",{\"1\":{\"57\":1}}],[\"parensarray\",{\"1\":{\"48\":1}}],[\"param8\",{\"1\":{\"57\":3}}],[\"param7\",{\"1\":{\"57\":3}}],[\"param6\",{\"1\":{\"57\":3}}],[\"param5\",{\"1\":{\"57\":3}}],[\"param4\",{\"1\":{\"57\":3}}],[\"param3\",{\"1\":{\"57\":3}}],[\"param2\",{\"1\":{\"57\":3}}],[\"param1\",{\"1\":{\"57\":3}}],[\"param\",{\"1\":{\"57\":1,\"63\":4}}],[\"params\",{\"1\":{\"57\":2}}],[\"paragraphs\",{\"1\":{\"37\":1}}],[\"path=\",{\"1\":{\"72\":1}}],[\"path\",{\"1\":{\"30\":1}}],[\"powered\",{\"1\":{\"68\":1}}],[\"possiblevalues\",{\"1\":{\"72\":1}}],[\"post\",{\"1\":{\"50\":2,\"57\":2}}],[\"postcss\",{\"1\":{\"23\":1}}],[\"position\",{\"1\":{\"21\":3,\"46\":1}}],[\"pointer\",{\"1\":{\"21\":1}}],[\"px\",{\"1\":{\"21\":1}}],[\"pc\",{\"1\":{\"21\":1,\"85\":1}}],[\"pt\",{\"1\":{\"21\":1}}],[\"p\",{\"1\":{\"20\":1,\"37\":1}}],[\"配合\",{\"0\":{\"157\":1}}],[\"配置规则\",{\"1\":{\"161\":1}}],[\"配置中的几个常用字段\",{\"1\":{\"161\":1}}],[\"配置域名白名单\",{\"1\":{\"68\":1}}],[\"配置项\",{\"1\":{\"16\":3}}],[\"配置文件不是\",{\"1\":{\"144\":1}}],[\"配置文件进行扫描\",{\"1\":{\"16\":1}}],[\"配置文件\",{\"1\":{\"10\":1}}],[\"配置及黑名单文件\",{\"1\":{\"10\":1}}],[\"配置\",{\"0\":{\"16\":1,\"128\":1,\"132\":1,\"136\":1,\"140\":1,\"144\":1,\"148\":1,\"152\":1,\"156\":1,\"159\":1},\"1\":{\"10\":5,\"105\":1,\"153\":1,\"159\":1,\"161\":1}}],[\"配置依赖\",{\"1\":{\"10\":1}}],[\"配套工具等几个部分\",{\"1\":{\"41\":1}}],[\"配套工具\",{\"0\":{\"3\":1}}],[\"等多种项目类型\",{\"1\":{\"124\":1}}],[\"等常驻分支\",{\"1\":{\"101\":1}}],[\"等方面发生的变化\",{\"1\":{\"94\":1}}],[\"等并列\",{\"1\":{\"75\":1}}],[\"等等类型能力\",{\"1\":{\"72\":1}}],[\"等服务\",{\"1\":{\"68\":1}}],[\"等条件语句中\",{\"1\":{\"53\":1}}],[\"等语句\",{\"1\":{\"47\":1}}],[\"等编译器会在编译后的代码里帮我们去掉最后额外的逗号\",{\"1\":{\"45\":1}}],[\"等压缩工具就可以解决重复代码的问题\",{\"1\":{\"23\":1}}],[\"等组合器前后各保留一个空格\",{\"1\":{\"19\":1}}],[\"等同于\",{\"1\":{\"14\":3}}],[\"等\",{\"1\":{\"10\":4,\"48\":1,\"57\":1,\"62\":1,\"67\":1,\"72\":1,\"84\":2}}],[\"为了保证一致的编码风格\",{\"1\":{\"160\":1}}],[\"为了避免冲突\",{\"1\":{\"157\":1}}],[\"为了组件\",{\"1\":{\"98\":1}}],[\"为了兼容\",{\"1\":{\"60\":1}}],[\"为此一些开源项目\",{\"1\":{\"96\":1}}],[\"为什么要有签名区\",{\"1\":{\"96\":1}}],[\"为什么要有字数限制\",{\"1\":{\"91\":1}}],[\"为什么要对\",{\"1\":{\"89\":1}}],[\"为什要学习前端工程化\",{\"0\":{\"2\":1}}],[\"为何还要再约束\",{\"1\":{\"74\":1}}],[\"为\",{\"1\":{\"38\":1}}],[\"为前缀\",{\"1\":{\"36\":2}}],[\"为项目安装规约\",{\"1\":{\"10\":1}}],[\"可共享配置\",{\"1\":{\"162\":1,\"165\":1}}],[\"可参考官网的\",{\"1\":{\"161\":2}}],[\"可通过\",{\"1\":{\"108\":1}}],[\"可写可不写\",{\"1\":{\"96\":1}}],[\"可选值及对应含义如下\",{\"1\":{\"94\":1}}],[\"可选\",{\"1\":{\"90\":1,\"130\":1,\"146\":1}}],[\"可用于忽略\",{\"1\":{\"72\":1}}],[\"可读性更好\",{\"1\":{\"57\":1}}],[\"可读性更强\",{\"1\":{\"54\":1}}],[\"可能会导致样式错误\",{\"1\":{\"98\":1}}],[\"可能会阻塞其他服务的执行\",{\"1\":{\"69\":1}}],[\"可能导致注入攻击\",{\"1\":{\"62\":1}}],[\"可能导致意想不到的效果\",{\"1\":{\"44\":1}}],[\"可能是字符串\",{\"1\":{\"60\":1}}],[\"可能是字符串的情况\",{\"1\":{\"60\":1}}],[\"可能引起\",{\"1\":{\"53\":1}}],[\"可访问性的知识\",{\"1\":{\"38\":1}}],[\"可访问性\",{\"0\":{\"38\":1}}],[\"可执行\",{\"1\":{\"8\":1}}],[\"可以通过这个参数指定其他的解析器\",{\"1\":{\"161\":1}}],[\"可以参考官网的\",{\"1\":{\"161\":1}}],[\"可以阅读官网的\",{\"1\":{\"161\":1}}],[\"可以阅读这篇\",{\"1\":{\"38\":1}}],[\"可以指代任何供人类阅读的文本材料\",{\"1\":{\"80\":1}}],[\"可以不一一对应\",{\"1\":{\"76\":1}}],[\"可以不包裹\",{\"1\":{\"60\":1}}],[\"可以帮助他们了解新版本有哪些变化\",{\"1\":{\"74\":1}}],[\"可以获得更严格的检查\",{\"1\":{\"72\":1}}],[\"可以增强代码可理解性\",{\"1\":{\"72\":1}}],[\"可以增加\",{\"1\":{\"10\":1}}],[\"可以规避掉回调地狱的问题\",{\"1\":{\"69\":1}}],[\"可以让你的代码看起来更简洁\",{\"1\":{\"69\":1}}],[\"可以让浏览器更快速高效地确定适合网页内容的渲染方式\",{\"1\":{\"29\":1}}],[\"可以考虑自己进行封装以确保不要在生产环境暴露调试信息\",{\"1\":{\"62\":1}}],[\"可以考虑用对象代替参数列表\",{\"1\":{\"57\":1}}],[\"可以也建议省略参数的小括号\",{\"1\":{\"57\":1}}],[\"可以也建议省略大括号和\",{\"1\":{\"57\":1}}],[\"可以使代码更加简洁\",{\"1\":{\"56\":1}}],[\"可以使用中文\",{\"1\":{\"92\":1}}],[\"可以使用\",{\"1\":{\"52\":1,\"72\":1}}],[\"可以使用双斜杠注释\",{\"1\":{\"23\":1}}],[\"可以利用\",{\"1\":{\"55\":1}}],[\"可以简化一些数组操作\",{\"1\":{\"55\":1}}],[\"可以提高代码整洁性\",{\"1\":{\"52\":1,\"56\":1}}],[\"可以立即将大括号闭合\",{\"1\":{\"47\":1}}],[\"可以将大括号直接闭合\",{\"1\":{\"47\":1}}],[\"可以理解为类\",{\"1\":{\"46\":1}}],[\"可以避免\",{\"1\":{\"44\":1}}],[\"可以避免这个问题\",{\"1\":{\"23\":1}}],[\"可以在\",{\"1\":{\"97\":1}}],[\"可以在新项目中尝试放弃使用\",{\"1\":{\"23\":1}}],[\"可以在拉取项目后单独执行\",{\"1\":{\"10\":1}}],[\"可以减少一个字符\",{\"1\":{\"21\":1}}],[\"可以省略包裹参数的小括号以使代码更简洁\",{\"1\":{\"57\":1}}],[\"可以省略函数体大括号和\",{\"1\":{\"57\":1}}],[\"可以省略大括号\",{\"1\":{\"46\":1}}],[\"可以省略\",{\"1\":{\"21\":1,\"58\":1}}],[\"可以看到这些\",{\"1\":{\"6\":1}}],[\"可以为项目一键接入规约\",{\"1\":{\"5\":1}}],[\"globals\",{\"1\":{\"161\":1}}],[\"global\",{\"1\":{\"62\":2,\"63\":1,\"67\":1,\"72\":1}}],[\"generator\",{\"1\":{\"57\":3}}],[\"getbar2\",{\"1\":{\"72\":1}}],[\"getbar1\",{\"1\":{\"72\":1}}],[\"getbar3\",{\"1\":{\"72\":2}}],[\"getbar\",{\"1\":{\"72\":2}}],[\"getfoo3\",{\"1\":{\"72\":2}}],[\"getfoo2\",{\"1\":{\"72\":1}}],[\"getfoo1\",{\"1\":{\"72\":1}}],[\"getfoo\",{\"1\":{\"72\":4}}],[\"getfullname\",{\"1\":{\"56\":3}}],[\"getting\",{\"1\":{\"161\":1}}],[\"gettitle\",{\"1\":{\"63\":1}}],[\"getter\",{\"1\":{\"72\":3}}],[\"gettype\",{\"1\":{\"63\":4}}],[\"get\",{\"1\":{\"57\":2,\"72\":5}}],[\"getkey\",{\"1\":{\"56\":3}}],[\"getdynamickey\",{\"1\":{\"56\":2}}],[\"getdisplayname\",{\"1\":{\"54\":2}}],[\"getdata\",{\"1\":{\"52\":2}}],[\"getxplusy\",{\"1\":{\"52\":1}}],[\"getx\",{\"1\":{\"52\":1}}],[\"givemedivposition\",{\"1\":{\"55\":4}}],[\"gitcafe\",{\"1\":{\"85\":1}}],[\"gitlab\",{\"1\":{\"85\":1,\"97\":1}}],[\"gitignore\",{\"1\":{\"10\":1}}],[\"github\",{\"1\":{\"4\":2,\"77\":6,\"85\":1,\"97\":1,\"100\":1}}],[\"git\",{\"0\":{\"87\":1,\"88\":1,\"99\":1,\"103\":1,\"108\":1},\"1\":{\"3\":2,\"6\":2,\"10\":2,\"45\":3,\"74\":5,\"76\":1,\"89\":1,\"91\":1,\"96\":1,\"100\":2,\"102\":1,\"103\":3,\"104\":5,\"105\":2,\"108\":1}}],[\"gulp\",{\"1\":{\"85\":1}}],[\"guard\",{\"1\":{\"61\":1}}],[\"guaranteed\",{\"1\":{\"53\":1}}],[\"guide\",{\"1\":{\"24\":3,\"40\":2,\"65\":2}}],[\"googleapis\",{\"1\":{\"30\":2}}],[\"google\",{\"1\":{\"24\":1,\"40\":1,\"65\":1}}],[\"good\",{\"1\":{\"19\":13,\"20\":2,\"21\":5,\"22\":1,\"23\":2,\"27\":1,\"30\":2,\"35\":2,\"36\":3,\"37\":1,\"38\":3,\"43\":1,\"44\":3,\"45\":5,\"46\":2,\"47\":5,\"48\":12,\"49\":5,\"50\":2,\"52\":18,\"53\":7,\"54\":3,\"55\":11,\"56\":11,\"57\":22,\"58\":6,\"59\":9,\"60\":9,\"61\":7,\"62\":3,\"63\":6,\"64\":6,\"67\":13,\"72\":29,\"75\":2,\"76\":5,\"81\":6,\"82\":3,\"83\":4,\"84\":1,\"96\":3}}],[\"gzip\",{\"1\":{\"23\":1,\"69\":1}}],[\"gap\",{\"1\":{\"21\":1}}],[\"grunt\",{\"1\":{\"85\":1}}],[\"greet\",{\"1\":{\"72\":6}}],[\"growold\",{\"1\":{\"58\":2}}],[\"grid\",{\"1\":{\"20\":1,\"21\":1}}],[\"gradient\",{\"1\":{\"19\":2}}],[\"g\",{\"1\":{\"8\":1,\"30\":1}}],[\"在包含\",{\"1\":{\"123\":1}}],[\"在需要同时维护多个版本的项目中\",{\"1\":{\"102\":1}}],[\"在内部项目\",{\"1\":{\"92\":1}}],[\"在开源项目中\",{\"1\":{\"92\":1}}],[\"在此\",{\"1\":{\"80\":1}}],[\"在撰写文档的时候如果能遵循一点良好的规约\",{\"1\":{\"80\":1}}],[\"在之后使用非空断言是错误的\",{\"1\":{\"72\":1}}],[\"在代码中应减少定义无意义的接口类型\",{\"1\":{\"72\":1}}],[\"在代码中风格统一即可\",{\"1\":{\"21\":1}}],[\"在相等比较运算符\",{\"1\":{\"72\":1}}],[\"在一些特殊场景\",{\"1\":{\"72\":1}}],[\"在类方法中返回\",{\"1\":{\"69\":1}}],[\"在客户端隐藏错误详情\",{\"1\":{\"68\":1}}],[\"在本文件中使用的常量\",{\"1\":{\"64\":1}}],[\"在某个时间把它解决\",{\"1\":{\"63\":1}}],[\"在很老版本的\",{\"1\":{\"60\":1}}],[\"在模块导入之后保留一个空行\",{\"1\":{\"59\":1}}],[\"在非函数块\",{\"1\":{\"57\":1}}],[\"在非空文件中保留拖尾换行是一种常见的\",{\"1\":{\"49\":1}}],[\"在变量被使用前再进行声明\",{\"1\":{\"52\":1}}],[\"在块末和新语句间插入一个空行\",{\"1\":{\"49\":1}}],[\"在文件末尾保留一行空行\",{\"1\":{\"49\":1}}],[\"在语义上也更加明确\",{\"1\":{\"44\":1}}],[\"在拥有多个参数的表达式中\",{\"1\":{\"23\":1}}],[\"在使用\",{\"1\":{\"19\":1,\"61\":1}}],[\"在\",{\"1\":{\"10\":1,\"21\":2,\"27\":1,\"28\":1,\"29\":1,\"30\":4,\"34\":1,\"35\":1,\"52\":4,\"53\":1,\"60\":1,\"77\":1,\"100\":1,\"104\":1,\"107\":1,\"164\":1,\"167\":1}}],[\"在项目根目录执行\",{\"1\":{\"10\":1}}],[\"在终端执行\",{\"1\":{\"8\":1}}],[\"在大型项目开发过程中\",{\"1\":{\"1\":1}}],[\"收敛屏蔽了这些依赖和配置细节\",{\"1\":{\"6\":1}}],[\"收敛屏蔽了上述依赖和配置细节\",{\"1\":{\"3\":1}}],[\"的解析器\",{\"1\":{\"161\":1}}],[\"的解构赋值\",{\"1\":{\"72\":1}}],[\"的配置文件\",{\"1\":{\"160\":1}}],[\"的配置\",{\"1\":{\"145\":1,\"149\":1}}],[\"的配套\",{\"1\":{\"6\":1}}],[\"的规则\",{\"1\":{\"129\":1,\"137\":1,\"161\":1}}],[\"的规范\",{\"1\":{\"35\":1,\"63\":1}}],[\"的原生\",{\"1\":{\"125\":1}}],[\"的版本号\",{\"1\":{\"103\":1}}],[\"的分支命名规约\",{\"1\":{\"102\":1}}],[\"的一个约定俗成的习惯\",{\"1\":{\"96\":1}}],[\"的一些新特性出现\",{\"1\":{\"23\":1}}],[\"的签名\",{\"1\":{\"96\":1}}],[\"的修改\",{\"1\":{\"95\":1}}],[\"的名称\",{\"1\":{\"95\":1}}],[\"的名字跟文件内的其他\",{\"1\":{\"59\":1}}],[\"的项目\",{\"1\":{\"95\":1,\"133\":1}}],[\"的具体取值视项目而定\",{\"1\":{\"95\":1}}],[\"的前端开发者\",{\"1\":{\"84\":1}}],[\"的格式进行规约约束\",{\"1\":{\"89\":1}}],[\"的格式都不能直接照搬\",{\"1\":{\"74\":1}}],[\"的格式\",{\"1\":{\"74\":2}}],[\"的格式呢\",{\"1\":{\"74\":1}}],[\"的方式来管理函数作用域不是我们推荐的最佳实践\",{\"1\":{\"72\":1}}],[\"的模块语法来导入导出\",{\"1\":{\"72\":1}}],[\"的变量或参数应避免显式的类型声明\",{\"1\":{\"72\":1}}],[\"的超集\",{\"1\":{\"71\":1}}],[\"的函数\",{\"1\":{\"64\":1}}],[\"的值为通过抽象方法\",{\"1\":{\"61\":1}}],[\"的隐式类型转换\",{\"1\":{\"60\":1}}],[\"的内容为对象或者有多行时\",{\"1\":{\"57\":1}}],[\"的场景却用了\",{\"1\":{\"55\":1}}],[\"的回调函数中必须包含\",{\"1\":{\"55\":1}}],[\"的空数组\",{\"1\":{\"55\":1}}],[\"的声明提升的问题\",{\"1\":{\"52\":1}}],[\"的声明提升作用\",{\"1\":{\"52\":1}}],[\"的提示\",{\"1\":{\"49\":1}}],[\"的左小括号\",{\"1\":{\"48\":1}}],[\"的多块结构中时\",{\"1\":{\"47\":1}}],[\"的多包管理方式开发一套多\",{\"1\":{\"2\":1}}],[\"的文章\",{\"1\":{\"38\":1}}],[\"的可访问性\",{\"1\":{\"38\":1}}],[\"的刘海屏\",{\"1\":{\"29\":1}}],[\"的功能\",{\"1\":{\"23\":1}}],[\"的好处是\",{\"1\":{\"21\":1,\"23\":1}}],[\"的小数\",{\"1\":{\"21\":1}}],[\"的顺序是\",{\"1\":{\"20\":1}}],[\"的编码风格和最佳实践\",{\"1\":{\"17\":1}}],[\"的\",{\"1\":{\"15\":2,\"22\":1,\"23\":2,\"47\":1,\"64\":1,\"72\":1,\"76\":1,\"84\":1,\"94\":2,\"104\":1,\"141\":1,\"153\":1,\"159\":1}}],[\"阿里巴巴前端规约\",{\"1\":{\"6\":1}}],[\"背景\",{\"0\":{\"6\":1}}],[\"h5\",{\"1\":{\"84\":1,\"85\":1}}],[\"href\",{\"1\":{\"72\":1}}],[\"href=\",{\"1\":{\"22\":1,\"30\":7,\"36\":4,\"39\":1}}],[\"home\",{\"1\":{\"120\":2}}],[\"hook\",{\"0\":{\"108\":1}}],[\"hooks\",{\"1\":{\"77\":1,\"129\":1,\"130\":1,\"131\":1,\"146\":1,\"147\":1}}],[\"hostname\",{\"1\":{\"67\":4}}],[\"hover\",{\"1\":{\"20\":1}}],[\"hackers\",{\"1\":{\"83\":2}}],[\"hasownproperty\",{\"1\":{\"56\":7,\"57\":3,\"61\":1}}],[\"hasage\",{\"1\":{\"53\":3}}],[\"has\",{\"1\":{\"52\":2}}],[\"have\",{\"1\":{\"50\":2}}],[\"haven\",{\"1\":{\"47\":1}}],[\"hungry\",{\"1\":{\"83\":2}}],[\"huaicheng\",{\"1\":{\"44\":4}}],[\"husky\",{\"1\":{\"10\":1,\"108\":5}}],[\"husky等\",{\"1\":{\"2\":1}}],[\"h1>\",{\"1\":{\"33\":1,\"35\":2}}],[\"html定义网页的结构与内容\",{\"1\":{\"81\":1}}],[\"html>\",{\"1\":{\"27\":4,\"28\":1,\"30\":4,\"33\":2,\"39\":2}}],[\"html5\",{\"1\":{\"27\":1,\"28\":1,\"30\":1,\"35\":1,\"36\":1,\"84\":1}}],[\"html\",{\"0\":{\"25\":1},\"1\":{\"23\":1,\"24\":1,\"27\":4,\"28\":2,\"29\":1,\"34\":1,\"37\":3,\"38\":2,\"39\":1,\"40\":1,\"81\":1,\"85\":1}}],[\"httpmagicobjectwithaverylongname\",{\"1\":{\"57\":2}}],[\"httpmethod\",{\"1\":{\"57\":4}}],[\"http2\",{\"1\":{\"30\":1}}],[\"https\",{\"1\":{\"4\":1,\"30\":2,\"50\":2,\"76\":4,\"77\":6,\"81\":2,\"85\":1,\"115\":1,\"116\":1}}],[\"http\",{\"1\":{\"4\":1,\"27\":1,\"67\":8,\"81\":2,\"85\":1,\"116\":1,\"117\":2,\"118\":1}}],[\"hyphens\",{\"1\":{\"21\":1}}],[\"h2\",{\"1\":{\"20\":1}}],[\"here\",{\"1\":{\"63\":1,\"72\":1}}],[\"heroargs\",{\"1\":{\"45\":1}}],[\"heroes\",{\"1\":{\"45\":2}}],[\"hero\",{\"1\":{\"45\":6}}],[\"helped\",{\"1\":{\"96\":1}}],[\"helper\",{\"1\":{\"95\":1}}],[\"hello\",{\"1\":{\"33\":1,\"38\":2,\"64\":1,\"67\":2,\"72\":6,\"82\":4}}],[\"helvetica\",{\"1\":{\"21\":1}}],[\"head\",{\"1\":{\"30\":1}}],[\"head>\",{\"1\":{\"29\":1,\"30\":3,\"31\":1,\"33\":1,\"39\":1}}],[\"header\",{\"0\":{\"93\":1},\"1\":{\"20\":2,\"23\":1,\"76\":1,\"90\":1,\"91\":3,\"95\":1}}],[\"hex\",{\"1\":{\"21\":2}}],[\"height\",{\"1\":{\"20\":2,\"21\":6,\"69\":3}}],[\"h\",{\"1\":{\"8\":1}}],[\"您可以使用encode\",{\"1\":{\"3\":1}}],[\"您可以学会\",{\"1\":{\"2\":1}}],[\"卡口\",{\"1\":{\"3\":1,\"6\":1,\"10\":1}}],[\"jasmine\",{\"1\":{\"85\":1}}],[\"java\",{\"1\":{\"83\":2,\"85\":1}}],[\"javascript\",{\"0\":{\"41\":1,\"125\":1,\"129\":1,\"133\":1,\"137\":1},\"1\":{\"1\":1,\"3\":1,\"6\":1,\"15\":4,\"30\":5,\"41\":1,\"65\":2,\"70\":1,\"71\":1,\"72\":1,\"81\":1,\"84\":1,\"85\":1,\"124\":2,\"125\":1}}],[\"jumping\",{\"1\":{\"69\":1}}],[\"jump\",{\"1\":{\"69\":2}}],[\"justify\",{\"1\":{\"21\":1}}],[\"joi\",{\"1\":{\"68\":1}}],[\"john\",{\"1\":{\"50\":2}}],[\"jedi\",{\"1\":{\"44\":4,\"69\":2}}],[\"jpg\",{\"1\":{\"38\":4}}],[\"jquery\",{\"1\":{\"30\":1,\"85\":3,\"161\":1}}],[\"jsdoc\",{\"1\":{\"63\":3}}],[\"js中跟进运行时环境\",{\"1\":{\"59\":1}}],[\"js遵循的是commonjs\",{\"1\":{\"59\":1}}],[\"js的模块\",{\"1\":{\"59\":1}}],[\"js的则选择cjs\",{\"1\":{\"59\":1}}],[\"js的数据类型包括\",{\"1\":{\"53\":1}}],[\"jsx\",{\"1\":{\"35\":2,\"72\":1,\"117\":1,\"130\":1,\"132\":2,\"146\":1,\"148\":2}}],[\"jsencode\",{\"1\":{\"10\":1}}],[\"jsonschema\",{\"1\":{\"68\":1}}],[\"jsonp\",{\"1\":{\"68\":2}}],[\"jsondata\",{\"1\":{\"50\":12}}],[\"json\",{\"1\":{\"10\":5,\"72\":1,\"85\":1,\"114\":1,\"120\":2,\"144\":2,\"164\":1}}],[\"js\",{\"0\":{\"11\":1,\"137\":1,\"153\":1},\"1\":{\"3\":1,\"6\":1,\"10\":4,\"15\":1,\"16\":2,\"30\":7,\"39\":1,\"44\":3,\"53\":1,\"56\":1,\"57\":2,\"59\":8,\"60\":3,\"62\":2,\"64\":2,\"66\":1,\"67\":3,\"69\":3,\"72\":1,\"84\":2,\"85\":5,\"107\":1,\"111\":1,\"112\":1,\"119\":1,\"120\":2,\"121\":4,\"124\":1,\"129\":1,\"133\":1,\"137\":1,\"145\":1,\"149\":1,\"153\":2,\"160\":1}}],[\"提到的组件卸载时内存泄露的问题\",{\"1\":{\"101\":1}}],[\"提交者\",{\"1\":{\"96\":1}}],[\"提交日志\",{\"1\":{\"89\":1}}],[\"提交日志格式规约\",{\"0\":{\"88\":1}}],[\"提交日志的格式进行了约束\",{\"1\":{\"74\":1}}],[\"提供\",{\"1\":{\"137\":1}}],[\"提供了多套配置文件以支持\",{\"1\":{\"124\":1}}],[\"提供了一些指令注释\",{\"1\":{\"72\":1}}],[\"提供了\",{\"1\":{\"57\":1}}],[\"提供了对象属性和方法的简写语法\",{\"1\":{\"56\":1}}],[\"提供了扩展运算符\",{\"1\":{\"55\":1}}],[\"提供的高阶函数\",{\"1\":{\"57\":1}}],[\"提供的高阶函数进行迭代运算\",{\"1\":{\"57\":1}}],[\"提供的语法糖\",{\"1\":{\"57\":1}}],[\"提供的箭头函数可以解决\",{\"1\":{\"57\":1}}],[\"提供的解构方法获取数组元素\",{\"1\":{\"55\":1}}],[\"提供的\",{\"1\":{\"52\":1}}],[\"提供简单的\",{\"1\":{\"3\":1,\"6\":1}}],[\"提示\",{\"1\":{\"41\":1,\"66\":1,\"71\":1,\"105\":1,\"124\":1,\"162\":1,\"165\":1}}],[\"提高代码的可读性\",{\"1\":{\"63\":1}}],[\"提高代码质量\",{\"1\":{\"1\":1}}],[\"提高可读性\",{\"1\":{\"60\":1}}],[\"提高网页加载性能\",{\"1\":{\"30\":1}}],[\"ssr\",{\"1\":{\"101\":2}}],[\"ssl\",{\"1\":{\"69\":1}}],[\"small\",{\"1\":{\"98\":1}}],[\"sku\",{\"1\":{\"95\":1}}],[\"skywalker\",{\"1\":{\"56\":2}}],[\"slash\",{\"1\":{\"72\":1}}],[\"slice\",{\"1\":{\"57\":1}}],[\"sn\",{\"1\":{\"72\":10}}],[\"sql\",{\"1\":{\"68\":3}}],[\"switch\",{\"1\":{\"61\":13}}],[\"swooosh\",{\"1\":{\"48\":2}}],[\"sync\",{\"1\":{\"67\":1}}],[\"syntaxerror\",{\"1\":{\"52\":2,\"57\":1}}],[\"systems\",{\"1\":{\"59\":1}}],[\"symbol\",{\"1\":{\"53\":1}}],[\"sort\",{\"1\":{\"55\":1}}],[\"somecode\",{\"1\":{\"72\":1}}],[\"somecondition\",{\"1\":{\"52\":2}}],[\"somefile\",{\"1\":{\"67\":3}}],[\"something\",{\"1\":{\"60\":2,\"61\":2}}],[\"some\",{\"1\":{\"55\":1,\"57\":1,\"62\":2}}],[\"solid\",{\"1\":{\"21\":1}}],[\"successful\",{\"1\":{\"100\":1}}],[\"subject\",{\"0\":{\"96\":1},\"1\":{\"96\":1}}],[\"subpackage\",{\"1\":{\"95\":1}}],[\"subtags\",{\"1\":{\"28\":1}}],[\"sum\",{\"1\":{\"57\":10}}],[\"supertypes\",{\"1\":{\"72\":1}}],[\"supertype\",{\"1\":{\"72\":2}}],[\"superno\",{\"1\":{\"58\":1}}],[\"super\",{\"1\":{\"58\":12,\"63\":1}}],[\"superman\",{\"1\":{\"45\":2}}],[\"superpower\",{\"1\":{\"45\":2}}],[\"s\",{\"1\":{\"44\":2,\"54\":1,\"67\":8,\"72\":11,\"90\":1,\"98\":1}}],[\"scope\",{\"0\":{\"95\":1},\"1\":{\"90\":2,\"95\":3}}],[\"scully\",{\"1\":{\"45\":2}}],[\"script\",{\"1\":{\"30\":2}}],[\"script>\",{\"1\":{\"30\":5,\"39\":1}}],[\"scale=1\",{\"1\":{\"29\":1,\"35\":2,\"39\":1}}],[\"scan\",{\"1\":{\"10\":3}}],[\"scss\",{\"1\":{\"23\":1,\"59\":2,\"166\":2}}],[\"shift\",{\"1\":{\"82\":1}}],[\"should\",{\"1\":{\"63\":1,\"64\":1,\"85\":1}}],[\"shouldn\",{\"1\":{\"63\":1}}],[\"short\",{\"1\":{\"48\":3}}],[\"shorthand\",{\"1\":{\"21\":1,\"56\":1}}],[\"shell\",{\"1\":{\"49\":1}}],[\"shadow\",{\"1\":{\"19\":2,\"21\":1,\"52\":1}}],[\"src=\",{\"1\":{\"30\":5,\"33\":1,\"35\":2,\"38\":4,\"39\":1,\"117\":1}}],[\"src\",{\"1\":{\"21\":1}}],[\"signed\",{\"1\":{\"96\":2}}],[\"signature\",{\"1\":{\"72\":1}}],[\"signatures\",{\"1\":{\"72\":2}}],[\"side\",{\"1\":{\"21\":1}}],[\"sizing\",{\"1\":{\"21\":1}}],[\"size=\",{\"1\":{\"98\":3}}],[\"size\",{\"1\":{\"21\":3,\"23\":2,\"98\":1}}],[\"single\",{\"1\":{\"19\":1}}],[\"spm\",{\"1\":{\"85\":1}}],[\"spacingobject\",{\"1\":{\"48\":1}}],[\"spacingspace\",{\"1\":{\"48\":2}}],[\"spacing\",{\"1\":{\"21\":1,\"48\":1,\"72\":1}}],[\"spaced\",{\"1\":{\"63\":1}}],[\"space\",{\"1\":{\"19\":6,\"21\":1,\"48\":1,\"77\":1}}],[\"special\",{\"1\":{\"20\":2}}],[\"spec\",{\"1\":{\"3\":2,\"4\":1,\"24\":1}}],[\"sea\",{\"1\":{\"85\":1}}],[\"semver\",{\"1\":{\"76\":1,\"103\":2}}],[\"semantic\",{\"1\":{\"64\":1,\"103\":1,\"115\":1}}],[\"semi\",{\"1\":{\"44\":1}}],[\"semicolon\",{\"1\":{\"19\":1,\"44\":1}}],[\"self\",{\"1\":{\"59\":1,\"72\":2}}],[\"select>\",{\"1\":{\"36\":2}}],[\"selected>1<\",{\"1\":{\"36\":1}}],[\"selected\",{\"1\":{\"36\":1}}],[\"selected=\",{\"1\":{\"36\":1}}],[\"select\",{\"1\":{\"21\":1}}],[\"selector+\",{\"1\":{\"19\":1}}],[\"selector>\",{\"1\":{\"19\":1}}],[\"selector\",{\"1\":{\"19\":30,\"20\":2,\"21\":10,\"23\":9}}],[\"settimeout\",{\"1\":{\"72\":2}}],[\"settings\",{\"1\":{\"10\":2}}],[\"setheight\",{\"1\":{\"69\":2}}],[\"setpagenum\",{\"1\":{\"63\":1}}],[\"set\",{\"1\":{\"48\":2,\"55\":3,\"63\":4,\"72\":2}}],[\"security\",{\"1\":{\"70\":1}}],[\"second\",{\"1\":{\"55\":2}}],[\"secondary\",{\"1\":{\"19\":2}}],[\"secret\",{\"1\":{\"34\":1,\"111\":1,\"122\":1,\"123\":3}}],[\"serif\",{\"1\":{\"21\":1}}],[\"safari\",{\"1\":{\"85\":1}}],[\"same\",{\"1\":{\"72\":1}}],[\"sans\",{\"1\":{\"21\":1}}],[\"sass\",{\"1\":{\"17\":1,\"23\":6,\"24\":1}}],[\"save\",{\"1\":{\"12\":1,\"106\":1,\"108\":1,\"109\":1,\"158\":1,\"163\":1,\"166\":1}}],[\"started\",{\"1\":{\"161\":1}}],[\"stackoverflow\",{\"1\":{\"104\":1}}],[\"stable\",{\"1\":{\"102\":2}}],[\"stay\",{\"1\":{\"83\":4}}],[\"static\",{\"1\":{\"72\":12}}],[\"stats\",{\"1\":{\"69\":2}}],[\"stat\",{\"1\":{\"69\":3}}],[\"statement\",{\"1\":{\"46\":1}}],[\"stillvoid\",{\"1\":{\"72\":1}}],[\"story\",{\"1\":{\"45\":2}}],[\"stop\",{\"1\":{\"19\":4,\"23\":1}}],[\"str\",{\"1\":{\"53\":14}}],[\"stroke\",{\"1\":{\"21\":1}}],[\"string|\",{\"1\":{\"63\":1}}],[\"string\",{\"1\":{\"14\":1,\"53\":9,\"57\":4,\"63\":2,\"64\":1,\"72\":61}}],[\"strict\",{\"1\":{\"10\":1}}],[\"styleguide\",{\"1\":{\"24\":1}}],[\"stylesheet\",{\"1\":{\"22\":1,\"30\":4,\"36\":2,\"39\":1}}],[\"style>\",{\"1\":{\"22\":1,\"30\":4}}],[\"style\",{\"1\":{\"21\":1,\"24\":2,\"30\":3,\"40\":1,\"45\":1,\"47\":1,\"57\":1,\"65\":2,\"70\":1,\"72\":6,\"94\":2}}],[\"stylelintoptions\",{\"1\":{\"16\":1}}],[\"stylelintignore\",{\"1\":{\"10\":1,\"16\":1}}],[\"stylelintrc\",{\"1\":{\"10\":1,\"16\":1,\"121\":1,\"167\":1}}],[\"stylelint\",{\"0\":{\"165\":1},\"1\":{\"2\":1,\"3\":2,\"6\":2,\"10\":7,\"14\":1,\"16\":3,\"17\":1,\"19\":11,\"20\":2,\"21\":5,\"165\":1,\"166\":5,\"167\":1}}],[\"studio\",{\"1\":{\"4\":1}}],[\"规则报错\",{\"1\":{\"161\":1}}],[\"规则由\",{\"1\":{\"137\":1}}],[\"规则\",{\"1\":{\"125\":1}}],[\"规则选项\",{\"0\":{\"121\":1}}],[\"规则内容\",{\"0\":{\"115\":1,\"117\":1,\"120\":1,\"123\":1}}],[\"规范的统一\",{\"1\":{\"98\":1}}],[\"规范或类\",{\"1\":{\"63\":1}}],[\"规范中直接将这条规则移除\",{\"1\":{\"53\":1}}],[\"规范中提到\",{\"1\":{\"28\":1}}],[\"规范\",{\"0\":{\"73\":1,\"87\":1},\"1\":{\"3\":1,\"6\":1,\"30\":1,\"35\":1,\"63\":1,\"74\":1,\"76\":1,\"105\":1,\"124\":1,\"162\":1,\"165\":1}}],[\"规约推荐的标准\",{\"1\":{\"76\":1}}],[\"规约主要包含编码风格\",{\"1\":{\"66\":1}}],[\"规约\",{\"1\":{\"3\":1,\"6\":1}}],[\"etc\",{\"1\":{\"95\":1}}],[\"err\",{\"1\":{\"67\":8}}],[\"error\",{\"1\":{\"10\":1,\"67\":13,\"72\":4,\"111\":1,\"160\":4}}],[\"egg\",{\"1\":{\"66\":1,\"137\":1,\"138\":1,\"139\":1,\"154\":1,\"155\":1}}],[\"egyptian\",{\"1\":{\"47\":3}}],[\"element\",{\"1\":{\"63\":8}}],[\"else\",{\"1\":{\"47\":11,\"49\":2,\"61\":4}}],[\"eqeqeq\",{\"1\":{\"60\":1}}],[\"eval\",{\"1\":{\"57\":1,\"62\":4}}],[\"every\",{\"1\":{\"55\":1,\"57\":1}}],[\"events\",{\"1\":{\"21\":1}}],[\"episodethree\",{\"1\":{\"56\":2}}],[\"episodeone\",{\"1\":{\"56\":2}}],[\"eol\",{\"1\":{\"49\":1}}],[\"e\",{\"1\":{\"47\":2,\"52\":2,\"72\":2}}],[\"ecmascript3\",{\"1\":{\"81\":1}}],[\"ecmascript5\",{\"1\":{\"81\":1}}],[\"ecmascript\",{\"1\":{\"41\":1,\"81\":2,\"83\":2,\"85\":3}}],[\"edit\",{\"1\":{\"108\":1}}],[\"editorconfig\",{\"1\":{\"10\":2}}],[\"edge\",{\"1\":{\"30\":1}}],[\"ease\",{\"1\":{\"23\":1}}],[\"e5e5e5\",{\"1\":{\"21\":1}}],[\"em\",{\"1\":{\"21\":1}}],[\"empty\",{\"1\":{\"19\":1,\"21\":1,\"47\":1,\"72\":3}}],[\"explore\",{\"1\":{\"85\":1}}],[\"explicit\",{\"1\":{\"72\":1}}],[\"expect\",{\"1\":{\"72\":3}}],[\"export\",{\"1\":{\"49\":3,\"59\":17,\"64\":11,\"72\":16}}],[\"exports\",{\"1\":{\"16\":1,\"59\":1,\"107\":1,\"111\":1,\"112\":1}}],[\"execsync\",{\"1\":{\"67\":1}}],[\"exit\",{\"1\":{\"67\":2}}],[\"ext\",{\"1\":{\"161\":1}}],[\"extra\",{\"1\":{\"53\":1}}],[\"extends\",{\"1\":{\"58\":8,\"63\":1,\"72\":2,\"107\":1,\"112\":1,\"128\":1,\"132\":2,\"136\":1,\"140\":1,\"144\":2,\"148\":2,\"152\":1,\"156\":1,\"159\":2,\"161\":3,\"164\":1,\"167\":1}}],[\"extend\",{\"1\":{\"23\":4,\"72\":1}}],[\"extensions\",{\"1\":{\"10\":2}}],[\"example\",{\"1\":{\"30\":6,\"36\":2,\"39\":2,\"96\":4}}],[\"ex\",{\"1\":{\"21\":1}}],[\"espree\",{\"1\":{\"161\":1}}],[\"essential\",{\"1\":{\"160\":4}}],[\"es2015\",{\"1\":{\"72\":3,\"85\":1}}],[\"escape\",{\"1\":{\"54\":1}}],[\"es11新定义\",{\"1\":{\"53\":1}}],[\"es6\",{\"1\":{\"52\":4,\"53\":1,\"55\":2,\"56\":2,\"57\":5,\"58\":2,\"59\":3,\"64\":1,\"83\":1,\"85\":1,\"161\":1}}],[\"es6+\",{\"1\":{\"41\":1}}],[\"es5\",{\"1\":{\"15\":2,\"52\":2,\"53\":4}}],[\"eslintoptions\",{\"1\":{\"16\":1}}],[\"eslinttype\",{\"0\":{\"15\":1},\"1\":{\"14\":3}}],[\"eslintignore\",{\"1\":{\"10\":1,\"16\":1}}],[\"eslintrc\",{\"1\":{\"10\":1,\"16\":1,\"111\":1,\"112\":1,\"121\":1,\"144\":1,\"159\":1}}],[\"eslint\",{\"0\":{\"109\":1,\"124\":1,\"125\":1,\"129\":1,\"133\":1,\"137\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1},\"1\":{\"3\":2,\"6\":2,\"10\":7,\"14\":2,\"16\":3,\"43\":1,\"44\":1,\"45\":2,\"46\":1,\"47\":2,\"48\":1,\"49\":2,\"50\":3,\"52\":8,\"53\":3,\"54\":2,\"55\":2,\"56\":6,\"57\":10,\"58\":3,\"59\":10,\"60\":6,\"61\":6,\"62\":5,\"63\":2,\"64\":2,\"65\":1,\"66\":1,\"67\":4,\"70\":2,\"72\":27,\"109\":3,\"111\":2,\"112\":1,\"125\":3,\"126\":2,\"127\":3,\"128\":1,\"129\":2,\"130\":5,\"131\":5,\"132\":4,\"133\":2,\"134\":4,\"135\":5,\"136\":1,\"137\":3,\"138\":3,\"139\":4,\"140\":1,\"141\":3,\"142\":5,\"143\":6,\"144\":3,\"145\":3,\"146\":8,\"147\":8,\"148\":4,\"149\":3,\"150\":7,\"151\":8,\"152\":1,\"153\":3,\"154\":6,\"155\":7,\"156\":1,\"157\":2,\"158\":2,\"159\":1,\"160\":4,\"161\":11}}],[\"env\",{\"1\":{\"62\":1,\"123\":2,\"161\":1}}],[\"entries\",{\"1\":{\"57\":1}}],[\"en\",{\"1\":{\"27\":1}}],[\"enable\",{\"1\":{\"72\":2}}],[\"enableprettier\",{\"1\":{\"14\":2,\"16\":2}}],[\"enablemarkdownlint\",{\"1\":{\"14\":2,\"16\":2}}],[\"enablestylelint\",{\"1\":{\"14\":2,\"16\":2}}],[\"enableeslint\",{\"1\":{\"14\":2,\"16\":2}}],[\"encodestudio\",{\"1\":{\"4\":1}}],[\"encode\",{\"0\":{\"5\":1,\"105\":1,\"109\":1,\"124\":1,\"125\":1,\"129\":1,\"133\":1,\"137\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1,\"162\":1,\"165\":1},\"1\":{\"3\":5,\"4\":1,\"5\":1,\"6\":5,\"8\":2,\"10\":14,\"12\":1,\"14\":6,\"16\":5,\"106\":1,\"107\":1,\"109\":1,\"111\":2,\"112\":1,\"127\":1,\"128\":1,\"131\":1,\"132\":3,\"135\":1,\"136\":1,\"139\":1,\"140\":1,\"143\":1,\"144\":2,\"147\":1,\"148\":3,\"151\":1,\"152\":1,\"155\":1,\"156\":1,\"159\":1,\"160\":3,\"161\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1}}],[\"npx\",{\"1\":{\"108\":2}}],[\"npmjs\",{\"1\":{\"115\":1}}],[\"npmignore\",{\"1\":{\"95\":1}}],[\"npm包\",{\"1\":{\"3\":1}}],[\"npm\",{\"1\":{\"2\":1,\"6\":1,\"8\":1,\"12\":1,\"67\":1,\"85\":1,\"106\":1,\"108\":1,\"109\":1,\"127\":1,\"131\":1,\"132\":1,\"135\":1,\"139\":1,\"143\":1,\"147\":1,\"148\":1,\"151\":1,\"155\":1,\"158\":1,\"163\":1,\"166\":1}}],[\"n\",{\"1\":{\"72\":10}}],[\"nginx\",{\"1\":{\"69\":1,\"85\":1}}],[\"native\",{\"1\":{\"85\":1}}],[\"nan\",{\"1\":{\"57\":1,\"61\":1}}],[\"namespace\",{\"1\":{\"72\":11}}],[\"named\",{\"1\":{\"56\":1,\"59\":2}}],[\"name=\",{\"1\":{\"29\":1,\"35\":2,\"39\":3}}],[\"name\",{\"1\":{\"23\":1,\"43\":2,\"50\":2,\"52\":2,\"54\":3,\"56\":2,\"57\":3,\"58\":5,\"63\":4,\"64\":6,\"72\":11}}],[\"nickname\",{\"1\":{\"54\":4}}],[\"nightingale\",{\"1\":{\"45\":3}}],[\"num++\",{\"1\":{\"60\":2}}],[\"num\",{\"1\":{\"53\":17,\"57\":10,\"60\":5,\"72\":3}}],[\"number>\",{\"1\":{\"72\":1}}],[\"numbers\",{\"1\":{\"57\":8}}],[\"number\",{\"1\":{\"21\":1,\"53\":7,\"57\":8,\"60\":1,\"63\":1,\"72\":40}}],[\"null\",{\"1\":{\"53\":1,\"56\":1,\"61\":1,\"62\":1,\"67\":1,\"72\":4}}],[\"nursing\",{\"1\":{\"45\":2}}],[\"never\",{\"1\":{\"72\":2}}],[\"next\",{\"1\":{\"72\":2}}],[\"nextnumber\",{\"1\":{\"57\":4}}],[\"nested\",{\"1\":{\"60\":1}}],[\"new\",{\"1\":{\"53\":8,\"55\":4,\"56\":2,\"57\":3,\"58\":1,\"63\":4,\"64\":3,\"67\":14,\"69\":1}}],[\"newline\",{\"1\":{\"19\":1,\"59\":1}}],[\"neue\",{\"1\":{\"21\":1}}],[\"noop\",{\"1\":{\"72\":2}}],[\"non\",{\"1\":{\"72\":3}}],[\"nocheck\",{\"1\":{\"72\":1}}],[\"nope\",{\"1\":{\"64\":1}}],[\"noa\",{\"1\":{\"56\":2}}],[\"note\",{\"1\":{\"67\":8}}],[\"notation\",{\"1\":{\"56\":1}}],[\"not\",{\"1\":{\"52\":1,\"53\":1,\"56\":1,\"57\":1,\"64\":2,\"168\":1}}],[\"no\",{\"1\":{\"21\":3,\"44\":2,\"47\":1,\"52\":6,\"53\":2,\"54\":1,\"55\":1,\"56\":2,\"57\":3,\"58\":2,\"59\":5,\"60\":5,\"61\":5,\"62\":5,\"63\":9,\"64\":2,\"67\":1,\"72\":8,\"111\":1,\"161\":1}}],[\"normal\",{\"1\":{\"20\":3,\"21\":1}}],[\"nodes\",{\"1\":{\"55\":2}}],[\"node\",{\"0\":{\"11\":1,\"66\":1,\"137\":2,\"153\":2},\"1\":{\"3\":2,\"6\":2,\"59\":1,\"62\":1,\"66\":1,\"67\":6,\"69\":3,\"70\":1,\"85\":1,\"124\":2,\"137\":2,\"140\":1,\"153\":2,\"156\":1,\"161\":1}}],[\"工具也与javascript\",{\"1\":{\"71\":1}}],[\"工具落地\",{\"1\":{\"17\":1}}],[\"工具\",{\"1\":{\"3\":1,\"5\":1,\"6\":1}}],[\"并修改\",{\"1\":{\"159\":1}}],[\"并启用了\",{\"1\":{\"129\":1,\"133\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1}}],[\"并不是\",{\"1\":{\"94\":1}}],[\"并不需要\",{\"1\":{\"36\":1}}],[\"并有实践经验\",{\"1\":{\"83\":2}}],[\"并未带来功能的逻辑变化\",{\"1\":{\"76\":1}}],[\"并以\",{\"1\":{\"75\":1}}],[\"并在当前位置开启调试器\",{\"1\":{\"62\":1}}],[\"并在得到确认后进行覆盖\",{\"1\":{\"10\":1}}],[\"并且短时间内也不涉及开源\",{\"1\":{\"92\":1}}],[\"并且标题太长也不利于浏览和信息获取\",{\"1\":{\"91\":1}}],[\"并且更易达成一致性\",{\"1\":{\"76\":1,\"96\":1}}],[\"并且使异常处理也变得清晰简单\",{\"1\":{\"69\":1}}],[\"并且确定遵循cjs命名空间规则\",{\"1\":{\"59\":1}}],[\"并且可能导致意想不到的结果\",{\"1\":{\"52\":1}}],[\"并且在其上方保留一行空行\",{\"1\":{\"23\":1}}],[\"并跟控制语句写在同一行\",{\"1\":{\"46\":1}}],[\"并按如下顺序排序\",{\"1\":{\"21\":1}}],[\"并配置保存时自动格式化\",{\"1\":{\"10\":1}}],[\"并根据规约内容定制了规则包\",{\"1\":{\"6\":1}}],[\"并根据规约内容定制了对应的规则包\",{\"1\":{\"3\":1}}],[\"并为项目配置\",{\"1\":{\"3\":1,\"6\":1}}],[\"并提供配套工具的最佳实践\",{\"1\":{\"2\":1}}],[\"📧\",{\"0\":{\"4\":1}}],[\"🛋️\",{\"0\":{\"3\":1}}],[\"💡\",{\"0\":{\"2\":1}}],[\"对\",{\"1\":{\"160\":1}}],[\"对代码的格式化改动\",{\"1\":{\"94\":1}}],[\"对信息降噪处理等等\",{\"1\":{\"74\":1}}],[\"对应的指令注释也不应再出现\",{\"1\":{\"72\":1}}],[\"对数组类型的定义使用相同的规范将帮助开发者更快地理解和阅读类型\",{\"1\":{\"72\":1}}],[\"对数组某项和对象某属性的修改并不是重新赋值\",{\"1\":{\"52\":1}}],[\"对接口入参严格校验\",{\"1\":{\"68\":1}}],[\"对象字面量应该直接声明\",{\"1\":{\"72\":1}}],[\"对象字面量禁止类型断言\",{\"1\":{\"72\":1}}],[\"对象属性的\",{\"1\":{\"64\":1}}],[\"对象的动态属性名应直接写在字面量定义中\",{\"1\":{\"56\":1}}],[\"对象的属性名不要用引号包裹\",{\"1\":{\"56\":1}}],[\"对象\",{\"0\":{\"56\":1},\"1\":{\"57\":3,\"61\":1,\"64\":1,\"67\":1,\"72\":1}}],[\"对象相当于\",{\"1\":{\"53\":2}}],[\"对页面的渲染造成影响\",{\"1\":{\"30\":1}}],[\"对于某些已存在功能所发生的逻辑变化\",{\"1\":{\"76\":1}}],[\"对于容易类型推倒出的变量\",{\"1\":{\"72\":1}}],[\"对于有漏洞或者过期的依赖要及时升级或替换\",{\"1\":{\"68\":1}}],[\"对于不熟悉\",{\"1\":{\"60\":1}}],[\"对于空的代码块\",{\"1\":{\"47\":1}}],[\"对于空代码块\",{\"1\":{\"47\":1}}],[\"对于非空的代码块\",{\"1\":{\"47\":1}}],[\"对于非空代码块\",{\"1\":{\"47\":1}}],[\"对于逗号分隔的多行结构\",{\"1\":{\"45\":2}}],[\"对于\",{\"1\":{\"23\":2}}],[\"对于是否省略小数点前的\",{\"1\":{\"21\":1}}],[\"对于存量代码不符合规范的问题\",{\"1\":{\"2\":1}}],[\"对本次代码提交message的格式进行扫描\",{\"1\":{\"2\":1}}],[\"对提交文件进行编码规范的扫描\",{\"1\":{\"2\":1}}],[\"以免全局变量被\",{\"1\":{\"161\":1}}],[\"以免创建一个临时数组\",{\"1\":{\"55\":1}}],[\"以解析\",{\"1\":{\"161\":1}}],[\"以引起开发者的足够重视\",{\"1\":{\"160\":1}}],[\"以淘宝详情页为例\",{\"1\":{\"95\":1}}],[\"以外禁止使用\",{\"1\":{\"72\":1}}],[\"以增加可读性\",{\"1\":{\"63\":2}}],[\"以增强可读性\",{\"1\":{\"34\":1}}],[\"以下简称\",{\"1\":{\"74\":1}}],[\"以下两种\",{\"1\":{\"58\":1}}],[\"以下数组方法\",{\"1\":{\"55\":1}}],[\"以方便后续可能要增加参数\",{\"1\":{\"57\":2}}],[\"以方便后续在函数体内增加语句\",{\"1\":{\"57\":2}}],[\"以使代码更简洁\",{\"1\":{\"57\":1}}],[\"以达到易于调试\",{\"1\":{\"57\":1}}],[\"以便区分\",{\"1\":{\"36\":1}}],[\"以便统一\",{\"1\":{\"29\":1}}],[\"以\",{\"1\":{\"36\":1,\"159\":1}}],[\"以防止出现页面渲染的阻塞\",{\"1\":{\"30\":1}}],[\"以指出文档的语言\",{\"1\":{\"28\":1}}],[\"以往的优势也会慢慢消失\",{\"1\":{\"23\":1}}],[\"以验证安装成功\",{\"1\":{\"8\":1}}],[\"以交互式形式一键接入\",{\"1\":{\"2\":1}}],[\"以及\",{\"1\":{\"53\":1}}],[\"以及如何将单元测试植入配套工具的具体实现\",{\"1\":{\"2\":1}}],[\"以及如何将发包流程植入\",{\"1\":{\"2\":1}}],[\"以及changlog的自动化更新部署\",{\"1\":{\"2\":1}}],[\"m\",{\"1\":{\"98\":1,\"103\":1}}],[\"mx\",{\"1\":{\"72\":2}}],[\"mz\",{\"1\":{\"67\":2}}],[\"multiply\",{\"1\":{\"57\":5}}],[\"multiple\",{\"1\":{\"57\":2}}],[\"multi\",{\"1\":{\"52\":1}}],[\"message\",{\"0\":{\"93\":1},\"1\":{\"76\":1,\"89\":1,\"90\":1,\"94\":1,\"96\":4,\"104\":1,\"105\":1}}],[\"messages\",{\"1\":{\"62\":2}}],[\"member\",{\"1\":{\"59\":1,\"72\":5}}],[\"members\",{\"1\":{\"58\":1,\"72\":3}}],[\"memory\",{\"1\":{\"101\":1}}],[\"memo\",{\"1\":{\"55\":5}}],[\"me\",{\"1\":{\"57\":1}}],[\"method\",{\"1\":{\"50\":2,\"58\":4,\"72\":2}}],[\"meanwhileonthefalcon\",{\"1\":{\"44\":2}}],[\"md\",{\"1\":{\"75\":10}}],[\"mdn\",{\"1\":{\"38\":1}}],[\"mdo\",{\"1\":{\"24\":1,\"40\":1}}],[\"mysql\",{\"1\":{\"85\":1}}],[\"mymodule\",{\"1\":{\"72\":1}}],[\"myclass\",{\"1\":{\"72\":1}}],[\"myfield4\",{\"1\":{\"72\":1}}],[\"myfield3\",{\"1\":{\"72\":1}}],[\"myfield2\",{\"1\":{\"72\":2}}],[\"myfield1\",{\"1\":{\"72\":2}}],[\"myfunc\",{\"1\":{\"52\":8}}],[\"mytype\",{\"1\":{\"72\":1}}],[\"myobj\",{\"1\":{\"55\":5}}],[\"myarray\",{\"1\":{\"55\":6}}],[\"my\",{\"1\":{\"30\":1,\"64\":3,\"72\":6}}],[\"mixed\",{\"1\":{\"60\":1}}],[\"mixin\",{\"1\":{\"23\":9}}],[\"mini\",{\"1\":{\"85\":2}}],[\"minimum\",{\"1\":{\"29\":1,\"39\":1}}],[\"min\",{\"1\":{\"30\":1}}],[\"ms\",{\"1\":{\"21\":1}}],[\"msg\",{\"1\":{\"10\":1,\"62\":2,\"108\":2}}],[\"msg钩子\",{\"1\":{\"2\":1}}],[\"mm\",{\"1\":{\"21\":1,\"76\":1}}],[\"master\",{\"1\":{\"101\":1,\"102\":1}}],[\"mac\",{\"1\":{\"85\":2}}],[\"macbook\",{\"1\":{\"85\":3}}],[\"makestyleguide\",{\"1\":{\"64\":2}}],[\"make\",{\"1\":{\"63\":8}}],[\"maythefourth\",{\"1\":{\"56\":2}}],[\"math\",{\"1\":{\"55\":3}}],[\"map\",{\"1\":{\"55\":6,\"57\":14}}],[\"main\",{\"1\":{\"30\":1}}],[\"max\",{\"1\":{\"19\":2,\"20\":1,\"50\":3,\"55\":2,\"57\":1,\"61\":1}}],[\"markdown\",{\"1\":{\"75\":1}}],[\"markdownlintoptions\",{\"1\":{\"16\":1}}],[\"markdownlintignore\",{\"1\":{\"10\":1}}],[\"markdownlint\",{\"0\":{\"162\":1},\"1\":{\"2\":1,\"3\":2,\"6\":2,\"10\":5,\"14\":1,\"16\":4,\"162\":1,\"163\":3,\"164\":2}}],[\"margin\",{\"1\":{\"19\":8,\"21\":7,\"23\":3}}],[\"mocha\",{\"1\":{\"85\":1}}],[\"mobile\",{\"1\":{\"85\":2}}],[\"mozilla\",{\"1\":{\"81\":2}}],[\"mongodb\",{\"1\":{\"85\":1}}],[\"mongoose\",{\"1\":{\"67\":8}}],[\"monorepo\",{\"1\":{\"2\":1,\"95\":1}}],[\"moment\",{\"1\":{\"67\":8}}],[\"mountain\",{\"1\":{\"48\":2}}],[\"morepossiblevalues\",{\"1\":{\"72\":1}}],[\"more\",{\"1\":{\"22\":2,\"57\":1,\"72\":1}}],[\"modal=\",{\"1\":{\"36\":2}}],[\"mod\",{\"1\":{\"30\":3}}],[\"model\",{\"1\":{\"100\":1}}],[\"models\",{\"1\":{\"67\":4}}],[\"modern\",{\"1\":{\"45\":2}}],[\"mode\",{\"1\":{\"21\":2}}],[\"module会有比较严重的兼容性问题\",{\"1\":{\"59\":1}}],[\"modules\",{\"1\":{\"59\":3}}],[\"module\",{\"1\":{\"16\":1,\"59\":2,\"72\":12,\"107\":1,\"111\":1,\"112\":1}}],[\"c++\",{\"1\":{\"83\":2}}],[\"cpu\",{\"1\":{\"69\":2}}],[\"cp\",{\"1\":{\"67\":1}}],[\"cycle\",{\"1\":{\"59\":1}}],[\"c\",{\"1\":{\"52\":9,\"53\":2,\"55\":6,\"56\":11,\"60\":10,\"72\":2,\"83\":2}}],[\"current\",{\"1\":{\"63\":4}}],[\"curly\",{\"1\":{\"48\":1}}],[\"curlynonblock\",{\"1\":{\"46\":1}}],[\"cursor\",{\"1\":{\"21\":1}}],[\"create\",{\"1\":{\"56\":1}}],[\"createhero\",{\"1\":{\"45\":5}}],[\"crossorigin\",{\"1\":{\"30\":1}}],[\"cdn\",{\"1\":{\"30\":1,\"69\":1}}],[\"ccc\",{\"1\":{\"23\":1}}],[\"cells\",{\"1\":{\"21\":1}}],[\"center\",{\"1\":{\"21\":1}}],[\"can\",{\"1\":{\"72\":1}}],[\"cannot\",{\"1\":{\"55\":1}}],[\"car\",{\"1\":{\"67\":8}}],[\"cap\",{\"1\":{\"64\":1}}],[\"caption\",{\"1\":{\"21\":1}}],[\"camelcase\",{\"1\":{\"64\":3}}],[\"calculator\",{\"1\":{\"63\":1}}],[\"callstat\",{\"1\":{\"69\":1}}],[\"call\",{\"1\":{\"56\":2,\"57\":4,\"61\":1}}],[\"callback\",{\"1\":{\"55\":1,\"57\":1}}],[\"casting\",{\"1\":{\"72\":1}}],[\"cast\",{\"1\":{\"53\":1}}],[\"case\",{\"1\":{\"21\":1,\"61\":10,\"72\":1}}],[\"catch\",{\"1\":{\"47\":4,\"67\":1}}],[\"cmd\",{\"1\":{\"59\":1}}],[\"cm\",{\"1\":{\"21\":1}}],[\"chore\",{\"1\":{\"94\":1,\"95\":1}}],[\"changes\",{\"1\":{\"76\":1}}],[\"changed\",{\"1\":{\"76\":1}}],[\"change\",{\"1\":{\"76\":2,\"98\":1}}],[\"changelog是必需的\",{\"1\":{\"74\":1}}],[\"changelog\",{\"0\":{\"73\":1},\"1\":{\"74\":9,\"75\":12,\"76\":5,\"78\":4,\"80\":1,\"89\":1,\"94\":2}}],[\"chain\",{\"1\":{\"72\":1}}],[\"chaining\",{\"1\":{\"72\":2}}],[\"chart\",{\"1\":{\"45\":2}}],[\"charset=\",{\"1\":{\"29\":2,\"31\":1,\"39\":1}}],[\"child\",{\"1\":{\"58\":6,\"67\":1}}],[\"children\",{\"1\":{\"19\":2}}],[\"chenghuai\",{\"1\":{\"44\":4,\"117\":2}}],[\"check\",{\"1\":{\"72\":1}}],[\"checkuserpermission\",{\"1\":{\"52\":3}}],[\"checked\",{\"1\":{\"36\":2}}],[\"checked=\",{\"1\":{\"36\":1}}],[\"checkbox\",{\"1\":{\"36\":2}}],[\"chrome\",{\"1\":{\"30\":1,\"85\":1}}],[\"ch\",{\"1\":{\"21\":1}}],[\"closed\",{\"1\":{\"97\":1}}],[\"closes\",{\"1\":{\"97\":1}}],[\"close\",{\"1\":{\"97\":10}}],[\"clark\",{\"1\":{\"48\":2}}],[\"class=\",{\"1\":{\"33\":1,\"37\":8}}],[\"class^=\",{\"1\":{\"20\":2}}],[\"class\",{\"1\":{\"20\":1,\"58\":17,\"63\":1,\"64\":2,\"69\":1,\"72\":15}}],[\"clearfix\",{\"1\":{\"23\":2}}],[\"clear\",{\"1\":{\"21\":1}}],[\"client\",{\"1\":{\"123\":2}}],[\"clip\",{\"1\":{\"21\":1}}],[\"cli\",{\"0\":{\"7\":1},\"1\":{\"3\":3,\"6\":1,\"106\":2}}],[\"cwd\",{\"1\":{\"14\":1}}],[\"cn\",{\"1\":{\"4\":1,\"28\":1,\"39\":1,\"81\":2}}],[\"css定义其格式与样式\",{\"1\":{\"81\":1}}],[\"css\",{\"0\":{\"17\":1,\"18\":1},\"1\":{\"3\":1,\"6\":1,\"17\":1,\"19\":2,\"20\":2,\"21\":4,\"22\":4,\"23\":5,\"24\":3,\"30\":11,\"36\":2,\"37\":1,\"39\":1,\"40\":1,\"81\":1,\"85\":1,\"94\":1,\"165\":1}}],[\"core\",{\"1\":{\"126\":1,\"127\":1,\"130\":1,\"131\":1,\"134\":1,\"135\":1,\"138\":1,\"139\":1}}],[\"cookie\",{\"1\":{\"68\":1,\"81\":2}}],[\"copy\",{\"1\":{\"56\":10}}],[\"coxcomb\",{\"1\":{\"45\":2}}],[\"cover\",{\"1\":{\"29\":1}}],[\"code\",{\"1\":{\"24\":1,\"40\":1,\"72\":5}}],[\"counter\",{\"1\":{\"21\":1}}],[\"column\",{\"1\":{\"21\":1}}],[\"columns\",{\"1\":{\"21\":1}}],[\"color`\",{\"1\":{\"77\":1}}],[\"color\",{\"1\":{\"19\":6,\"21\":10,\"23\":1}}],[\"colon\",{\"1\":{\"19\":2}}],[\"conventions\",{\"1\":{\"104\":1}}],[\"conventional\",{\"1\":{\"78\":1,\"104\":1}}],[\"confusing\",{\"1\":{\"72\":1}}],[\"confirm\",{\"1\":{\"62\":1}}],[\"configuring\",{\"1\":{\"161\":1}}],[\"configurable\",{\"1\":{\"63\":1}}],[\"config\",{\"0\":{\"105\":1,\"124\":1,\"125\":1,\"129\":1,\"133\":1,\"137\":1,\"141\":1,\"145\":1,\"149\":1,\"153\":1,\"162\":1,\"165\":1},\"1\":{\"3\":4,\"6\":4,\"10\":9,\"14\":2,\"16\":2,\"66\":1,\"106\":1,\"107\":2,\"111\":1,\"121\":1,\"127\":1,\"128\":1,\"131\":1,\"132\":3,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"143\":1,\"144\":2,\"147\":1,\"148\":3,\"151\":1,\"152\":1,\"154\":1,\"155\":2,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":3,\"161\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1}}],[\"concat\",{\"1\":{\"55\":1}}],[\"congratulations\",{\"1\":{\"50\":2}}],[\"consistent\",{\"1\":{\"72\":2}}],[\"console\",{\"1\":{\"48\":8,\"49\":6,\"50\":4,\"52\":20,\"53\":2,\"56\":4,\"57\":10,\"58\":3,\"62\":7,\"63\":2,\"67\":4,\"69\":1,\"72\":8}}],[\"constant\",{\"1\":{\"64\":1}}],[\"constructor\",{\"1\":{\"55\":1,\"58\":17,\"63\":2,\"64\":1,\"72\":4}}],[\"const\",{\"1\":{\"44\":6,\"45\":10,\"48\":10,\"49\":2,\"50\":2,\"52\":37,\"53\":23,\"54\":6,\"55\":29,\"56\":31,\"57\":25,\"58\":2,\"59\":7,\"60\":17,\"61\":2,\"62\":7,\"63\":8,\"64\":14,\"67\":43,\"69\":5,\"72\":39}}],[\"condition5\",{\"1\":{\"61\":1}}],[\"condition4\",{\"1\":{\"61\":1}}],[\"condition2\",{\"1\":{\"61\":1}}],[\"condition1\",{\"1\":{\"61\":1}}],[\"condition\",{\"1\":{\"47\":4}}],[\"contributing\",{\"1\":{\"75\":1}}],[\"containing\",{\"1\":{\"57\":4}}],[\"container\",{\"1\":{\"23\":1,\"39\":1}}],[\"contents\",{\"1\":{\"58\":2}}],[\"content=\",{\"1\":{\"29\":1,\"35\":2,\"39\":3}}],[\"content\",{\"1\":{\"21\":1,\"67\":2}}],[\"com>\",{\"1\":{\"96\":4}}],[\"computer\",{\"1\":{\"83\":2}}],[\"computers\",{\"1\":{\"45\":2}}],[\"compare\",{\"1\":{\"77\":2}}],[\"company\",{\"1\":{\"33\":2}}],[\"compile\",{\"1\":{\"72\":1}}],[\"components\",{\"1\":{\"59\":2}}],[\"component\",{\"1\":{\"59\":8,\"101\":1}}],[\"complexity\",{\"1\":{\"57\":1}}],[\"commonjs\",{\"1\":{\"59\":1}}],[\"common\",{\"1\":{\"23\":1}}],[\"comments\",{\"1\":{\"63\":1}}],[\"comment\",{\"1\":{\"19\":11,\"63\":1,\"72\":2}}],[\"command\",{\"1\":{\"161\":1}}],[\"comma\",{\"1\":{\"19\":2,\"45\":2,\"72\":1}}],[\"commits\",{\"1\":{\"104\":1}}],[\"committer\",{\"1\":{\"96\":2}}],[\"commit\",{\"1\":{\"3\":1,\"6\":1,\"10\":5,\"94\":1,\"97\":2,\"104\":1,\"105\":1,\"108\":2}}],[\"commit钩子\",{\"1\":{\"2\":1}}],[\"commitlint\",{\"0\":{\"105\":1},\"1\":{\"2\":1,\"3\":2,\"6\":2,\"10\":5,\"105\":1,\"106\":3,\"107\":2,\"108\":3,\"121\":1}}],[\"combinator\",{\"1\":{\"19\":2}}],[\"com\",{\"1\":{\"4\":1,\"30\":3,\"50\":2,\"59\":1,\"77\":6,\"115\":1,\"117\":2}}],[\"city\",{\"1\":{\"50\":2}}],[\"ci\",{\"1\":{\"2\":1}}],[\"包的一些配置\",{\"1\":{\"10\":1}}],[\"包的管理方式\",{\"1\":{\"2\":1}}],[\"包括但不限于\",{\"1\":{\"80\":1}}],[\"包括但不限于eslint\",{\"1\":{\"2\":1}}],[\"包括\",{\"1\":{\"10\":3,\"57\":1,\"114\":1}}],[\"包\",{\"1\":{\"6\":1,\"67\":1}}],[\"学习如何对新项目添加规范\",{\"1\":{\"2\":1}}],[\"学习如何对存量项目进行优化\",{\"1\":{\"2\":1}}],[\"学习如何通过脚手架的方式\",{\"1\":{\"2\":1}}],[\"学习如何通过\",{\"1\":{\"2\":1}}],[\"学习现有前端前沿的研发流程下\",{\"1\":{\"2\":1}}],[\"和上文\",{\"1\":{\"101\":1}}],[\"和链接\",{\"1\":{\"76\":1}}],[\"和命名空间\",{\"1\":{\"72\":1}}],[\"和属性值之间保留一个空格\",{\"1\":{\"19\":1}}],[\"和规则包众多且零散\",{\"1\":{\"6\":1}}],[\"和\",{\"0\":{\"23\":1},\"1\":{\"2\":1,\"3\":1,\"6\":1,\"10\":3,\"15\":2,\"16\":2,\"21\":2,\"23\":4,\"30\":5,\"52\":7,\"55\":2,\"57\":1,\"58\":1,\"60\":5,\"62\":1,\"67\":1,\"72\":2,\"75\":1,\"90\":1,\"91\":1,\"94\":1,\"114\":1,\"115\":1,\"119\":1,\"122\":1,\"129\":1,\"153\":1,\"157\":1,\"166\":1}}],[\"如对\",{\"1\":{\"160\":1}}],[\"如跟踪分析用户行为等\",{\"1\":{\"81\":2}}],[\"如用户自定义设置\",{\"1\":{\"81\":2}}],[\"如用户登录状态\",{\"1\":{\"81\":2}}],[\"如下\",{\"1\":{\"72\":1,\"159\":1}}],[\"如有提过\",{\"1\":{\"76\":1}}],[\"如有解构引用情况\",{\"1\":{\"67\":1}}],[\"如有必要\",{\"1\":{\"63\":1}}],[\"如动态\",{\"1\":{\"67\":1}}],[\"如函数\",{\"1\":{\"63\":1}}],[\"如无特殊需求\",{\"1\":{\"67\":2}}],[\"如无特殊要求\",{\"1\":{\"29\":1}}],[\"如无必要\",{\"1\":{\"63\":1}}],[\"如浏览器环境中的\",{\"1\":{\"62\":1}}],[\"如使用\",{\"1\":{\"57\":1}}],[\"如产生全局变量\",{\"1\":{\"52\":1}}],[\"如条件语句\",{\"1\":{\"47\":1}}],[\"如启用的功能等\",{\"1\":{\"10\":1}}],[\"如果觉得本包开启的某条规则过于严格\",{\"1\":{\"161\":1}}],[\"如果需要无障碍能力\",{\"1\":{\"132\":1,\"148\":1}}],[\"如果需要对用户弹出警告信息\",{\"1\":{\"62\":1}}],[\"如果无关\",{\"1\":{\"101\":1}}],[\"如果无参数的\",{\"1\":{\"23\":1}}],[\"如果本次提交的改动是破坏性的\",{\"1\":{\"98\":1}}],[\"如果使用英语\",{\"1\":{\"76\":1}}],[\"如果您使用的是\",{\"1\":{\"72\":1}}],[\"如果类的属性是一个字面量\",{\"1\":{\"72\":1}}],[\"如果只在同文件内使用\",{\"1\":{\"64\":1}}],[\"如果只是想设置某一个属性\",{\"1\":{\"21\":1}}],[\"如果所有用\",{\"1\":{\"64\":1}}],[\"如果是空字符串\",{\"1\":{\"61\":1}}],[\"如果是\",{\"1\":{\"61\":1,\"95\":1}}],[\"如果有意省略\",{\"1\":{\"61\":2}}],[\"如果要比较的两个值类型不同\",{\"1\":{\"60\":1}}],[\"如果一个\",{\"1\":{\"57\":1,\"61\":1}}],[\"如果必须使用过多的参数\",{\"1\":{\"57\":1}}],[\"如果必须使用空块\",{\"1\":{\"47\":1}}],[\"如果函数的参数过多\",{\"1\":{\"57\":1}}],[\"如果你对\",{\"1\":{\"161\":1}}],[\"如果你觉得风格问题不足以是\",{\"1\":{\"160\":1}}],[\"如果你的项目使用\",{\"1\":{\"157\":1}}],[\"如果你的网站只支持\",{\"1\":{\"118\":1}}],[\"如果你的模块是2者都要兼容的\",{\"1\":{\"59\":1}}],[\"如果你的模块是只面向node\",{\"1\":{\"59\":1}}],[\"如果你的模块是只面向浏览器的则选择esm\",{\"1\":{\"59\":1}}],[\"如果你在开发一个业务应用\",{\"1\":{\"74\":1}}],[\"如果你在维护一个开源项目\",{\"1\":{\"74\":1}}],[\"如果你非要使用\",{\"1\":{\"62\":1}}],[\"如果你出于属性的含义或其他考虑进行排序也是允许的\",{\"1\":{\"56\":1}}],[\"如果你想按变量的含义排序分组也是允许的\",{\"1\":{\"52\":1}}],[\"如果你想对\",{\"1\":{\"10\":1}}],[\"如果以\",{\"1\":{\"53\":2}}],[\"如果变量与外层已存在变量同名\",{\"1\":{\"52\":1}}],[\"如果权限校验\",{\"1\":{\"52\":1}}],[\"如果在声明前就使用变量\",{\"1\":{\"52\":1}}],[\"如果\",{\"1\":{\"47\":2,\"60\":1,\"64\":1}}],[\"如果它们存在于其他文件\",{\"1\":{\"23\":1}}],[\"如果选择器的顺序发生变化\",{\"1\":{\"23\":1}}],[\"如果选择使用\",{\"1\":{\"10\":1}}],[\"如果配置\",{\"1\":{\"14\":3}}],[\"如果不配置默认值为\",{\"1\":{\"14\":1}}],[\"如果不配置\",{\"1\":{\"14\":3}}],[\"如果项目的\",{\"1\":{\"10\":1}}],[\"如果项目已经配置过\",{\"1\":{\"10\":1}}],[\"如果我们能够产出一套完整化的前端编码规范工具\",{\"1\":{\"1\":1}}],[\"如\",{\"1\":{\"10\":2,\"20\":1,\"21\":4,\"57\":1,\"59\":1,\"64\":1,\"67\":1,\"83\":2,\"84\":2,\"96\":1,\"161\":1}}],[\"如何在团队内进行最小成本的推广\",{\"1\":{\"1\":1}}],[\"如何制定前端团队的代码规范\",{\"1\":{\"1\":1}}],[\"那么就可以每发布一个新的版本就单独拉一个新的分支\",{\"1\":{\"102\":1}}],[\"那么提供一个\",{\"1\":{\"74\":1}}],[\"那么该类型与被继承的类型等效\",{\"1\":{\"72\":1}}],[\"那么最后的\",{\"1\":{\"61\":1}}],[\"那么这个\",{\"1\":{\"57\":1}}],[\"那么\",{\"1\":{\"1\":1,\"74\":1}}],[\"一列查看\",{\"1\":{\"161\":1}}],[\"一般指\",{\"1\":{\"97\":1}}],[\"一般使用祈使句式\",{\"1\":{\"96\":1}}],[\"一般是变量被使用前\",{\"1\":{\"52\":1}}],[\"一般情况下我们应该使用严格比较运算符\",{\"1\":{\"60\":1}}],[\"一般情况下\",{\"1\":{\"30\":1}}],[\"一条声明语句声明一个变量\",{\"1\":{\"52\":1}}],[\"一元运算符与操作对象间不应有空格\",{\"1\":{\"48\":1}}],[\"一千个职业梦想的赞助商\",{\"1\":{\"39\":1}}],[\"一个成功的\",{\"1\":{\"104\":1}}],[\"一个对象\",{\"1\":{\"64\":1}}],[\"一个常量\",{\"1\":{\"64\":1}}],[\"一个常见的误用是\",{\"1\":{\"55\":1}}],[\"一个我们不愿看到却很普遍的情况是\",{\"1\":{\"63\":1}}],[\"一个元素中\",{\"1\":{\"36\":1}}],[\"一个具有普适性的标准是必不可少的\",{\"1\":{\"1\":1}}],[\"一致性更强\",{\"1\":{\"21\":1}}],[\"一致性的代码规范可以增强团队开发协作效率\",{\"1\":{\"1\":1}}],[\"一键接入\",{\"0\":{\"10\":1}}],[\"一键升级\",{\"1\":{\"3\":1,\"6\":1}}],[\"一键修复\",{\"1\":{\"3\":1,\"6\":1}}],[\"一键扫描和修复规约问题\",{\"1\":{\"5\":1}}],[\"一键扫描\",{\"1\":{\"3\":1,\"6\":1}}],[\"一键式的修复存量问题\",{\"1\":{\"2\":1}}],[\"但通常被称为\",{\"1\":{\"83\":2}}],[\"但需要跟随一定长度的描述说明\",{\"1\":{\"72\":1}}],[\"但需要注意的是\",{\"1\":{\"23\":1}}],[\"但因为一些原因还没法修复\",{\"1\":{\"63\":1}}],[\"但对于只有一个或两个条件分支的情况\",{\"1\":{\"61\":1}}],[\"但对于新业务\",{\"1\":{\"29\":1}}],[\"但出于习惯\",{\"1\":{\"60\":1}}],[\"但出于一致性和可读性考虑\",{\"1\":{\"46\":1}}],[\"但这不利于代码的可读性和一致性\",{\"1\":{\"59\":1}}],[\"但这样做会令人疑惑\",{\"1\":{\"52\":1}}],[\"但这样做可能给人带来疑惑和隐患\",{\"1\":{\"52\":1}}],[\"但你也可以选择始终加上小括号\",{\"1\":{\"57\":1}}],[\"但你也可以选择始终加上大括号和\",{\"1\":{\"57\":1}}],[\"但你也可以零配置使用\",{\"1\":{\"16\":1}}],[\"但有时难以保证所有的浏览器和\",{\"1\":{\"53\":1}}],[\"但如果空代码块在多块结构中\",{\"1\":{\"47\":1}}],[\"但提升网站的可访问性也可以让其他用户群体受益\",{\"1\":{\"38\":1}}],[\"但保留它们可以明确表达该标签已闭合的语义\",{\"1\":{\"35\":1}}],[\"但不推荐在\",{\"1\":{\"30\":1}}],[\"但不同的处理器语言也同时增加了项目的维护成本\",{\"1\":{\"23\":1}}],[\"但是又不想使用\",{\"1\":{\"102\":1}}],[\"但是\",{\"1\":{\"23\":1,\"36\":1}}],[\"但是使用分号可以增加代码的一致性和易用性\",{\"1\":{\"19\":1}}],[\"但是每个人的代码编写喜好不同\",{\"1\":{\"1\":1}}],[\"但却没有一套完整的工程化产出来助力研发同学实现规范落地\",{\"1\":{\"1\":1}}],[\"但同时也存在一系列问题\",{\"1\":{\"1\":1}}],[\"⭐\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}";